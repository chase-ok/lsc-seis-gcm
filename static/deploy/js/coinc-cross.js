var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if(ctor.instance_) {
      return ctor.instance_
    }
    if(goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor
    }
    return ctor.instance_ = new ctor
  }
};
goog.instantiatedSingletons_ = [];
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str))
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  })
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase()
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase()
  })
};
goog.string.parseInt = function(value) {
  if(isFinite(value)) {
    value = String(value)
  }
  if(goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10)
  }
  return NaN
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if(Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error)
  }else {
    this.stack = (new Error).stack || ""
  }
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
  return value
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.toArray = function(object) {
  var length = object.length;
  if(length > 0) {
    var rv = new Array(length);
    for(var i = 0;i < length;i++) {
      rv[i] = object[i]
    }
    return rv
  }
  return[]
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if(opt_a2 != null) {
    for(var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i]
    }
  }
  return this
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = ""
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f
};
goog.exportSymbol("cljs.core.set_print_fn_BANG_", cljs.core.set_print_fn_BANG_);
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:flush-on-newline", cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0:readably", cljs.core._STAR_print_readably_STAR_, "\ufdd0:meta", cljs.core._STAR_print_meta_STAR_, "\ufdd0:dup", cljs.core._STAR_print_dup_STAR_], true)
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number"
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3941__auto__ = goog.isString(x);
  if(and__3941__auto__) {
    return!(x.charAt(0) === "\ufdd0")
  }else {
    return and__3941__auto__
  }
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__$1 = x == null ? null : x;
  if(p[goog.typeOf(x__$1)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0:else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3941__auto__ = ty;
    if(cljs.core.truth_(and__3941__auto__)) {
      return ty.cljs$lang$type
    }else {
      return and__3941__auto__
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__6063__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__6063 = function(array, i, var_args) {
      var idxs = null;
      if(arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6063__delegate.call(this, array, i, idxs)
    };
    G__6063.cljs$lang$maxFixedArity = 2;
    G__6063.cljs$lang$applyTo = function(arglist__6064) {
      var array = cljs.core.first(arglist__6064);
      arglist__6064 = cljs.core.next(arglist__6064);
      var i = cljs.core.first(arglist__6064);
      var idxs = cljs.core.rest(arglist__6064);
      return G__6063__delegate(array, i, idxs)
    };
    G__6063.cljs$core$IFn$_invoke$arity$variadic = G__6063__delegate;
    return G__6063
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array
}();
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2942__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._count[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._count["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._empty[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._empty["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._conj[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2942__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2942__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._first[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rest[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._next[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2942__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2942__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._key[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._val[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._val["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._peek[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._peek["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._pop[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2942__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2942__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref_with_timeout["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2942__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._meta[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2942__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._with_meta[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._with_meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2942__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2942__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__2942__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._kv_reduce[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._kv_reduce["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2942__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._equiv[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._equiv["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2942__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._hash[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._hash["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2942__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._seq[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rseq[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rseq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq_from["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._entry_key[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._entry_key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._comparator[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._comparator["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IWriter = {};
cljs.core._write = function _write(writer, s) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s)
  }else {
    var x__2942__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._write[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._write["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s)
  }
};
cljs.core._flush = function _flush(writer) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer)
  }else {
    var x__2942__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._flush[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._flush["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer)
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts)
  }else {
    var x__2942__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._pr_writer[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pr_writer["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3941__auto__ = d;
    if(and__3941__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2942__auto__ = d == null ? null : d;
    return function() {
      var or__3943__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._realized_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._notify_watches[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._notify_watches["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._add_watch[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._remove_watch[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._as_transient[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._as_transient["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2942__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2942__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._persistent_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2942__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2942__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2942__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2942__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2942__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2942__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._compare[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._compare["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._drop_first[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._drop_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_first[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_rest[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2942__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_next[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INamed = {};
cljs.core._name = function _name(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_name$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x)
  }else {
    var x__2942__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._name[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._name["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._namespace = function _namespace(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x)
  }else {
    var x__2942__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._namespace[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._namespace["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x)
  }
};
goog.provide("cljs.core.StringBufferWriter");
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  return self__.sb.append(s)
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  return null
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("")
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol
};
goog.provide("cljs.core.Symbol");
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/Symbol")
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  return cljs.core._write.call(null, writer, self__.str)
};
cljs.core.Symbol.prototype.cljs$core$INamed$ = true;
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  return self__.name
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  return self__.ns
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  if(self__._hash === -1) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name));
    return self__._hash
  }else {
    return self__._hash
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta)
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__._meta
};
cljs.core.Symbol.prototype.call = function() {
  var G__6066 = null;
  var G__6066__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null)
  };
  var G__6066__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found)
  };
  G__6066 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6066__2.call(this, self__, coll);
      case 3:
        return G__6066__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6066
}();
cljs.core.Symbol.prototype.apply = function(self__, args6065) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args6065.slice()))
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  if(other instanceof cljs.core.Symbol) {
    return self__.str === other.str
  }else {
    return false
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(name instanceof cljs.core.Symbol) {
      return name
    }else {
      return symbol.call(null, null, name)
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, -1, null)
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol
}();
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__6068 = coll;
      if(G__6068) {
        if(function() {
          var or__3943__auto__ = G__6068.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__6068.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._seq.call(null, coll)
    }else {
      if(coll instanceof Array) {
        if(coll.length === 0) {
          return null
        }else {
          return new cljs.core.IndexedSeq(coll, 0)
        }
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          if(coll.length === 0) {
            return null
          }else {
            return new cljs.core.IndexedSeq(coll, 0)
          }
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, coll)) {
            return cljs.core._seq.call(null, coll)
          }else {
            if("\ufdd0:else") {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__6070 = coll;
      if(G__6070) {
        if(function() {
          var or__3943__auto__ = G__6070.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__6070.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s == null) {
        return null
      }else {
        return cljs.core._first.call(null, s)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__6072 = coll;
      if(G__6072) {
        if(function() {
          var or__3943__auto__ = G__6072.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__6072.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(!(s == null)) {
        return cljs.core._rest.call(null, s)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__6074 = coll;
      if(G__6074) {
        if(function() {
          var or__3943__auto__ = G__6074.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__6074.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3943__auto__ = x === y;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__6075__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__6076 = y;
            var G__6077 = cljs.core.first.call(null, more);
            var G__6078 = cljs.core.next.call(null, more);
            x = G__6076;
            y = G__6077;
            more = G__6078;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__6075 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6075__delegate.call(this, x, y, more)
    };
    G__6075.cljs$lang$maxFixedArity = 2;
    G__6075.cljs$lang$applyTo = function(arglist__6079) {
      var x = cljs.core.first(arglist__6079);
      arglist__6079 = cljs.core.next(arglist__6079);
      var y = cljs.core.first(arglist__6079);
      var more = cljs.core.rest(arglist__6079);
      return G__6075__delegate(x, y, more)
    };
    G__6075.cljs$core$IFn$_invoke$arity$variadic = G__6075__delegate;
    return G__6075
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_
}();
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.IKVReduce["null"] = true;
cljs.core._kv_reduce["null"] = function(_, f, init) {
  return init
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3941__auto__ = other instanceof Date;
  if(and__3941__auto__) {
    return o.toString() === other.toString()
  }else {
    return and__3941__auto__
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return Math.floor(o) % 2147483647
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
goog.provide("cljs.core.Reduced");
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  return self__.val
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if(cnt === 0) {
      return f.call(null)
    }else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__6080 = nval;
            var G__6081 = n + 1;
            val = G__6080;
            n = G__6081;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__6082 = nval;
          var G__6083 = n + 1;
          val__$1 = G__6082;
          n = G__6083;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__6084 = nval;
          var G__6085 = n + 1;
          val__$1 = G__6084;
          n = G__6085;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val = arr[0];
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__6086 = nval;
            var G__6087 = n + 1;
            val = G__6086;
            n = G__6087;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__6088 = nval;
          var G__6089 = n + 1;
          val__$1 = G__6088;
          n = G__6089;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__6090 = nval;
          var G__6091 = n + 1;
          val__$1 = G__6090;
          n = G__6091;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__6093 = x;
  if(G__6093) {
    if(function() {
      var or__3943__auto__ = G__6093.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__6093.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__6093.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__6093)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__6093)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__6095 = x;
  if(G__6095) {
    if(function() {
      var or__3943__auto__ = G__6095.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__6095.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__6095.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__6095)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__6095)
  }
};
goog.provide("cljs.core.IndexedSeq");
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var c = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c > 0) {
    return new cljs.core.RSeq(coll, c - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i)
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.arr.length - self__.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  return self__.arr[self__.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i)
    }else {
      return null
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
goog.provide("cljs.core.RSeq");
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850574
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.ci, self__.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn = cljs.core.next.call(null, s);
    if(!(sn == null)) {
      var G__6096 = sn;
      s = G__6096;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if(!(coll == null)) {
      return cljs.core._conj.call(null, coll, x)
    }else {
      return cljs.core.list.call(null, x)
    }
  };
  var conj__3 = function() {
    var G__6097__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__6098 = conj.call(null, coll, x);
          var G__6099 = cljs.core.first.call(null, xs);
          var G__6100 = cljs.core.next.call(null, xs);
          coll = G__6098;
          x = G__6099;
          xs = G__6100;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__6097 = function(coll, x, var_args) {
      var xs = null;
      if(arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6097__delegate.call(this, coll, x, xs)
    };
    G__6097.cljs$lang$maxFixedArity = 2;
    G__6097.cljs$lang$applyTo = function(arglist__6101) {
      var coll = cljs.core.first(arglist__6101);
      arglist__6101 = cljs.core.next(arglist__6101);
      var x = cljs.core.first(arglist__6101);
      var xs = cljs.core.rest(arglist__6101);
      return G__6097__delegate(coll, x, xs)
    };
    G__6097.cljs$core$IFn$_invoke$arity$variadic = G__6097__delegate;
    return G__6097
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s)
    }else {
      var G__6102 = cljs.core.next.call(null, s);
      var G__6103 = acc + 1;
      s = G__6102;
      acc = G__6103;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while(true) {
      if(coll == null) {
        throw new Error("Index out of bounds");
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            throw new Error("Index out of bounds");
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__6104 = cljs.core.next.call(null, coll);
              var G__6105 = n - 1;
              coll = G__6104;
              n = G__6105;
              continue
            }else {
              if("\ufdd0:else") {
                throw new Error("Index out of bounds");
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while(true) {
      if(coll == null) {
        return not_found
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            return not_found
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__6106 = cljs.core.next.call(null, coll);
              var G__6107 = n - 1;
              var G__6108 = not_found;
              coll = G__6106;
              n = G__6107;
              not_found = G__6108;
              continue
            }else {
              if("\ufdd0:else") {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__6111 = coll;
        if(G__6111) {
          if(function() {
            var or__3943__auto__ = G__6111.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__6111.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return null
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, coll)) {
            if(n < coll.length) {
              return coll[n]
            }else {
              return null
            }
          }else {
            if("\ufdd0:else") {
              return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__6112 = coll;
        if(G__6112) {
          if(function() {
            var or__3943__auto__ = G__6112.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__6112.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return not_found
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, coll)) {
            if(n < coll.length) {
              return coll[n]
            }else {
              return not_found
            }
          }else {
            if("\ufdd0:else") {
              return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
            }else {
              return null
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if(o == null) {
      return null
    }else {
      if(function() {
        var G__6115 = o;
        if(G__6115) {
          if(function() {
            var or__3943__auto__ = G__6115.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__6115.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return null
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, o)) {
            if(k < o.length) {
              return o[k]
            }else {
              return null
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k)
            }else {
              if("\ufdd0:else") {
                return null
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if(!(o == null)) {
      if(function() {
        var G__6116 = o;
        if(G__6116) {
          if(function() {
            var or__3943__auto__ = G__6116.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__6116.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return not_found
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, o)) {
            if(k < o.length) {
              return o[k]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found)
            }else {
              if("\ufdd0:else") {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if(!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v)
    }else {
      return cljs.core.hash_map.call(null, k, v)
    }
  };
  var assoc__4 = function() {
    var G__6117__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__6118 = ret;
          var G__6119 = cljs.core.first.call(null, kvs);
          var G__6120 = cljs.core.second.call(null, kvs);
          var G__6121 = cljs.core.nnext.call(null, kvs);
          coll = G__6118;
          k = G__6119;
          v = G__6120;
          kvs = G__6121;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__6117 = function(coll, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__6117__delegate.call(this, coll, k, v, kvs)
    };
    G__6117.cljs$lang$maxFixedArity = 3;
    G__6117.cljs$lang$applyTo = function(arglist__6122) {
      var coll = cljs.core.first(arglist__6122);
      arglist__6122 = cljs.core.next(arglist__6122);
      var k = cljs.core.first(arglist__6122);
      arglist__6122 = cljs.core.next(arglist__6122);
      var v = cljs.core.first(arglist__6122);
      var kvs = cljs.core.rest(arglist__6122);
      return G__6117__delegate(coll, k, v, kvs)
    };
    G__6117.cljs$core$IFn$_invoke$arity$variadic = G__6117__delegate;
    return G__6117
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__6123__delegate = function(coll, k, ks) {
      while(true) {
        var ret = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__6124 = ret;
          var G__6125 = cljs.core.first.call(null, ks);
          var G__6126 = cljs.core.next.call(null, ks);
          coll = G__6124;
          k = G__6125;
          ks = G__6126;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__6123 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6123__delegate.call(this, coll, k, ks)
    };
    G__6123.cljs$lang$maxFixedArity = 2;
    G__6123.cljs$lang$applyTo = function(arglist__6127) {
      var coll = cljs.core.first(arglist__6127);
      arglist__6127 = cljs.core.next(arglist__6127);
      var k = cljs.core.first(arglist__6127);
      var ks = cljs.core.rest(arglist__6127);
      return G__6123__delegate(coll, k, ks)
    };
    G__6123.cljs$core$IFn$_invoke$arity$variadic = G__6123__delegate;
    return G__6123
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3943__auto__ = goog.isFunction(f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__6129 = f;
    if(G__6129) {
      if(cljs.core.truth_(function() {
        var or__3943__auto____$1 = null;
        if(cljs.core.truth_(or__3943__auto____$1)) {
          return or__3943__auto____$1
        }else {
          return G__6129.cljs$core$Fn$
        }
      }())) {
        return true
      }else {
        if(!G__6129.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__6129)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__6129)
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = cljs.core.fn_QMARK_.call(null, o);
    if(and__3941__auto__) {
      return!function() {
        var G__6135 = o;
        if(G__6135) {
          if(function() {
            var or__3943__auto__ = G__6135.cljs$lang$protocol_mask$partition0$ & 262144;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__6135.cljs$core$IWithMeta$
            }
          }()) {
            return true
          }else {
            if(!G__6135.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__6135)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__6135)
        }
      }()
    }else {
      return and__3941__auto__
    }
  }()) {
    return with_meta.call(null, function() {
      if(void 0 === cljs.core.t6136) {
        goog.provide("cljs.core.t6136");
        cljs.core.t6136 = function(meta, o, with_meta, meta6137) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta6137 = meta6137;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.t6136.cljs$lang$type = true;
        cljs.core.t6136.cljs$lang$ctorStr = "cljs.core/t6136";
        cljs.core.t6136.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
          return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/t6136")
        };
        cljs.core.t6136.prototype.call = function() {
          var G__6140__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__6140 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
            }
            return G__6140__delegate.call(this, self__, args)
          };
          G__6140.cljs$lang$maxFixedArity = 1;
          G__6140.cljs$lang$applyTo = function(arglist__6141) {
            var self__ = cljs.core.first(arglist__6141);
            var args = cljs.core.rest(arglist__6141);
            return G__6140__delegate(self__, args)
          };
          G__6140.cljs$core$IFn$_invoke$arity$variadic = G__6140__delegate;
          return G__6140
        }();
        cljs.core.t6136.prototype.apply = function(self__, args6139) {
          var self__ = this;
          return self__.call.apply(self__, [self__].concat(args6139.slice()))
        };
        cljs.core.t6136.prototype.cljs$core$Fn$ = true;
        cljs.core.t6136.prototype.cljs$core$IMeta$_meta$arity$1 = function(_6138) {
          var self__ = this;
          return self__.meta6137
        };
        cljs.core.t6136.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_6138, meta6137__$1) {
          var self__ = this;
          return new cljs.core.t6136(self__.meta, self__.o, self__.with_meta, meta6137__$1)
        }
      }else {
      }
      return new cljs.core.t6136(meta, o, with_meta, null)
    }(), meta)
  }else {
    return cljs.core._with_meta.call(null, o, meta)
  }
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__6143 = o;
    if(G__6143) {
      if(function() {
        var or__3943__auto__ = G__6143.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__6143.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__6143.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__6143)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__6143)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__6144__delegate = function(coll, k, ks) {
      while(true) {
        var ret = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__6145 = ret;
          var G__6146 = cljs.core.first.call(null, ks);
          var G__6147 = cljs.core.next.call(null, ks);
          coll = G__6145;
          k = G__6146;
          ks = G__6147;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__6144 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6144__delegate.call(this, coll, k, ks)
    };
    G__6144.cljs$lang$maxFixedArity = 2;
    G__6144.cljs$lang$applyTo = function(arglist__6148) {
      var coll = cljs.core.first(arglist__6148);
      arglist__6148 = cljs.core.next(arglist__6148);
      var k = cljs.core.first(arglist__6148);
      var ks = cljs.core.rest(arglist__6148);
      return G__6144__delegate(coll, k, ks)
    };
    G__6144.cljs$core$IFn$_invoke$arity$variadic = G__6144__delegate;
    return G__6144
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h = cljs.core.string_hash_cache[k];
  if(typeof h === "number") {
    return h
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3941__auto__ = goog.isString(o);
      if(and__3941__auto__) {
        return check_cache
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash.cljs$core$IFn$_invoke$arity$1 = hash__1;
  hash.cljs$core$IFn$_invoke$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  var or__3943__auto__ = coll == null;
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
  }
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__6150 = x;
    if(G__6150) {
      if(function() {
        var or__3943__auto__ = G__6150.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__6150.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__6150.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__6150)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__6150)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__6152 = x;
    if(G__6152) {
      if(function() {
        var or__3943__auto__ = G__6152.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__6152.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__6152.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__6152)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__6152)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__6154 = x;
  if(G__6154) {
    if(function() {
      var or__3943__auto__ = G__6154.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__6154.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__6154.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__6154)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__6154)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__6156 = x;
  if(G__6156) {
    if(function() {
      var or__3943__auto__ = G__6156.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__6156.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__6156.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__6156)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__6156)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__6158 = x;
  if(G__6158) {
    if(function() {
      var or__3943__auto__ = G__6158.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__6158.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__6158.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__6158)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__6158)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__6160 = x;
    if(G__6160) {
      if(function() {
        var or__3943__auto__ = G__6160.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__6160.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__6160.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__6160)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__6160)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__6162 = x;
  if(G__6162) {
    if(function() {
      var or__3943__auto__ = G__6162.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__6162.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__6162.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__6162)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__6162)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var or__3943__auto__ = x instanceof cljs.core.ChunkedCons;
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    return x instanceof cljs.core.ChunkedSeq
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__6163__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__6163 = function(var_args) {
      var keyvals = null;
      if(arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__6163__delegate.call(this, keyvals)
    };
    G__6163.cljs$lang$maxFixedArity = 0;
    G__6163.cljs$lang$applyTo = function(arglist__6164) {
      var keyvals = cljs.core.seq(arglist__6164);
      return G__6163__delegate(keyvals)
    };
    G__6163.cljs$core$IFn$_invoke$arity$variadic = G__6163__delegate;
    return G__6163
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key)
  });
  return keys
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__6165 = i__$1 + 1;
      var G__6166 = j__$1 + 1;
      var G__6167 = len__$1 - 1;
      i__$1 = G__6165;
      j__$1 = G__6166;
      len__$1 = G__6167;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__6168 = i__$1 - 1;
      var G__6169 = j__$1 - 1;
      var G__6170 = len__$1 - 1;
      i__$1 = G__6168;
      j__$1 = G__6169;
      len__$1 = G__6170;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__6172 = s;
    if(G__6172) {
      if(function() {
        var or__3943__auto__ = G__6172.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__6172.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__6172.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__6172)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__6172)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__6174 = s;
  if(G__6174) {
    if(function() {
      var or__3943__auto__ = G__6174.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__6174.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__6174.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__6174)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__6174)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3941__auto__ = goog.isString(x);
  if(and__3941__auto__) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3941__auto__
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3943__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__6176 = f;
    if(G__6176) {
      if(function() {
        var or__3943__auto____$1 = G__6176.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return G__6176.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__6176.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__6176)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__6176)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3941__auto__ = typeof n === "number";
  if(and__3941__auto__) {
    var and__3941__auto____$1 = !isNaN(n);
    if(and__3941__auto____$1) {
      var and__3941__auto____$2 = !(n === Infinity);
      if(and__3941__auto____$2) {
        return parseFloat(n) === parseInt(n, 10)
      }else {
        return and__3941__auto____$2
      }
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(function() {
    var and__3941__auto__ = !(coll == null);
    if(and__3941__auto__) {
      var and__3941__auto____$1 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3941__auto____$1) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core.get.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__6177__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, null, x, null], true);
        var xs = more;
        while(true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if(cljs.core.truth_(xs)) {
            if(cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false
            }else {
              var G__6178 = cljs.core.conj.call(null, s, x__$1);
              var G__6179 = etc;
              s = G__6178;
              xs = G__6179;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__6177 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6177__delegate.call(this, x, y, more)
    };
    G__6177.cljs$lang$maxFixedArity = 2;
    G__6177.cljs$lang$applyTo = function(arglist__6180) {
      var x = cljs.core.first(arglist__6180);
      arglist__6180 = cljs.core.next(arglist__6180);
      var y = cljs.core.first(arglist__6180);
      var more = cljs.core.rest(arglist__6180);
      return G__6177__delegate(x, y, more)
    };
    G__6177.cljs$core$IFn$_invoke$arity$variadic = G__6177__delegate;
    return G__6177
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__6182 = x;
            if(G__6182) {
              if(function() {
                var or__3943__auto__ = G__6182.cljs$lang$protocol_mask$partition1$ & 2048;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return G__6182.cljs$core$IComparable$
                }
              }()) {
                return true
              }else {
                return false
              }
            }else {
              return false
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0:else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if(xl < yl) {
      return-1
    }else {
      if(xl > yl) {
        return 1
      }else {
        if("\ufdd0:else") {
          return compare_indexed.call(null, xs, ys, xl, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3941__auto__ = d === 0;
        if(and__3941__auto__) {
          return n + 1 < len
        }else {
          return and__3941__auto__
        }
      }()) {
        var G__6183 = xs;
        var G__6184 = ys;
        var G__6185 = len;
        var G__6186 = n + 1;
        xs = G__6183;
        ys = G__6184;
        len = G__6185;
        n = G__6186;
        continue
      }else {
        return d
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if(typeof r === "number") {
        return r
      }else {
        if(cljs.core.truth_(r)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__6187 = nval;
          var G__6188 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__6187;
          coll__$1 = G__6188;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__6191 = coll;
      if(G__6191) {
        if(function() {
          var or__3943__auto__ = G__6191.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__6191.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f)
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return cljs.core.array_reduce.call(null, coll, f)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f)
          }else {
            if("\ufdd0:else") {
              return cljs.core.seq_reduce.call(null, f, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__6192 = coll;
      if(G__6192) {
        if(function() {
          var or__3943__auto__ = G__6192.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__6192.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val)
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return cljs.core.array_reduce.call(null, coll, f, val)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val)
          }else {
            if("\ufdd0:else") {
              return cljs.core.seq_reduce.call(null, f, val, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__6193__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__6193 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6193__delegate.call(this, x, y, more)
    };
    G__6193.cljs$lang$maxFixedArity = 2;
    G__6193.cljs$lang$applyTo = function(arglist__6194) {
      var x = cljs.core.first(arglist__6194);
      arglist__6194 = cljs.core.next(arglist__6194);
      var y = cljs.core.first(arglist__6194);
      var more = cljs.core.rest(arglist__6194);
      return G__6193__delegate(x, y, more)
    };
    G__6193.cljs$core$IFn$_invoke$arity$variadic = G__6193__delegate;
    return G__6193
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__6195__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__6195 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6195__delegate.call(this, x, y, more)
    };
    G__6195.cljs$lang$maxFixedArity = 2;
    G__6195.cljs$lang$applyTo = function(arglist__6196) {
      var x = cljs.core.first(arglist__6196);
      arglist__6196 = cljs.core.next(arglist__6196);
      var y = cljs.core.first(arglist__6196);
      var more = cljs.core.rest(arglist__6196);
      return G__6195__delegate(x, y, more)
    };
    G__6195.cljs$core$IFn$_invoke$arity$variadic = G__6195__delegate;
    return G__6195
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__6197__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__6197 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6197__delegate.call(this, x, y, more)
    };
    G__6197.cljs$lang$maxFixedArity = 2;
    G__6197.cljs$lang$applyTo = function(arglist__6198) {
      var x = cljs.core.first(arglist__6198);
      arglist__6198 = cljs.core.next(arglist__6198);
      var y = cljs.core.first(arglist__6198);
      var more = cljs.core.rest(arglist__6198);
      return G__6197__delegate(x, y, more)
    };
    G__6197.cljs$core$IFn$_invoke$arity$variadic = G__6197__delegate;
    return G__6197
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__6199__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__6199 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6199__delegate.call(this, x, y, more)
    };
    G__6199.cljs$lang$maxFixedArity = 2;
    G__6199.cljs$lang$applyTo = function(arglist__6200) {
      var x = cljs.core.first(arglist__6200);
      arglist__6200 = cljs.core.next(arglist__6200);
      var y = cljs.core.first(arglist__6200);
      var more = cljs.core.rest(arglist__6200);
      return G__6199__delegate(x, y, more)
    };
    G__6199.cljs$core$IFn$_invoke$arity$variadic = G__6199__delegate;
    return G__6199
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__6201__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__6202 = y;
            var G__6203 = cljs.core.first.call(null, more);
            var G__6204 = cljs.core.next.call(null, more);
            x = G__6202;
            y = G__6203;
            more = G__6204;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__6201 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6201__delegate.call(this, x, y, more)
    };
    G__6201.cljs$lang$maxFixedArity = 2;
    G__6201.cljs$lang$applyTo = function(arglist__6205) {
      var x = cljs.core.first(arglist__6205);
      arglist__6205 = cljs.core.next(arglist__6205);
      var y = cljs.core.first(arglist__6205);
      var more = cljs.core.rest(arglist__6205);
      return G__6201__delegate(x, y, more)
    };
    G__6201.cljs$core$IFn$_invoke$arity$variadic = G__6201__delegate;
    return G__6201
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__6206__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__6207 = y;
            var G__6208 = cljs.core.first.call(null, more);
            var G__6209 = cljs.core.next.call(null, more);
            x = G__6207;
            y = G__6208;
            more = G__6209;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__6206 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6206__delegate.call(this, x, y, more)
    };
    G__6206.cljs$lang$maxFixedArity = 2;
    G__6206.cljs$lang$applyTo = function(arglist__6210) {
      var x = cljs.core.first(arglist__6210);
      arglist__6210 = cljs.core.next(arglist__6210);
      var y = cljs.core.first(arglist__6210);
      var more = cljs.core.rest(arglist__6210);
      return G__6206__delegate(x, y, more)
    };
    G__6206.cljs$core$IFn$_invoke$arity$variadic = G__6206__delegate;
    return G__6206
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__6211__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__6212 = y;
            var G__6213 = cljs.core.first.call(null, more);
            var G__6214 = cljs.core.next.call(null, more);
            x = G__6212;
            y = G__6213;
            more = G__6214;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__6211 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6211__delegate.call(this, x, y, more)
    };
    G__6211.cljs$lang$maxFixedArity = 2;
    G__6211.cljs$lang$applyTo = function(arglist__6215) {
      var x = cljs.core.first(arglist__6215);
      arglist__6215 = cljs.core.next(arglist__6215);
      var y = cljs.core.first(arglist__6215);
      var more = cljs.core.rest(arglist__6215);
      return G__6211__delegate(x, y, more)
    };
    G__6211.cljs$core$IFn$_invoke$arity$variadic = G__6211__delegate;
    return G__6211
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__6216__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__6217 = y;
            var G__6218 = cljs.core.first.call(null, more);
            var G__6219 = cljs.core.next.call(null, more);
            x = G__6217;
            y = G__6218;
            more = G__6219;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__6216 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6216__delegate.call(this, x, y, more)
    };
    G__6216.cljs$lang$maxFixedArity = 2;
    G__6216.cljs$lang$applyTo = function(arglist__6220) {
      var x = cljs.core.first(arglist__6220);
      arglist__6220 = cljs.core.next(arglist__6220);
      var y = cljs.core.first(arglist__6220);
      var more = cljs.core.rest(arglist__6220);
      return G__6216__delegate(x, y, more)
    };
    G__6216.cljs$core$IFn$_invoke$arity$variadic = G__6216__delegate;
    return G__6216
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__6221__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__6221 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6221__delegate.call(this, x, y, more)
    };
    G__6221.cljs$lang$maxFixedArity = 2;
    G__6221.cljs$lang$applyTo = function(arglist__6222) {
      var x = cljs.core.first(arglist__6222);
      arglist__6222 = cljs.core.next(arglist__6222);
      var y = cljs.core.first(arglist__6222);
      var more = cljs.core.rest(arglist__6222);
      return G__6221__delegate(x, y, more)
    };
    G__6221.cljs$core$IFn$_invoke$arity$variadic = G__6221__delegate;
    return G__6221
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__6223__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__6223 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6223__delegate.call(this, x, y, more)
    };
    G__6223.cljs$lang$maxFixedArity = 2;
    G__6223.cljs$lang$applyTo = function(arglist__6224) {
      var x = cljs.core.first(arglist__6224);
      arglist__6224 = cljs.core.next(arglist__6224);
      var y = cljs.core.first(arglist__6224);
      var more = cljs.core.rest(arglist__6224);
      return G__6223__delegate(x, y, more)
    };
    G__6223.cljs$core$IFn$_invoke$arity$variadic = G__6223__delegate;
    return G__6223
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min
}();
cljs.core.byte$ = function byte$(x) {
  return x
};
cljs.core.char$ = function char$(x) {
  if(typeof x === "number") {
    return String.fromCharCode(x)
  }else {
    if(function() {
      var and__3941__auto__ = cljs.core.string_QMARK_.call(null, x);
      if(and__3941__auto__) {
        return x.length === 1
      }else {
        return and__3941__auto__
      }
    }()) {
      return x
    }else {
      if("\ufdd0:else") {
        throw new Error("Argument to char must be a character or number");
      }else {
        return null
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x
};
cljs.core.float$ = function float$(x) {
  return x
};
cljs.core.double$ = function double$(x) {
  return x
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0
  };
  var unchecked_add__1 = function(x) {
    return x
  };
  var unchecked_add__2 = function(x, y) {
    return x + y
  };
  var unchecked_add__3 = function() {
    var G__6225__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more)
    };
    var G__6225 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6225__delegate.call(this, x, y, more)
    };
    G__6225.cljs$lang$maxFixedArity = 2;
    G__6225.cljs$lang$applyTo = function(arglist__6226) {
      var x = cljs.core.first(arglist__6226);
      arglist__6226 = cljs.core.next(arglist__6226);
      var y = cljs.core.first(arglist__6226);
      var more = cljs.core.rest(arglist__6226);
      return G__6225__delegate(x, y, more)
    };
    G__6225.cljs$core$IFn$_invoke$arity$variadic = G__6225__delegate;
    return G__6225
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0
  };
  var unchecked_add_int__1 = function(x) {
    return x
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y
  };
  var unchecked_add_int__3 = function() {
    var G__6227__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more)
    };
    var G__6227 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6227__delegate.call(this, x, y, more)
    };
    G__6227.cljs$lang$maxFixedArity = 2;
    G__6227.cljs$lang$applyTo = function(arglist__6228) {
      var x = cljs.core.first(arglist__6228);
      arglist__6228 = cljs.core.next(arglist__6228);
      var y = cljs.core.first(arglist__6228);
      var more = cljs.core.rest(arglist__6228);
      return G__6227__delegate(x, y, more)
    };
    G__6227.cljs$core$IFn$_invoke$arity$variadic = G__6227__delegate;
    return G__6227
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x)
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y
  };
  var unchecked_divide_int__3 = function() {
    var G__6229__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more)
    };
    var G__6229 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6229__delegate.call(this, x, y, more)
    };
    G__6229.cljs$lang$maxFixedArity = 2;
    G__6229.cljs$lang$applyTo = function(arglist__6230) {
      var x = cljs.core.first(arglist__6230);
      arglist__6230 = cljs.core.next(arglist__6230);
      var y = cljs.core.first(arglist__6230);
      var more = cljs.core.rest(arglist__6230);
      return G__6229__delegate(x, y, more)
    };
    G__6229.cljs$core$IFn$_invoke$arity$variadic = G__6229__delegate;
    return G__6229
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1
  };
  var unchecked_multiply__1 = function(x) {
    return x
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply__3 = function() {
    var G__6231__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more)
    };
    var G__6231 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6231__delegate.call(this, x, y, more)
    };
    G__6231.cljs$lang$maxFixedArity = 2;
    G__6231.cljs$lang$applyTo = function(arglist__6232) {
      var x = cljs.core.first(arglist__6232);
      arglist__6232 = cljs.core.next(arglist__6232);
      var y = cljs.core.first(arglist__6232);
      var more = cljs.core.rest(arglist__6232);
      return G__6231__delegate(x, y, more)
    };
    G__6231.cljs$core$IFn$_invoke$arity$variadic = G__6231__delegate;
    return G__6231
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1
  };
  var unchecked_multiply_int__1 = function(x) {
    return x
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply_int__3 = function() {
    var G__6233__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more)
    };
    var G__6233 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6233__delegate.call(this, x, y, more)
    };
    G__6233.cljs$lang$maxFixedArity = 2;
    G__6233.cljs$lang$applyTo = function(arglist__6234) {
      var x = cljs.core.first(arglist__6234);
      arglist__6234 = cljs.core.next(arglist__6234);
      var y = cljs.core.first(arglist__6234);
      var more = cljs.core.rest(arglist__6234);
      return G__6233__delegate(x, y, more)
    };
    G__6233.cljs$core$IFn$_invoke$arity$variadic = G__6233__delegate;
    return G__6233
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n)
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract__3 = function() {
    var G__6235__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more)
    };
    var G__6235 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6235__delegate.call(this, x, y, more)
    };
    G__6235.cljs$lang$maxFixedArity = 2;
    G__6235.cljs$lang$applyTo = function(arglist__6236) {
      var x = cljs.core.first(arglist__6236);
      arglist__6236 = cljs.core.next(arglist__6236);
      var y = cljs.core.first(arglist__6236);
      var more = cljs.core.rest(arglist__6236);
      return G__6235__delegate(x, y, more)
    };
    G__6235.cljs$core$IFn$_invoke$arity$variadic = G__6235__delegate;
    return G__6235
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract_int__3 = function() {
    var G__6237__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more)
    };
    var G__6237 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6237__delegate.call(this, x, y, more)
    };
    G__6237.cljs$lang$maxFixedArity = 2;
    G__6237.cljs$lang$applyTo = function(arglist__6238) {
      var x = cljs.core.first(arglist__6238);
      arglist__6238 = cljs.core.next(arglist__6238);
      var y = cljs.core.first(arglist__6238);
      var more = cljs.core.rest(arglist__6238);
      return G__6237__delegate(x, y, more)
    };
    G__6237.cljs$core$IFn$_invoke$arity$variadic = G__6237__delegate;
    return G__6237
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.booleans = function booleans(x) {
  return x
};
cljs.core.bytes = function bytes(x) {
  return x
};
cljs.core.chars = function chars(x) {
  return x
};
cljs.core.shorts = function shorts(x) {
  return x
};
cljs.core.ints = function ints(x) {
  return x
};
cljs.core.floats = function floats(x) {
  return x
};
cljs.core.doubles = function doubles(x) {
  return x
};
cljs.core.longs = function longs(x) {
  return x
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d)
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__6239__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__6240 = y;
            var G__6241 = cljs.core.first.call(null, more);
            var G__6242 = cljs.core.next.call(null, more);
            x = G__6240;
            y = G__6241;
            more = G__6242;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__6239 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6239__delegate.call(this, x, y, more)
    };
    G__6239.cljs$lang$maxFixedArity = 2;
    G__6239.cljs$lang$applyTo = function(arglist__6243) {
      var x = cljs.core.first(arglist__6243);
      arglist__6243 = cljs.core.next(arglist__6243);
      var y = cljs.core.first(arglist__6243);
      var more = cljs.core.rest(arglist__6243);
      return G__6239__delegate(x, y, more)
    };
    G__6239.cljs$core$IFn$_invoke$arity$variadic = G__6239__delegate;
    return G__6239
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = xs;
      if(and__3941__auto__) {
        return n__$1 > 0
      }else {
        return and__3941__auto__
      }
    }())) {
      var G__6244 = n__$1 - 1;
      var G__6245 = cljs.core.next.call(null, xs);
      n__$1 = G__6244;
      xs = G__6245;
      continue
    }else {
      return xs
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0:else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__6246__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__6247 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__6248 = cljs.core.next.call(null, more);
            sb = G__6247;
            more = G__6248;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__6246 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__6246__delegate.call(this, x, ys)
    };
    G__6246.cljs$lang$maxFixedArity = 1;
    G__6246.cljs$lang$applyTo = function(arglist__6249) {
      var x = cljs.core.first(arglist__6249);
      var ys = cljs.core.rest(arglist__6249);
      return G__6246__delegate(x, ys)
    };
    G__6246.cljs$core$IFn$_invoke$arity$variadic = G__6246__delegate;
    return G__6246
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$core$IFn$_invoke$arity$0 = str_STAR___0;
  str_STAR_.cljs$core$IFn$_invoke$arity$1 = str_STAR___1;
  str_STAR_.cljs$core$IFn$_invoke$arity$variadic = str_STAR___2.cljs$core$IFn$_invoke$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
    }else {
      if(x == null) {
        return""
      }else {
        if("\ufdd0:else") {
          return x.toString()
        }else {
          return null
        }
      }
    }
  };
  var str__2 = function() {
    var G__6250__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__6251 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__6252 = cljs.core.next.call(null, more);
            sb = G__6251;
            more = G__6252;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__6250 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__6250__delegate.call(this, x, ys)
    };
    G__6250.cljs$lang$maxFixedArity = 1;
    G__6250.cljs$lang$applyTo = function(arglist__6253) {
      var x = cljs.core.first(arglist__6253);
      var ys = cljs.core.rest(arglist__6253);
      return G__6250__delegate(x, ys)
    };
    G__6250.cljs$core$IFn$_invoke$arity$variadic = G__6250__delegate;
    return G__6250
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    var args__$1 = cljs.core.map.call(null, function(x) {
      if(function() {
        var or__3943__auto__ = cljs.core.keyword_QMARK_.call(null, x);
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return x instanceof cljs.core.Symbol
        }
      }()) {
        return[cljs.core.str(x)].join("")
      }else {
        return x
      }
    }, args);
    return cljs.core.apply.call(null, goog.string.format, fmt, args__$1)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__6254) {
    var fmt = cljs.core.first(arglist__6254);
    var args = cljs.core.rest(arglist__6254);
    return format__delegate(fmt, args)
  };
  format.cljs$core$IFn$_invoke$arity$variadic = format__delegate;
  return format
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(name instanceof cljs.core.Symbol) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", ":", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0:else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", ":", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while(true) {
      if(xs == null) {
        return ys == null
      }else {
        if(ys == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__6255 = cljs.core.next.call(null, xs);
            var G__6256 = cljs.core.next.call(null, ys);
            xs = G__6255;
            ys = G__6256;
            continue
          }else {
            if("\ufdd0:else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__6257_SHARP_, p2__6258_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__6257_SHARP_, cljs.core.hash.call(null, p2__6258_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while(true) {
    if(s) {
      var e = cljs.core.first.call(null, s);
      var G__6259 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__6260 = cljs.core.next.call(null, s);
      h = G__6259;
      s = G__6260;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__6261 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__6262 = cljs.core.next.call(null, s__$1);
      h = G__6261;
      s__$1 = G__6262;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__6269_6275 = cljs.core.seq.call(null, fn_map);
  var chunk__6270_6276 = null;
  var count__6271_6277 = 0;
  var i__6272_6278 = 0;
  while(true) {
    if(i__6272_6278 < count__6271_6277) {
      var vec__6273_6279 = cljs.core._nth.call(null, chunk__6270_6276, i__6272_6278);
      var key_name_6280 = cljs.core.nth.call(null, vec__6273_6279, 0, null);
      var f_6281 = cljs.core.nth.call(null, vec__6273_6279, 1, null);
      var str_name_6282 = cljs.core.name.call(null, key_name_6280);
      obj[str_name_6282] = f_6281;
      var G__6283 = seq__6269_6275;
      var G__6284 = chunk__6270_6276;
      var G__6285 = count__6271_6277;
      var G__6286 = i__6272_6278 + 1;
      seq__6269_6275 = G__6283;
      chunk__6270_6276 = G__6284;
      count__6271_6277 = G__6285;
      i__6272_6278 = G__6286;
      continue
    }else {
      var temp__4092__auto___6287 = cljs.core.seq.call(null, seq__6269_6275);
      if(temp__4092__auto___6287) {
        var seq__6269_6288__$1 = temp__4092__auto___6287;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__6269_6288__$1)) {
          var c__3073__auto___6289 = cljs.core.chunk_first.call(null, seq__6269_6288__$1);
          var G__6290 = cljs.core.chunk_rest.call(null, seq__6269_6288__$1);
          var G__6291 = c__3073__auto___6289;
          var G__6292 = cljs.core.count.call(null, c__3073__auto___6289);
          var G__6293 = 0;
          seq__6269_6275 = G__6290;
          chunk__6270_6276 = G__6291;
          count__6271_6277 = G__6292;
          i__6272_6278 = G__6293;
          continue
        }else {
          var vec__6274_6294 = cljs.core.first.call(null, seq__6269_6288__$1);
          var key_name_6295 = cljs.core.nth.call(null, vec__6274_6294, 0, null);
          var f_6296 = cljs.core.nth.call(null, vec__6274_6294, 1, null);
          var str_name_6297 = cljs.core.name.call(null, key_name_6295);
          obj[str_name_6297] = f_6296;
          var G__6298 = cljs.core.next.call(null, seq__6269_6288__$1);
          var G__6299 = null;
          var G__6300 = 0;
          var G__6301 = 0;
          seq__6269_6275 = G__6298;
          chunk__6270_6276 = G__6299;
          count__6271_6277 = G__6300;
          i__6272_6278 = G__6301;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
goog.provide("cljs.core.List");
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return null
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, coll, self__.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
goog.provide("cljs.core.EmptyList");
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.EmptyList(meta__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__6303 = coll;
  if(G__6303) {
    if(function() {
      var or__3943__auto__ = G__6303.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__6303.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__6303.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__6303)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__6303)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while(true) {
        if(!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__6304 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__6304;
          continue
        }else {
          return arr
        }
        break
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while(true) {
      if(i > 0) {
        var G__6305 = i - 1;
        var G__6306 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__6305;
        r = G__6306;
        continue
      }else {
        return r
      }
      break
    }
  };
  var list = function(var_args) {
    var xs = null;
    if(arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return list__delegate.call(this, xs)
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__6307) {
    var xs = cljs.core.seq(arglist__6307);
    return list__delegate(xs)
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list
}();
goog.provide("cljs.core.Cons");
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, self__.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.Cons(null, o, coll, self__.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3943__auto__ = coll == null;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var G__6309 = coll;
      if(G__6309) {
        if(function() {
          var or__3943__auto____$1 = G__6309.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            return G__6309.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__6311 = x;
  if(G__6311) {
    if(function() {
      var or__3943__auto__ = G__6311.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__6311.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__6311.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__6311)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__6311)
  }
};
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
goog.provide("cljs.core.Keyword");
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__6313 = null;
  var G__6313__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    if(coll == null) {
      return null
    }else {
      var strobj = coll.strobj;
      if(strobj == null) {
        return cljs.core._lookup.call(null, coll, self__.k, null)
      }else {
        return strobj[self__.k]
      }
    }
  };
  var G__6313__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, self__.k, not_found)
    }
  };
  G__6313 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6313__2.call(this, self__, coll);
      case 3:
        return G__6313__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6313
}();
cljs.core.Keyword.prototype.apply = function(self__, args6312) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args6312.slice()))
};
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__6315 = null;
  var G__6315__2 = function(self__, coll) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.get.call(null, coll, this$.toString())
  };
  var G__6315__3 = function(self__, coll, not_found) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.get.call(null, coll, this$.toString(), not_found)
  };
  G__6315 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6315__2.call(this, self__, coll);
      case 3:
        return G__6315__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6315
}();
String.prototype.apply = function(self__, args6314) {
  return self__.call.apply(self__, [self__].concat(args6314.slice()))
};
String.prototype.apply = function(s, args) {
  if(args.length < 2) {
    return cljs.core.get.call(null, args[0], s)
  }else {
    return cljs.core.get.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x = lazy_seq.x;
  if(lazy_seq.realized) {
    return x
  }else {
    lazy_seq.x = x.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
goog.provide("cljs.core.LazySeq");
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.LazySeq(meta__$1, self__.realized, self__.x, self__.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
goog.provide("cljs.core.ChunkBuffer");
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0)
};
goog.provide("cljs.core.ArrayChunk");
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  return self__.arr[self__.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = i >= 0;
    if(and__3941__auto__) {
      return i < self__.end - self__.off
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.arr[self__.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end - self__.off
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk
}();
goog.provide("cljs.core.ChunkedCons");
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850604;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    if(self__.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return self__.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return null
  }else {
    return self__.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.more
  }
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__6317 = s;
    if(G__6317) {
      if(function() {
        var or__3943__auto__ = G__6317.cljs$lang$protocol_mask$partition1$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__6317.cljs$core$IChunkedNext$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__6318 = cljs.core.next.call(null, s__$1);
      s__$1 = G__6318;
      continue
    }else {
      return ary
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_6319 = 0;
  var xs_6320 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs_6320) {
      ret[i_6319] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_6320));
      var G__6321 = i_6319 + 1;
      var G__6322 = cljs.core.next.call(null, xs_6320);
      i_6319 = G__6321;
      xs_6320 = G__6322;
      continue
    }else {
    }
    break
  }
  return ret
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0:else") {
          throw new Error("int-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6323 = i + 1;
          var G__6324 = cljs.core.next.call(null, s__$1);
          i = G__6323;
          s__$1 = G__6324;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3120__auto___6325 = size;
      var i_6326 = 0;
      while(true) {
        if(i_6326 < n__3120__auto___6325) {
          a[i_6326] = init_val_or_seq;
          var G__6327 = i_6326 + 1;
          i_6326 = G__6327;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0:else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6328 = i + 1;
          var G__6329 = cljs.core.next.call(null, s__$1);
          i = G__6328;
          s__$1 = G__6329;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3120__auto___6330 = size;
      var i_6331 = 0;
      while(true) {
        if(i_6331 < n__3120__auto___6330) {
          a[i_6331] = init_val_or_seq;
          var G__6332 = i_6331 + 1;
          i_6331 = G__6332;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0:else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6333 = i + 1;
          var G__6334 = cljs.core.next.call(null, s__$1);
          i = G__6333;
          s__$1 = G__6334;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3120__auto___6335 = size;
      var i_6336 = 0;
      while(true) {
        if(i_6336 < n__3120__auto___6335) {
          a[i_6336] = init_val_or_seq;
          var G__6337 = i_6336 + 1;
          i_6336 = G__6337;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0:else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6338 = i + 1;
          var G__6339 = cljs.core.next.call(null, s__$1);
          i = G__6338;
          s__$1 = G__6339;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3120__auto___6340 = size;
      var i_6341 = 0;
      while(true) {
        if(i_6341 < n__3120__auto___6340) {
          a[i_6341] = init_val_or_seq;
          var G__6342 = i_6341 + 1;
          i_6341 = G__6342;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = i > 0;
        if(and__3941__auto__) {
          return cljs.core.seq.call(null, s__$1)
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__6343 = cljs.core.next.call(null, s__$1);
        var G__6344 = i - 1;
        var G__6345 = sum + 1;
        s__$1 = G__6343;
        i = G__6344;
        sum = G__6345;
        continue
      }else {
        return sum
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0:else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s = cljs.core.seq.call(null, x);
      if(s) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__6346__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if(xys__$1) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1))
            }
          }else {
            if(cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat.call(null, concat.call(null, x, y), zs)
    };
    var G__6346 = function(x, y, var_args) {
      var zs = null;
      if(arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6346__delegate.call(this, x, y, zs)
    };
    G__6346.cljs$lang$maxFixedArity = 2;
    G__6346.cljs$lang$applyTo = function(arglist__6347) {
      var x = cljs.core.first(arglist__6347);
      arglist__6347 = cljs.core.next(arglist__6347);
      var y = cljs.core.first(arglist__6347);
      var zs = cljs.core.rest(arglist__6347);
      return G__6346__delegate(x, y, zs)
    };
    G__6346.cljs$core$IFn$_invoke$arity$variadic = G__6346__delegate;
    return G__6346
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__6348__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__6348 = function(a, b, c, d, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__6348__delegate.call(this, a, b, c, d, more)
    };
    G__6348.cljs$lang$maxFixedArity = 4;
    G__6348.cljs$lang$applyTo = function(arglist__6349) {
      var a = cljs.core.first(arglist__6349);
      arglist__6349 = cljs.core.next(arglist__6349);
      var b = cljs.core.first(arglist__6349);
      arglist__6349 = cljs.core.next(arglist__6349);
      var c = cljs.core.first(arglist__6349);
      arglist__6349 = cljs.core.next(arglist__6349);
      var d = cljs.core.first(arglist__6349);
      var more = cljs.core.rest(arglist__6349);
      return G__6348__delegate(a, b, c, d, more)
    };
    G__6348.cljs$core$IFn$_invoke$arity$variadic = G__6348__delegate;
    return G__6348
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if(argc === 1) {
      if(f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a)
      }else {
        return f.call(null, a)
      }
    }else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if(argc === 2) {
        if(f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b)
        }else {
          return f.call(null, a, b)
        }
      }else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if(argc === 3) {
          if(f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c)
          }else {
            return f.call(null, a, b, c)
          }
        }else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if(argc === 4) {
            if(f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d)
            }else {
              return f.call(null, a, b, c, d)
            }
          }else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if(argc === 5) {
              if(f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e)
              }else {
                return f.call(null, a, b, c, d, e)
              }
            }else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if(argc === 6) {
                if(f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1)
                }else {
                  return f__$1.call(null, a, b, c, d, e, f__$1)
                }
              }else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if(argc === 7) {
                  if(f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g)
                  }else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g)
                  }
                }else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if(argc === 8) {
                    if(f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h)
                    }else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h)
                    }
                  }else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if(argc === 9) {
                      if(f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i)
                      }else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i)
                      }
                    }else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if(argc === 10) {
                        if(f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j)
                        }else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j)
                        }
                      }else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if(argc === 11) {
                          if(f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k)
                          }else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k)
                          }
                        }else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if(argc === 12) {
                            if(f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }
                          }else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if(argc === 13) {
                              if(f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }
                            }else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if(argc === 14) {
                                if(f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }
                              }else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if(argc === 15) {
                                  if(f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }
                                }else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if(argc === 16) {
                                    if(f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }
                                  }else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if(argc === 17) {
                                      if(f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }
                                    }else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if(argc === 18) {
                                        if(f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }
                                      }else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if(argc === 19) {
                                          if(f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }
                                        }else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if(argc === 20) {
                                            if(f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__6 = function() {
    var G__6350__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if(f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if(bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist)
        }else {
          return f.cljs$lang$applyTo(arglist)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist))
      }
    };
    var G__6350 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__6350__delegate.call(this, f, a, b, c, d, args)
    };
    G__6350.cljs$lang$maxFixedArity = 5;
    G__6350.cljs$lang$applyTo = function(arglist__6351) {
      var f = cljs.core.first(arglist__6351);
      arglist__6351 = cljs.core.next(arglist__6351);
      var a = cljs.core.first(arglist__6351);
      arglist__6351 = cljs.core.next(arglist__6351);
      var b = cljs.core.first(arglist__6351);
      arglist__6351 = cljs.core.next(arglist__6351);
      var c = cljs.core.first(arglist__6351);
      arglist__6351 = cljs.core.next(arglist__6351);
      var d = cljs.core.first(arglist__6351);
      var args = cljs.core.rest(arglist__6351);
      return G__6350__delegate(f, a, b, c, d, args)
    };
    G__6350.cljs$core$IFn$_invoke$arity$variadic = G__6350__delegate;
    return G__6350
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__6352) {
    var obj = cljs.core.first(arglist__6352);
    arglist__6352 = cljs.core.next(arglist__6352);
    var f = cljs.core.first(arglist__6352);
    var args = cljs.core.rest(arglist__6352);
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__6353__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__6353 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6353__delegate.call(this, x, y, more)
    };
    G__6353.cljs$lang$maxFixedArity = 2;
    G__6353.cljs$lang$applyTo = function(arglist__6354) {
      var x = cljs.core.first(arglist__6354);
      arglist__6354 = cljs.core.next(arglist__6354);
      var y = cljs.core.first(arglist__6354);
      var more = cljs.core.rest(arglist__6354);
      return G__6353__delegate(x, y, more)
    };
    G__6353.cljs$core$IFn$_invoke$arity$variadic = G__6353__delegate;
    return G__6353
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__6355 = pred;
        var G__6356 = cljs.core.next.call(null, coll);
        pred = G__6355;
        coll = G__6356;
        continue
      }else {
        if("\ufdd0:else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3943__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        var G__6357 = pred;
        var G__6358 = cljs.core.next.call(null, coll);
        pred = G__6357;
        coll = G__6358;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__6359 = null;
    var G__6359__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__6359__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__6359__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__6359__3 = function() {
      var G__6360__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__6360 = function(x, y, var_args) {
        var zs = null;
        if(arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__6360__delegate.call(this, x, y, zs)
      };
      G__6360.cljs$lang$maxFixedArity = 2;
      G__6360.cljs$lang$applyTo = function(arglist__6361) {
        var x = cljs.core.first(arglist__6361);
        arglist__6361 = cljs.core.next(arglist__6361);
        var y = cljs.core.first(arglist__6361);
        var zs = cljs.core.rest(arglist__6361);
        return G__6360__delegate(x, y, zs)
      };
      G__6360.cljs$core$IFn$_invoke$arity$variadic = G__6360__delegate;
      return G__6360
    }();
    G__6359 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__6359__0.call(this);
        case 1:
          return G__6359__1.call(this, x);
        case 2:
          return G__6359__2.call(this, x, y);
        default:
          return G__6359__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__6359.cljs$lang$maxFixedArity = 2;
    G__6359.cljs$lang$applyTo = G__6359__3.cljs$lang$applyTo;
    return G__6359
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__6362__delegate = function(args) {
      return x
    };
    var G__6362 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__6362__delegate.call(this, args)
    };
    G__6362.cljs$lang$maxFixedArity = 0;
    G__6362.cljs$lang$applyTo = function(arglist__6363) {
      var args = cljs.core.seq(arglist__6363);
      return G__6362__delegate(args)
    };
    G__6362.cljs$core$IFn$_invoke$arity$variadic = G__6362__delegate;
    return G__6362
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__6364 = null;
      var G__6364__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__6364__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__6364__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__6364__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__6364__4 = function() {
        var G__6365__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__6365 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__6365__delegate.call(this, x, y, z, args)
        };
        G__6365.cljs$lang$maxFixedArity = 3;
        G__6365.cljs$lang$applyTo = function(arglist__6366) {
          var x = cljs.core.first(arglist__6366);
          arglist__6366 = cljs.core.next(arglist__6366);
          var y = cljs.core.first(arglist__6366);
          arglist__6366 = cljs.core.next(arglist__6366);
          var z = cljs.core.first(arglist__6366);
          var args = cljs.core.rest(arglist__6366);
          return G__6365__delegate(x, y, z, args)
        };
        G__6365.cljs$core$IFn$_invoke$arity$variadic = G__6365__delegate;
        return G__6365
      }();
      G__6364 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6364__0.call(this);
          case 1:
            return G__6364__1.call(this, x);
          case 2:
            return G__6364__2.call(this, x, y);
          case 3:
            return G__6364__3.call(this, x, y, z);
          default:
            return G__6364__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6364.cljs$lang$maxFixedArity = 3;
      G__6364.cljs$lang$applyTo = G__6364__4.cljs$lang$applyTo;
      return G__6364
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__6367 = null;
      var G__6367__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__6367__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__6367__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__6367__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__6367__4 = function() {
        var G__6368__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__6368 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__6368__delegate.call(this, x, y, z, args)
        };
        G__6368.cljs$lang$maxFixedArity = 3;
        G__6368.cljs$lang$applyTo = function(arglist__6369) {
          var x = cljs.core.first(arglist__6369);
          arglist__6369 = cljs.core.next(arglist__6369);
          var y = cljs.core.first(arglist__6369);
          arglist__6369 = cljs.core.next(arglist__6369);
          var z = cljs.core.first(arglist__6369);
          var args = cljs.core.rest(arglist__6369);
          return G__6368__delegate(x, y, z, args)
        };
        G__6368.cljs$core$IFn$_invoke$arity$variadic = G__6368__delegate;
        return G__6368
      }();
      G__6367 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6367__0.call(this);
          case 1:
            return G__6367__1.call(this, x);
          case 2:
            return G__6367__2.call(this, x, y);
          case 3:
            return G__6367__3.call(this, x, y, z);
          default:
            return G__6367__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6367.cljs$lang$maxFixedArity = 3;
      G__6367.cljs$lang$applyTo = G__6367__4.cljs$lang$applyTo;
      return G__6367
    }()
  };
  var comp__4 = function() {
    var G__6370__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__6371__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while(true) {
            if(fs__$2) {
              var G__6372 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__6373 = cljs.core.next.call(null, fs__$2);
              ret = G__6372;
              fs__$2 = G__6373;
              continue
            }else {
              return ret
            }
            break
          }
        };
        var G__6371 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__6371__delegate.call(this, args)
        };
        G__6371.cljs$lang$maxFixedArity = 0;
        G__6371.cljs$lang$applyTo = function(arglist__6374) {
          var args = cljs.core.seq(arglist__6374);
          return G__6371__delegate(args)
        };
        G__6371.cljs$core$IFn$_invoke$arity$variadic = G__6371__delegate;
        return G__6371
      }()
    };
    var G__6370 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__6370__delegate.call(this, f1, f2, f3, fs)
    };
    G__6370.cljs$lang$maxFixedArity = 3;
    G__6370.cljs$lang$applyTo = function(arglist__6375) {
      var f1 = cljs.core.first(arglist__6375);
      arglist__6375 = cljs.core.next(arglist__6375);
      var f2 = cljs.core.first(arglist__6375);
      arglist__6375 = cljs.core.next(arglist__6375);
      var f3 = cljs.core.first(arglist__6375);
      var fs = cljs.core.rest(arglist__6375);
      return G__6370__delegate(f1, f2, f3, fs)
    };
    G__6370.cljs$core$IFn$_invoke$arity$variadic = G__6370__delegate;
    return G__6370
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__6376__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__6376 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__6376__delegate.call(this, args)
      };
      G__6376.cljs$lang$maxFixedArity = 0;
      G__6376.cljs$lang$applyTo = function(arglist__6377) {
        var args = cljs.core.seq(arglist__6377);
        return G__6376__delegate(args)
      };
      G__6376.cljs$core$IFn$_invoke$arity$variadic = G__6376__delegate;
      return G__6376
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__6378__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__6378 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__6378__delegate.call(this, args)
      };
      G__6378.cljs$lang$maxFixedArity = 0;
      G__6378.cljs$lang$applyTo = function(arglist__6379) {
        var args = cljs.core.seq(arglist__6379);
        return G__6378__delegate(args)
      };
      G__6378.cljs$core$IFn$_invoke$arity$variadic = G__6378__delegate;
      return G__6378
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__6380__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__6380 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__6380__delegate.call(this, args)
      };
      G__6380.cljs$lang$maxFixedArity = 0;
      G__6380.cljs$lang$applyTo = function(arglist__6381) {
        var args = cljs.core.seq(arglist__6381);
        return G__6380__delegate(args)
      };
      G__6380.cljs$core$IFn$_invoke$arity$variadic = G__6380__delegate;
      return G__6380
    }()
  };
  var partial__5 = function() {
    var G__6382__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__6383__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__6383 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__6383__delegate.call(this, args)
        };
        G__6383.cljs$lang$maxFixedArity = 0;
        G__6383.cljs$lang$applyTo = function(arglist__6384) {
          var args = cljs.core.seq(arglist__6384);
          return G__6383__delegate(args)
        };
        G__6383.cljs$core$IFn$_invoke$arity$variadic = G__6383__delegate;
        return G__6383
      }()
    };
    var G__6382 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__6382__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__6382.cljs$lang$maxFixedArity = 4;
    G__6382.cljs$lang$applyTo = function(arglist__6385) {
      var f = cljs.core.first(arglist__6385);
      arglist__6385 = cljs.core.next(arglist__6385);
      var arg1 = cljs.core.first(arglist__6385);
      arglist__6385 = cljs.core.next(arglist__6385);
      var arg2 = cljs.core.first(arglist__6385);
      arglist__6385 = cljs.core.next(arglist__6385);
      var arg3 = cljs.core.first(arglist__6385);
      var more = cljs.core.rest(arglist__6385);
      return G__6382__delegate(f, arg1, arg2, arg3, more)
    };
    G__6382.cljs$core$IFn$_invoke$arity$variadic = G__6382__delegate;
    return G__6382
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__6386 = null;
      var G__6386__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__6386__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__6386__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__6386__4 = function() {
        var G__6387__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__6387 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__6387__delegate.call(this, a, b, c, ds)
        };
        G__6387.cljs$lang$maxFixedArity = 3;
        G__6387.cljs$lang$applyTo = function(arglist__6388) {
          var a = cljs.core.first(arglist__6388);
          arglist__6388 = cljs.core.next(arglist__6388);
          var b = cljs.core.first(arglist__6388);
          arglist__6388 = cljs.core.next(arglist__6388);
          var c = cljs.core.first(arglist__6388);
          var ds = cljs.core.rest(arglist__6388);
          return G__6387__delegate(a, b, c, ds)
        };
        G__6387.cljs$core$IFn$_invoke$arity$variadic = G__6387__delegate;
        return G__6387
      }();
      G__6386 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__6386__1.call(this, a);
          case 2:
            return G__6386__2.call(this, a, b);
          case 3:
            return G__6386__3.call(this, a, b, c);
          default:
            return G__6386__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6386.cljs$lang$maxFixedArity = 3;
      G__6386.cljs$lang$applyTo = G__6386__4.cljs$lang$applyTo;
      return G__6386
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__6389 = null;
      var G__6389__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__6389__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__6389__4 = function() {
        var G__6390__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__6390 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__6390__delegate.call(this, a, b, c, ds)
        };
        G__6390.cljs$lang$maxFixedArity = 3;
        G__6390.cljs$lang$applyTo = function(arglist__6391) {
          var a = cljs.core.first(arglist__6391);
          arglist__6391 = cljs.core.next(arglist__6391);
          var b = cljs.core.first(arglist__6391);
          arglist__6391 = cljs.core.next(arglist__6391);
          var c = cljs.core.first(arglist__6391);
          var ds = cljs.core.rest(arglist__6391);
          return G__6390__delegate(a, b, c, ds)
        };
        G__6390.cljs$core$IFn$_invoke$arity$variadic = G__6390__delegate;
        return G__6390
      }();
      G__6389 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__6389__2.call(this, a, b);
          case 3:
            return G__6389__3.call(this, a, b, c);
          default:
            return G__6389__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6389.cljs$lang$maxFixedArity = 3;
      G__6389.cljs$lang$applyTo = G__6389__4.cljs$lang$applyTo;
      return G__6389
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__6392 = null;
      var G__6392__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__6392__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__6392__4 = function() {
        var G__6393__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__6393 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__6393__delegate.call(this, a, b, c, ds)
        };
        G__6393.cljs$lang$maxFixedArity = 3;
        G__6393.cljs$lang$applyTo = function(arglist__6394) {
          var a = cljs.core.first(arglist__6394);
          arglist__6394 = cljs.core.next(arglist__6394);
          var b = cljs.core.first(arglist__6394);
          arglist__6394 = cljs.core.next(arglist__6394);
          var c = cljs.core.first(arglist__6394);
          var ds = cljs.core.rest(arglist__6394);
          return G__6393__delegate(a, b, c, ds)
        };
        G__6393.cljs$core$IFn$_invoke$arity$variadic = G__6393__delegate;
        return G__6393
      }();
      G__6392 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__6392__2.call(this, a, b);
          case 3:
            return G__6392__3.call(this, a, b, c);
          default:
            return G__6392__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6392.cljs$lang$maxFixedArity = 3;
      G__6392.cljs$lang$applyTo = G__6392__4.cljs$lang$applyTo;
      return G__6392
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3120__auto___6395 = size;
          var i_6396 = 0;
          while(true) {
            if(i_6396 < n__3120__auto___6395) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_6396, cljs.core._nth.call(null, c, i_6396)));
              var G__6397 = i_6396 + 1;
              i_6396 = G__6397;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3120__auto___6398 = size;
        var i_6399 = 0;
        while(true) {
          if(i_6399 < n__3120__auto___6398) {
            var x_6400 = f.call(null, cljs.core._nth.call(null, c, i_6399));
            if(x_6400 == null) {
            }else {
              cljs.core.chunk_append.call(null, b, x_6400)
            }
            var G__6401 = i_6399 + 1;
            i_6399 = G__6401;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)))
      }else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if(x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s))
        }else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3120__auto___6408 = size;
          var i_6409 = 0;
          while(true) {
            if(i_6409 < n__3120__auto___6408) {
              var x_6410 = f.call(null, idx + i_6409, cljs.core._nth.call(null, c, i_6409));
              if(x_6410 == null) {
              }else {
                cljs.core.chunk_append.call(null, b, x_6410)
              }
              var G__6411 = i_6409 + 1;
              i_6409 = G__6411;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if(x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s))
          }else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p.call(null, y)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p.call(null, z)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__4 = function() {
        var G__6418__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__6418 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__6418__delegate.call(this, x, y, z, args)
        };
        G__6418.cljs$lang$maxFixedArity = 3;
        G__6418.cljs$lang$applyTo = function(arglist__6419) {
          var x = cljs.core.first(arglist__6419);
          arglist__6419 = cljs.core.next(arglist__6419);
          var y = cljs.core.first(arglist__6419);
          arglist__6419 = cljs.core.next(arglist__6419);
          var z = cljs.core.first(arglist__6419);
          var args = cljs.core.rest(arglist__6419);
          return G__6418__delegate(x, y, z, args)
        };
        G__6418.cljs$core$IFn$_invoke$arity$variadic = G__6418__delegate;
        return G__6418
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p2.call(null, x)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p2.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                return p2.call(null, y)
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p1.call(null, z);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p2.call(null, x);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p2.call(null, z)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__4 = function() {
        var G__6420__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__6402_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__6402_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  return p2.call(null, p1__6402_SHARP_)
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__6420 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__6420__delegate.call(this, x, y, z, args)
        };
        G__6420.cljs$lang$maxFixedArity = 3;
        G__6420.cljs$lang$applyTo = function(arglist__6421) {
          var x = cljs.core.first(arglist__6421);
          arglist__6421 = cljs.core.next(arglist__6421);
          var y = cljs.core.first(arglist__6421);
          arglist__6421 = cljs.core.next(arglist__6421);
          var z = cljs.core.first(arglist__6421);
          var args = cljs.core.rest(arglist__6421);
          return G__6420__delegate(x, y, z, args)
        };
        G__6420.cljs$core$IFn$_invoke$arity$variadic = G__6420__delegate;
        return G__6420
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p3.call(null, x)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p3.call(null, y)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    var and__3941__auto____$5 = p3.call(null, y);
                    if(cljs.core.truth_(and__3941__auto____$5)) {
                      var and__3941__auto____$6 = p1.call(null, z);
                      if(cljs.core.truth_(and__3941__auto____$6)) {
                        var and__3941__auto____$7 = p2.call(null, z);
                        if(cljs.core.truth_(and__3941__auto____$7)) {
                          return p3.call(null, z)
                        }else {
                          return and__3941__auto____$7
                        }
                      }else {
                        return and__3941__auto____$6
                      }
                    }else {
                      return and__3941__auto____$5
                    }
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__4 = function() {
        var G__6422__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__6403_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__6403_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  var and__3941__auto____$2 = p2.call(null, p1__6403_SHARP_);
                  if(cljs.core.truth_(and__3941__auto____$2)) {
                    return p3.call(null, p1__6403_SHARP_)
                  }else {
                    return and__3941__auto____$2
                  }
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__6422 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__6422__delegate.call(this, x, y, z, args)
        };
        G__6422.cljs$lang$maxFixedArity = 3;
        G__6422.cljs$lang$applyTo = function(arglist__6423) {
          var x = cljs.core.first(arglist__6423);
          arglist__6423 = cljs.core.next(arglist__6423);
          var y = cljs.core.first(arglist__6423);
          arglist__6423 = cljs.core.next(arglist__6423);
          var z = cljs.core.first(arglist__6423);
          var args = cljs.core.rest(arglist__6423);
          return G__6422__delegate(x, y, z, args)
        };
        G__6422.cljs$core$IFn$_invoke$arity$variadic = G__6422__delegate;
        return G__6422
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__6424__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__6404_SHARP_) {
            return p1__6404_SHARP_.call(null, x)
          }, ps__$1)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__6405_SHARP_) {
            var and__3941__auto__ = p1__6405_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              return p1__6405_SHARP_.call(null, y)
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__6406_SHARP_) {
            var and__3941__auto__ = p1__6406_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              var and__3941__auto____$1 = p1__6406_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3941__auto____$1)) {
                return p1__6406_SHARP_.call(null, z)
              }else {
                return and__3941__auto____$1
              }
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__4 = function() {
          var G__6425__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3941__auto__ = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3941__auto__)) {
                return cljs.core.every_QMARK_.call(null, function(p1__6407_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__6407_SHARP_, args)
                }, ps__$1)
              }else {
                return and__3941__auto__
              }
            }())
          };
          var G__6425 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__6425__delegate.call(this, x, y, z, args)
          };
          G__6425.cljs$lang$maxFixedArity = 3;
          G__6425.cljs$lang$applyTo = function(arglist__6426) {
            var x = cljs.core.first(arglist__6426);
            arglist__6426 = cljs.core.next(arglist__6426);
            var y = cljs.core.first(arglist__6426);
            arglist__6426 = cljs.core.next(arglist__6426);
            var z = cljs.core.first(arglist__6426);
            var args = cljs.core.rest(arglist__6426);
            return G__6425__delegate(x, y, z, args)
          };
          G__6425.cljs$core$IFn$_invoke$arity$variadic = G__6425__delegate;
          return G__6425
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn
      }()
    };
    var G__6424 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__6424__delegate.call(this, p1, p2, p3, ps)
    };
    G__6424.cljs$lang$maxFixedArity = 3;
    G__6424.cljs$lang$applyTo = function(arglist__6427) {
      var p1 = cljs.core.first(arglist__6427);
      arglist__6427 = cljs.core.next(arglist__6427);
      var p2 = cljs.core.first(arglist__6427);
      arglist__6427 = cljs.core.next(arglist__6427);
      var p3 = cljs.core.first(arglist__6427);
      var ps = cljs.core.rest(arglist__6427);
      return G__6424__delegate(p1, p2, p3, ps)
    };
    G__6424.cljs$core$IFn$_invoke$arity$variadic = G__6424__delegate;
    return G__6424
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__6429__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__6429 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__6429__delegate.call(this, x, y, z, args)
        };
        G__6429.cljs$lang$maxFixedArity = 3;
        G__6429.cljs$lang$applyTo = function(arglist__6430) {
          var x = cljs.core.first(arglist__6430);
          arglist__6430 = cljs.core.next(arglist__6430);
          var y = cljs.core.first(arglist__6430);
          arglist__6430 = cljs.core.next(arglist__6430);
          var z = cljs.core.first(arglist__6430);
          var args = cljs.core.rest(arglist__6430);
          return G__6429__delegate(x, y, z, args)
        };
        G__6429.cljs$core$IFn$_invoke$arity$variadic = G__6429__delegate;
        return G__6429
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p2.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p1.call(null, z);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p2.call(null, x);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__6431__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__6412_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__6412_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p2.call(null, p1__6412_SHARP_)
              }
            }, args)
          }
        };
        var G__6431 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__6431__delegate.call(this, x, y, z, args)
        };
        G__6431.cljs$lang$maxFixedArity = 3;
        G__6431.cljs$lang$applyTo = function(arglist__6432) {
          var x = cljs.core.first(arglist__6432);
          arglist__6432 = cljs.core.next(arglist__6432);
          var y = cljs.core.first(arglist__6432);
          arglist__6432 = cljs.core.next(arglist__6432);
          var z = cljs.core.first(arglist__6432);
          var args = cljs.core.rest(arglist__6432);
          return G__6431__delegate(x, y, z, args)
        };
        G__6431.cljs$core$IFn$_invoke$arity$variadic = G__6431__delegate;
        return G__6431
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  var or__3943__auto____$5 = p3.call(null, y);
                  if(cljs.core.truth_(or__3943__auto____$5)) {
                    return or__3943__auto____$5
                  }else {
                    var or__3943__auto____$6 = p1.call(null, z);
                    if(cljs.core.truth_(or__3943__auto____$6)) {
                      return or__3943__auto____$6
                    }else {
                      var or__3943__auto____$7 = p2.call(null, z);
                      if(cljs.core.truth_(or__3943__auto____$7)) {
                        return or__3943__auto____$7
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__6433__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__6413_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__6413_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                var or__3943__auto____$2 = p2.call(null, p1__6413_SHARP_);
                if(cljs.core.truth_(or__3943__auto____$2)) {
                  return or__3943__auto____$2
                }else {
                  return p3.call(null, p1__6413_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__6433 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__6433__delegate.call(this, x, y, z, args)
        };
        G__6433.cljs$lang$maxFixedArity = 3;
        G__6433.cljs$lang$applyTo = function(arglist__6434) {
          var x = cljs.core.first(arglist__6434);
          arglist__6434 = cljs.core.next(arglist__6434);
          var y = cljs.core.first(arglist__6434);
          arglist__6434 = cljs.core.next(arglist__6434);
          var z = cljs.core.first(arglist__6434);
          var args = cljs.core.rest(arglist__6434);
          return G__6433__delegate(x, y, z, args)
        };
        G__6433.cljs$core$IFn$_invoke$arity$variadic = G__6433__delegate;
        return G__6433
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__6435__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__6414_SHARP_) {
            return p1__6414_SHARP_.call(null, x)
          }, ps__$1)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__6415_SHARP_) {
            var or__3943__auto__ = p1__6415_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return p1__6415_SHARP_.call(null, y)
            }
          }, ps__$1)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__6416_SHARP_) {
            var or__3943__auto__ = p1__6416_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              var or__3943__auto____$1 = p1__6416_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p1__6416_SHARP_.call(null, z)
              }
            }
          }, ps__$1)
        };
        var spn__4 = function() {
          var G__6436__delegate = function(x, y, z, args) {
            var or__3943__auto__ = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.some.call(null, function(p1__6417_SHARP_) {
                return cljs.core.some.call(null, p1__6417_SHARP_, args)
              }, ps__$1)
            }
          };
          var G__6436 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__6436__delegate.call(this, x, y, z, args)
          };
          G__6436.cljs$lang$maxFixedArity = 3;
          G__6436.cljs$lang$applyTo = function(arglist__6437) {
            var x = cljs.core.first(arglist__6437);
            arglist__6437 = cljs.core.next(arglist__6437);
            var y = cljs.core.first(arglist__6437);
            arglist__6437 = cljs.core.next(arglist__6437);
            var z = cljs.core.first(arglist__6437);
            var args = cljs.core.rest(arglist__6437);
            return G__6436__delegate(x, y, z, args)
          };
          G__6436.cljs$core$IFn$_invoke$arity$variadic = G__6436__delegate;
          return G__6436
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn
      }()
    };
    var G__6435 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__6435__delegate.call(this, p1, p2, p3, ps)
    };
    G__6435.cljs$lang$maxFixedArity = 3;
    G__6435.cljs$lang$applyTo = function(arglist__6438) {
      var p1 = cljs.core.first(arglist__6438);
      arglist__6438 = cljs.core.next(arglist__6438);
      var p2 = cljs.core.first(arglist__6438);
      arglist__6438 = cljs.core.next(arglist__6438);
      var p3 = cljs.core.first(arglist__6438);
      var ps = cljs.core.rest(arglist__6438);
      return G__6435__delegate(p1, p2, p3, ps)
    };
    G__6435.cljs$core$IFn$_invoke$arity$variadic = G__6435__delegate;
    return G__6435
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3120__auto___6439 = size;
          var i_6440 = 0;
          while(true) {
            if(i_6440 < n__3120__auto___6439) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_6440)));
              var G__6441 = i_6440 + 1;
              i_6440 = G__6441;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          var and__3941__auto____$1 = s2;
          if(and__3941__auto____$1) {
            return s3
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__6442__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__6428_SHARP_) {
        return cljs.core.apply.call(null, f, p1__6428_SHARP_)
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__6442 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__6442__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__6442.cljs$lang$maxFixedArity = 4;
    G__6442.cljs$lang$applyTo = function(arglist__6443) {
      var f = cljs.core.first(arglist__6443);
      arglist__6443 = cljs.core.next(arglist__6443);
      var c1 = cljs.core.first(arglist__6443);
      arglist__6443 = cljs.core.next(arglist__6443);
      var c2 = cljs.core.first(arglist__6443);
      arglist__6443 = cljs.core.next(arglist__6443);
      var c3 = cljs.core.first(arglist__6443);
      var colls = cljs.core.rest(arglist__6443);
      return G__6442__delegate(f, c1, c2, c3, colls)
    };
    G__6442.cljs$core$IFn$_invoke$arity$variadic = G__6442__delegate;
    return G__6442
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = n__$1 > 0;
        if(and__3941__auto__) {
          return s
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__6444 = n__$1 - 1;
        var G__6445 = cljs.core.rest.call(null, s);
        n__$1 = G__6444;
        coll__$1 = G__6445;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead) {
      var G__6446 = cljs.core.next.call(null, s);
      var G__6447 = cljs.core.next.call(null, lead);
      s = G__6446;
      lead = G__6447;
      continue
    }else {
      return s
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = s;
        if(and__3941__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s))
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__6448 = pred__$1;
        var G__6449 = cljs.core.rest.call(null, s);
        pred__$1 = G__6448;
        coll__$1 = G__6449;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__6450__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)))
        }else {
          return null
        }
      }, null)
    };
    var G__6450 = function(c1, c2, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6450__delegate.call(this, c1, c2, colls)
    };
    G__6450.cljs$lang$maxFixedArity = 2;
    G__6450.cljs$lang$applyTo = function(arglist__6451) {
      var c1 = cljs.core.first(arglist__6451);
      arglist__6451 = cljs.core.next(arglist__6451);
      var c2 = cljs.core.first(arglist__6451);
      var colls = cljs.core.rest(arglist__6451);
      return G__6450__delegate(c1, c2, colls)
    };
    G__6450.cljs$core$IFn$_invoke$arity$variadic = G__6450__delegate;
    return G__6450
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1))
      }else {
        if(cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__6452__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__6452 = function(f, coll, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6452__delegate.call(this, f, coll, colls)
    };
    G__6452.cljs$lang$maxFixedArity = 2;
    G__6452.cljs$lang$applyTo = function(arglist__6453) {
      var f = cljs.core.first(arglist__6453);
      arglist__6453 = cljs.core.next(arglist__6453);
      var coll = cljs.core.first(arglist__6453);
      var colls = cljs.core.rest(arglist__6453);
      return G__6452__delegate(f, coll, colls)
    };
    G__6452.cljs$core$IFn$_invoke$arity$variadic = G__6452__delegate;
    return G__6452
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3120__auto___6454 = size;
        var i_6455 = 0;
        while(true) {
          if(i_6455 < n__3120__auto___6454) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_6455)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_6455))
            }else {
            }
            var G__6456 = i_6455 + 1;
            i_6455 = G__6456;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)))
      }else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if(cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r))
        }else {
          return filter.call(null, pred, r)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__6457_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__6457_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(!(to == null)) {
    if(function() {
      var G__6459 = to;
      if(G__6459) {
        if(function() {
          var or__3943__auto__ = G__6459.cljs$lang$protocol_mask$partition1$ & 4;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__6459.cljs$core$IEditableCollection$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
    }else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from)
    }
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__6460__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__6460 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__6460__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__6460.cljs$lang$maxFixedArity = 4;
    G__6460.cljs$lang$applyTo = function(arglist__6461) {
      var f = cljs.core.first(arglist__6461);
      arglist__6461 = cljs.core.next(arglist__6461);
      var c1 = cljs.core.first(arglist__6461);
      arglist__6461 = cljs.core.next(arglist__6461);
      var c2 = cljs.core.first(arglist__6461);
      arglist__6461 = cljs.core.next(arglist__6461);
      var c3 = cljs.core.first(arglist__6461);
      var colls = cljs.core.rest(arglist__6461);
      return G__6460__delegate(f, c1, c2, c3, colls)
    };
    G__6460.cljs$core$IFn$_invoke$arity$variadic = G__6460__delegate;
    return G__6460
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__$1) {
        if(!function() {
          var G__6463 = m__$1;
          if(G__6463) {
            if(function() {
              var or__3943__auto__ = G__6463.cljs$lang$protocol_mask$partition0$ & 256;
              if(or__3943__auto__) {
                return or__3943__auto__
              }else {
                return G__6463.cljs$core$ILookup$
              }
            }()) {
              return true
            }else {
              if(!G__6463.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__6463)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__6463)
          }
        }()) {
          return not_found
        }else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if(sentinel === m__$2) {
            return not_found
          }else {
            var G__6464 = sentinel;
            var G__6465 = m__$2;
            var G__6466 = cljs.core.next.call(null, ks__$1);
            sentinel = G__6464;
            m__$1 = G__6465;
            ks__$1 = G__6466;
            continue
          }
        }
      }else {
        return m__$1
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__6467, v) {
  var vec__6469 = p__6467;
  var k = cljs.core.nth.call(null, vec__6469, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__6469, 1);
  if(cljs.core.truth_(ks)) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v))
  }else {
    return cljs.core.assoc.call(null, m, k, v)
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__6470, f) {
    var vec__6480 = p__6470;
    var k = cljs.core.nth.call(null, vec__6480, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6480, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)))
    }
  };
  var update_in__4 = function(m, p__6471, f, a) {
    var vec__6481 = p__6471;
    var k = cljs.core.nth.call(null, vec__6481, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6481, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a))
    }
  };
  var update_in__5 = function(m, p__6472, f, a, b) {
    var vec__6482 = p__6472;
    var k = cljs.core.nth.call(null, vec__6482, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6482, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b))
    }
  };
  var update_in__6 = function(m, p__6473, f, a, b, c) {
    var vec__6483 = p__6473;
    var k = cljs.core.nth.call(null, vec__6483, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6483, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c))
    }
  };
  var update_in__7 = function() {
    var G__6485__delegate = function(m, p__6474, f, a, b, c, args) {
      var vec__6484 = p__6474;
      var k = cljs.core.nth.call(null, vec__6484, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__6484, 1);
      if(cljs.core.truth_(ks)) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args))
      }else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args))
      }
    };
    var G__6485 = function(m, p__6474, f, a, b, c, var_args) {
      var args = null;
      if(arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0)
      }
      return G__6485__delegate.call(this, m, p__6474, f, a, b, c, args)
    };
    G__6485.cljs$lang$maxFixedArity = 6;
    G__6485.cljs$lang$applyTo = function(arglist__6486) {
      var m = cljs.core.first(arglist__6486);
      arglist__6486 = cljs.core.next(arglist__6486);
      var p__6474 = cljs.core.first(arglist__6486);
      arglist__6486 = cljs.core.next(arglist__6486);
      var f = cljs.core.first(arglist__6486);
      arglist__6486 = cljs.core.next(arglist__6486);
      var a = cljs.core.first(arglist__6486);
      arglist__6486 = cljs.core.next(arglist__6486);
      var b = cljs.core.first(arglist__6486);
      arglist__6486 = cljs.core.next(arglist__6486);
      var c = cljs.core.first(arglist__6486);
      var args = cljs.core.rest(arglist__6486);
      return G__6485__delegate(m, p__6474, f, a, b, c, args)
    };
    G__6485.cljs$core$IFn$_invoke$arity$variadic = G__6485__delegate;
    return G__6485
  }();
  update_in = function(m, p__6474, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__6474, f);
      case 4:
        return update_in__4.call(this, m, p__6474, f, a);
      case 5:
        return update_in__5.call(this, m, p__6474, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__6474, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__6474, f, a, b, c, cljs.core.array_seq(arguments, 6))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in
}();
goog.provide("cljs.core.VectorNode");
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__2885__auto__, writer__2886__auto__, opts__2887__auto__) {
  return cljs.core._write.call(null, writer__2886__auto__, "cljs.core/VectorNode")
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, new Array(32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if(cnt < 32) {
    return 0
  }else {
    return cnt - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while(true) {
    if(ll === 0) {
      return ret
    }else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__6487 = ll - 5;
      var G__6488 = r;
      ll = G__6487;
      ret = G__6488;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret
  }else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if(!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < pv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node = pv.root;
      var level = pv.shift;
      while(true) {
        if(level > 0) {
          var G__6489 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__6490 = level - 5;
          node = G__6489;
          level = G__6490;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret
  }else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if("\ufdd0:else") {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentVector");
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= k;
    if(and__3941__auto__) {
      return k < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail = self__.tail.slice();
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null)
    }else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll, self__.shift, self__.root, k, v), self__.tail, null)
    }
  }else {
    if(k === self__.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0:else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__6492 = null;
  var G__6492__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__6492__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__6492 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6492__2.call(this, self__, k);
      case 3:
        return G__6492__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6492
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args6491) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args6491.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var step_init = [0, init];
  var i = 0;
  while(true) {
    if(i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while(true) {
          if(j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2
            }else {
              var G__6493 = j + 1;
              var G__6494 = init__$2;
              j = G__6493;
              init__$1 = G__6494;
              continue
            }
          }else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1)
      }else {
        var G__6495 = i + step_init[0];
        i = G__6495;
        continue
      }
    }else {
      return step_init[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(self__.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail = self__.tail.slice();
    new_tail.push(o);
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null)
  }else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r
    }() : cljs.core.push_tail.call(null, coll, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return new cljs.core.RSeq(coll, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    return null
  }else {
    if(self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail)
    }else {
      if("\ufdd0:else") {
        return cljs.core.chunked_seq.call(null, coll, 0, 0)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, self__.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
    }else {
      if(1 < self__.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null)
      }else {
        if("\ufdd0:else") {
          var new_tail = cljs.core.array_for.call(null, coll, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if(function() {
            var and__3941__auto__ = 5 < self__.shift;
            if(and__3941__auto__) {
              return cljs.core.pv_aget.call(null, new_root, 1) == null
            }else {
              return and__3941__auto__
            }
          }()) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null)
          }else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, new Array(32));
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : xs.slice();
  if(l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null)
  }else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while(true) {
      if(i < l) {
        var G__6496 = i + 1;
        var G__6497 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__6496;
        out = G__6497;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__6498) {
    var args = cljs.core.seq(arglist__6498);
    return vector__delegate(args)
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector
}();
goog.provide("cljs.core.ChunkedSeq");
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31719660;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return null
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.node[self__.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return cljs.core.List.EMPTY
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return null
  }else {
    return s
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return cljs.core.List.EMPTY
  }else {
    return s
  }
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq
}();
goog.provide("cljs.core.Subvec");
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, self__.end > v_pos + 1 ? self__.end : v_pos + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__6500 = null;
  var G__6500__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__6500__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__6500 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6500__2.call(this, self__, k);
      case 3:
        return G__6500__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6500
}();
cljs.core.Subvec.prototype.apply = function(self__, args6499) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args6499.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f, start__$1)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var subvec_seq = function subvec_seq(i) {
    if(i === self__.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq.call(null, self__.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.end - self__.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.v, self__.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.v, self__.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while(true) {
    if(v instanceof cljs.core.Subvec) {
      var G__6501 = meta;
      var G__6502 = v.v;
      var G__6503 = v.start + start;
      var G__6504 = v.start + end;
      var G__6505 = __hash;
      meta = G__6501;
      v = G__6502;
      start = G__6503;
      end = G__6504;
      __hash = G__6505;
      continue
    }else {
      var c = cljs.core.count.call(null, v);
      if(function() {
        var or__3943__auto__ = start < 0;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = end < 0;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = start > c;
            if(or__3943__auto____$2) {
              return or__3943__auto____$2
            }else {
              return end > c
            }
          }
        }
      }()) {
        throw new Error("Index out of bounds");
      }else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash)
    }
    break
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = new Array(32);
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if(!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if("\ufdd0:else") {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < tv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while(true) {
        if(level > 0) {
          var G__6506 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__6507 = level - 5;
          node = G__6506;
          level = G__6507;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
goog.provide("cljs.core.TransientVector");
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__6509 = null;
  var G__6509__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__6509__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__6509 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6509__2.call(this, self__, k);
      case 3:
        return G__6509__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6509
}();
cljs.core.TransientVector.prototype.apply = function(self__, args6508) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args6508.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  if(self__.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.root.edit) {
    return self__.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  if(self__.root.edit) {
    if(function() {
      var and__3941__auto__ = 0 <= n;
      if(and__3941__auto__) {
        return n < self__.cnt
      }else {
        return and__3941__auto__
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        self__.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1
          }else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll
      }
    }else {
      if(n === self__.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0:else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll
      }else {
        if((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0:else") {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll, self__.shift, self__.root);
              if(!(nr == null)) {
                return nr
              }else {
                return new cljs.core.VectorNode(self__.root.edit, new Array(32))
              }
            }();
            if(function() {
              var and__3941__auto__ = 5 < self__.shift;
              if(and__3941__auto__) {
                return cljs.core.pv_aget.call(null, new_root, 1) == null
              }else {
                return and__3941__auto__
              }
            }()) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll
    }else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = new Array(32);
      new_tail[0] = o;
      self__.tail = new_tail;
      if(self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = new Array(32);
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
goog.provide("cljs.core.PersistentQueueSeq");
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if(temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null)
  }else {
    if(self__.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
goog.provide("cljs.core.PersistentQueue");
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3943__auto__ = self__.rear;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if(cljs.core.truth_(function() {
    var or__3943__auto__ = self__.front;
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return rear__$1
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if(temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null)
    }else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
goog.provide("cljs.core.NeverEquiv");
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return false
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while(true) {
    if(i < len) {
      if(k === array[i]) {
        return i
      }else {
        var G__6510 = i + incr;
        i = G__6510;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if(a__$1 < b__$1) {
    return-1
  }else {
    if(a__$1 > b__$1) {
      return 1
    }else {
      if("\ufdd0:else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var k__$1 = ks[i];
      var G__6511 = i + 1;
      var G__6512 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__6511;
      out = G__6512;
      continue
    }else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm)
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_6514 = 0;
  while(true) {
    if(i_6514 < l) {
      var k_6515 = ks[i_6514];
      new_obj[k_6515] = obj[k_6515];
      var G__6516 = i_6514 + 1;
      i_6514 = G__6516;
      continue
    }else {
    }
    break
  }
  return new_obj
};
goog.provide("cljs.core.ObjMap");
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3943__auto__ = self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null)
      }else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = self__.keys.slice();
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__6518 = null;
  var G__6518__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__6518__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__6518 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6518__2.call(this, self__, k);
      case 3:
        return G__6518__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6518
}();
cljs.core.ObjMap.prototype.apply = function(self__, args6517) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args6517.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while(true) {
    if(cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__6519 = cljs.core.rest.call(null, keys__$1);
        var G__6520 = init__$2;
        keys__$1 = G__6519;
        init__$1 = G__6520;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__6513_SHARP_) {
      return cljs.core.vector.call(null, p1__6513_SHARP_, self__.strobj[p1__6513_SHARP_])
    }, self__.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    var new_keys = self__.keys.slice();
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(arr[i] == null) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__6521 = i + 2;
          i = G__6521;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        var and__3941__auto__ = k_SINGLEQUOTE_ instanceof cljs.core.Symbol;
        if(and__3941__auto__) {
          return kstr === k_SINGLEQUOTE_.str
        }else {
          return and__3941__auto__
        }
      }()) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__6522 = i + 2;
          i = G__6522;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(k === arr[i]) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__6523 = i + 2;
          i = G__6523;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, k, arr[i])) {
        return i
      }else {
        if("\ufdd0:else") {
          var G__6524 = i + 2;
          i = G__6524;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if(function() {
    var or__3943__auto__ = goog.isString(k);
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return typeof k === "number"
    }
  }()) {
    return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k)
  }else {
    if(k instanceof cljs.core.Symbol) {
      return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k)
    }else {
      if(k == null) {
        return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k)
      }else {
        if("\ufdd0:else") {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_6525 = 0;
  while(true) {
    if(i_6525 < l) {
      narr[i_6525] = arr[i_6525];
      var G__6526 = i_6525 + 1;
      i_6525 = G__6526;
      continue
    }else {
    }
    break
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr
};
goog.provide("cljs.core.PersistentArrayMap");
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, self__.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    return not_found
  }else {
    return self__.arr[idx + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    if(self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null)
    }else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll), k, v), self__.meta)
    }
  }else {
    if(v === self__.arr[idx + 1]) {
      return coll
    }else {
      if("\ufdd0:else") {
        var arr__$1 = function() {
          var G__6528 = self__.arr.slice();
          G__6528[idx + 1] = v;
          return G__6528
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__6529 = null;
  var G__6529__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__6529__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__6529 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6529__2.call(this, self__, k);
      case 3:
        return G__6529__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6529
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args6527) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args6527.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__6530 = i + 2;
        var G__6531 = init__$2;
        i = G__6530;
        init__$1 = G__6531;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    var len = self__.arr.length;
    var array_map_seq = function(len) {
      return function array_map_seq(i) {
        return new cljs.core.LazySeq(null, false, function(len) {
          return function() {
            if(i < len) {
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([self__.arr[i], self__.arr[i + 1]], true), array_map_seq.call(null, i + 2))
            }else {
              return null
            }
          }
        }(len), null)
      }
    }(len);
    return array_map_seq.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if(new_len === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while(true) {
        if(s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null)
        }else {
          if(cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__6532 = s + 2;
            var G__6533 = d;
            s = G__6532;
            d = G__6533;
            continue
          }else {
            if("\ufdd0:else") {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__6534 = s + 2;
              var G__6535 = d + 2;
              s = G__6534;
              d = G__6535;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : arr.slice();
  var cnt = arr__$1.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null)
};
goog.provide("cljs.core.TransientArrayMap");
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__6536_6538 = self__.arr;
      G__6536_6538.pop();
      G__6536_6538.pop();
      self__.len = self__.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx === -1) {
      if(self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val)
      }
    }else {
      if(val === self__.arr[idx + 1]) {
        return tcoll
      }else {
        self__.arr[idx + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    if(function() {
      var G__6537 = o;
      if(G__6537) {
        if(function() {
          var or__3943__auto__ = G__6537.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__6537.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__6537.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__6537)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__6537)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__6539 = cljs.core.next.call(null, es);
          var G__6540 = tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__$1, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__6539;
          tcoll__$1 = G__6540;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx === -1) {
      return not_found
    }else {
      return self__.arr[idx + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i = 0;
  while(true) {
    if(i < len) {
      var G__6541 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__6542 = i + 2;
      out = G__6541;
      i = G__6542;
      continue
    }else {
      return out
    }
    break
  }
};
goog.provide("cljs.core.Box");
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__2885__auto__, writer__2886__auto__, opts__2887__auto__) {
  return cljs.core._write.call(null, writer__2886__auto__, "cljs.core/Box")
};
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__6545 = arr.slice();
    G__6545[i] = a;
    return G__6545
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__6546 = arr.slice();
    G__6546[i] = a;
    G__6546[j] = b;
    return G__6546
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if(!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1])
        }else {
          var node = arr[i + 1];
          if(!(node == null)) {
            return node.kv_reduce(f, init__$1)
          }else {
            return init__$1
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__6547 = i + 2;
        var G__6548 = init__$2;
        i = G__6547;
        init__$1 = G__6548;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
goog.provide("cljs.core.BitmapIndexedNode");
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if(self__.bitmap === bit) {
    return null
  }else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable
    }else {
      if(n >= 16) {
        var nodes = new Array(32);
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_6549 = 0;
        var j_6550 = 0;
        while(true) {
          if(i_6549 < 32) {
            if((self__.bitmap >>> i_6549 & 1) === 0) {
              var G__6551 = i_6549 + 1;
              var G__6552 = j_6550;
              i_6549 = G__6551;
              j_6550 = G__6552;
              continue
            }else {
              nodes[i_6549] = !(self__.arr[j_6550] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_6550]), self__.arr[j_6550], self__.arr[j_6550 + 1], added_leaf_QMARK_) : self__.arr[j_6550 + 1];
              var G__6553 = i_6549 + 1;
              var G__6554 = j_6550 + 2;
              i_6549 = G__6553;
              j_6550 = G__6554;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes)
      }else {
        if("\ufdd0:else") {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val)
        }
      }else {
        if("\ufdd0:else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if("\ufdd0:else") {
              return inode.edit_and_remove_pair(edit__$1, bit, idx)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx)
      }else {
        if("\ufdd0:else") {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil, val_or_node], true)
      }else {
        if("\ufdd0:else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if("\ufdd0:else") {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
      }else {
        if("\ufdd0:else") {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(n >= 16) {
      var nodes = new Array(32);
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_6555 = 0;
      var j_6556 = 0;
      while(true) {
        if(i_6555 < 32) {
          if((self__.bitmap >>> i_6555 & 1) === 0) {
            var G__6557 = i_6555 + 1;
            var G__6558 = j_6556;
            i_6555 = G__6557;
            j_6556 = G__6558;
            continue
          }else {
            nodes[i_6555] = !(self__.arr[j_6556] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_6556]), self__.arr[j_6556], self__.arr[j_6556 + 1], added_leaf_QMARK_) : self__.arr[j_6556 + 1];
            var G__6559 = i_6555 + 1;
            var G__6560 = j_6556 + 2;
            i_6555 = G__6559;
            j_6556 = G__6560;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes)
    }else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr)
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val))
        }
      }else {
        if("\ufdd0:else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node
      }else {
        if("\ufdd0:else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, new Array(0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while(true) {
    if(i < len) {
      if(function() {
        var and__3941__auto__ = !(i === idx);
        if(and__3941__auto__) {
          return!(arr[i] == null)
        }else {
          return and__3941__auto__
        }
      }()) {
        new_arr[j] = arr[i];
        var G__6561 = i + 1;
        var G__6562 = j + 2;
        var G__6563 = bitmap | 1 << i;
        i = G__6561;
        j = G__6562;
        bitmap = G__6563;
        continue
      }else {
        var G__6564 = i + 1;
        var G__6565 = j;
        var G__6566 = bitmap;
        i = G__6564;
        j = G__6565;
        bitmap = G__6566;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr)
    }
    break
  }
};
goog.provide("cljs.core.ArrayNode");
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable
  }else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return inode
  }else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx)
        }else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable
        }
      }else {
        if("\ufdd0:else") {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    return new cljs.core.ArrayNode(e, self__.cnt, self__.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var node = self__.arr[i];
      if(!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2)
        }else {
          var G__6567 = i + 1;
          var G__6568 = init__$2;
          i = G__6567;
          init__$1 = G__6568;
          continue
        }
      }else {
        var G__6569 = i + 1;
        var G__6570 = init__$1;
        i = G__6569;
        init__$1 = G__6570;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx)
        }else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }
      }else {
        if("\ufdd0:else") {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }else {
          return null
        }
      }
    }
  }else {
    return inode
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while(true) {
    if(i < lim) {
      if(cljs.core.key_test.call(null, key, arr[i])) {
        return i
      }else {
        var G__6571 = i + 2;
        i = G__6571;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
goog.provide("cljs.core.HashCollisionNode");
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      if(self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable
      }else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr)
      }
    }else {
      if(self__.arr[idx + 1] === val) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    removed_leaf_QMARK_[0] = true;
    if(self__.cnt === 1) {
      return null
    }else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return cljs.core.PersistentVector.fromArray([self__.arr[idx], self__.arr[idx + 1]], true)
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    if(self__.cnt === 1) {
      return null
    }else {
      if("\ufdd0:else") {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      var len = self__.arr.length;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr)
    }else {
      if(cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode
      }else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1]
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode
  }else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array)
  }
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node
}();
goog.provide("cljs.core.NodeSeq");
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.PersistentVector.fromArray([self__.nodes[self__.i], self__.nodes[self__.i + 1]], true)
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          if(!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null)
          }else {
            var temp__4090__auto__ = nodes[j + 1];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if(cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null)
              }else {
                var G__6572 = j + 2;
                j = G__6572;
                continue
              }
            }else {
              var G__6573 = j + 2;
              j = G__6573;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
goog.provide("cljs.core.ArrayNodeSeq");
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          var temp__4090__auto__ = nodes[j];
          if(cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if(cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null)
            }else {
              var G__6574 = j + 1;
              j = G__6574;
              continue
            }
          }else {
            var G__6575 = j + 1;
            j = G__6575;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
goog.provide("cljs.core.PersistentHashMap");
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      if("\ufdd0:else") {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(k == null) {
    if(function() {
      var and__3941__auto__ = self__.has_nil_QMARK_;
      if(and__3941__auto__) {
        return v === self__.nil_val
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if(new_root === self__.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    return self__.has_nil_QMARK_
  }else {
    if(self__.root == null) {
      return false
    }else {
      if("\ufdd0:else") {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__6577 = null;
  var G__6577__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__6577__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__6577 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6577__2.call(this, self__, k);
      case 3:
        return G__6577__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6577
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args6576) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args6576.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    if(!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1)
    }else {
      if("\ufdd0:else") {
        return init__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if(self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, self__.nil_val], true), s)
    }else {
      return s
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(self__.root == null) {
      return coll
    }else {
      if("\ufdd0:else") {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root === self__.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var G__6578 = i + 1;
      var G__6579 = cljs.core.assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__6578;
      out = G__6579;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out)
    }
    break
  }
};
goog.provide("cljs.core.TransientHashMap");
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return null
    }
  }else {
    if(self__.root == null) {
      return null
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.edit) {
    return self__.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(function() {
      var G__6580 = o;
      if(G__6580) {
        if(function() {
          var or__3943__auto__ = G__6580.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__6580.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__6580.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__6580)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__6580)
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__6581 = cljs.core.next.call(null, es);
          var G__6582 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__6581;
          tcoll__$1 = G__6582;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.nil_val === v) {
      }else {
        self__.nil_val = v
      }
      if(self__.has_nil_QMARK_) {
      }else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true
      }
      return tcoll
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if(node === self__.root) {
      }else {
        self__.root = node
      }
      if(added_leaf_QMARK_.val) {
        self__.count = self__.count + 1
      }else {
      }
      return tcoll
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll
      }else {
        return tcoll
      }
    }else {
      if(self__.root == null) {
        return tcoll
      }else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if(node === self__.root) {
        }else {
          self__.root = node
        }
        if(cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1
        }else {
        }
        return tcoll
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while(true) {
    if(!(t == null)) {
      var G__6583 = ascending_QMARK_ ? t.left : t.right;
      var G__6584 = cljs.core.conj.call(null, stack__$1, t);
      t = G__6583;
      stack__$1 = G__6584;
      continue
    }else {
      return stack__$1
    }
    break
  }
};
goog.provide("cljs.core.PersistentTreeMapSeq");
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850574
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return self__.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  return cljs.core.peek.call(null, self__.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if(!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0:else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0:else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3941__auto__ = right instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return right.left instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0:else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3941__auto__ = left instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return left.right instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0:else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2)
    }else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if(cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3)
      }else {
        return init__$3
      }
    }
  }
};
goog.provide("cljs.core.BlackNode");
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__6586 = null;
  var G__6586__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__6586__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__6586 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6586__2.call(this, self__, k);
      case 3:
        return G__6586__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6586
}();
cljs.core.BlackNode.prototype.apply = function(self__, args6585) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args6585.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node)
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
goog.provide("cljs.core.RedNode");
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__6588 = null;
  var G__6588__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__6588__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__6588 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6588__2.call(this, self__, k);
      case 3:
        return G__6588__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6588
}();
cljs.core.RedNode.prototype.apply = function(self__, args6587) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args6587.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null)
  }else {
    if(self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null)
    }else {
      if("\ufdd0:else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null)
  }else {
    if(self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null)
    }else {
      if("\ufdd0:else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if("\ufdd0:else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return null
    }else {
      if(c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins == null)) {
          return tree.add_left(ins)
        }else {
          return null
        }
      }else {
        if("\ufdd0:else") {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins == null)) {
            return tree.add_right(ins)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(left instanceof cljs.core.RedNode) {
        if(right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if(app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0:else") {
            var app = tree_map_append.call(null, left.right, right.left);
            if(app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3943__auto__ = !(del == null);
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0:else") {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3943__auto__ = !(del == null);
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if(c === 0) {
    return tree.replace(tk, v, tree.left, tree.right)
  }else {
    if(c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0:else") {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentTreeMap");
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var n = coll.entry_at(k);
  if(!(n == null)) {
    return n.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if(t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if(cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__6590 = null;
  var G__6590__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__6590__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__6590 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6590__2.call(this, self__, k);
      case 3:
        return G__6590__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6590
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args6589) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args6589.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  if(!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while(true) {
    if(!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if(c === 0) {
        return t
      }else {
        if(c < 0) {
          var G__6591 = t.left;
          t = G__6591;
          continue
        }else {
          if("\ufdd0:else") {
            var G__6592 = t.right;
            t = G__6592;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while(true) {
      if(!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if(c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c < 0) {
              var G__6593 = cljs.core.conj.call(null, stack, t);
              var G__6594 = t.left;
              stack = G__6593;
              t = G__6594;
              continue
            }else {
              var G__6595 = stack;
              var G__6596 = t.right;
              stack = G__6595;
              t = G__6596;
              continue
            }
          }else {
            if("\ufdd0:else") {
              if(c > 0) {
                var G__6597 = cljs.core.conj.call(null, stack, t);
                var G__6598 = t.right;
                stack = G__6597;
                t = G__6598;
                continue
              }else {
                var G__6599 = stack;
                var G__6600 = t.left;
                stack = G__6599;
                t = G__6600;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack == null) {
          return null
        }else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null)
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return self__.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if(t == null) {
    if(cljs.core.nth.call(null, found, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null)
  }
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in$) {
        var G__6601 = cljs.core.nnext.call(null, in$);
        var G__6602 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6601;
        out = G__6602;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__6603) {
    var keyvals = cljs.core.seq(arglist__6603);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__6604) {
    var keyvals = cljs.core.seq(arglist__6604);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = {};
    var kvs = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__6605 = cljs.core.nnext.call(null, kvs);
        kvs = G__6605;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__6606) {
    var keyvals = cljs.core.seq(arglist__6606);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in$) {
        var G__6607 = cljs.core.nnext.call(null, in$);
        var G__6608 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6607;
        out = G__6608;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__6609) {
    var keyvals = cljs.core.seq(arglist__6609);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while(true) {
      if(in$) {
        var G__6610 = cljs.core.nnext.call(null, in$);
        var G__6611 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6610;
        out = G__6611;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__6612) {
    var comparator = cljs.core.first(arglist__6612);
    var keyvals = cljs.core.rest(arglist__6612);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__6613_SHARP_, p2__6614_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3943__auto__ = p1__6613_SHARP_;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__6614_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__6615) {
    var maps = cljs.core.seq(arglist__6615);
    return merge__delegate(maps)
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v))
        }else {
          return cljs.core.assoc.call(null, m, k, v)
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3943__auto__ = m1;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.ObjMap.EMPTY
            }
          }(), cljs.core.seq.call(null, m2))
        }
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__6616) {
    var f = cljs.core.first(arglist__6616);
    var maps = cljs.core.rest(arglist__6616);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.ObjMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, "\ufdd0:cljs.core/not-found");
      var G__6617 = cljs.core.not_EQ_.call(null, entry, "\ufdd0:cljs.core/not-found") ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__6618 = cljs.core.next.call(null, keys);
      ret = G__6617;
      keys = G__6618;
      continue
    }else {
      return ret
    }
    break
  }
};
goog.provide("cljs.core.PersistentHashSet");
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__6621 = null;
  var G__6621__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__6621__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__6621 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6621__2.call(this, self__, k);
      case 3:
        return G__6621__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6621
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args6620) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args6620.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._count.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__6619_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__6619_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta)
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if(len / 2 <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : items.slice();
    return new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.fromArray.call(null, arr, true), null)
  }else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < len) {
        var G__6622 = i + 2;
        var G__6623 = cljs.core.conj_BANG_.call(null, out, items[i]);
        i = G__6622;
        out = G__6623;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
goog.provide("cljs.core.TransientHashSet");
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__6626 = null;
  var G__6626__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__6626__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__6626 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6626__2.call(this, self__, k);
      case 3:
        return G__6626__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6626
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args6625) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args6625.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  if(cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null)
};
goog.provide("cljs.core.PersistentTreeSet");
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var n = self__.tree_map.entry_at(v);
  if(!(n == null)) {
    return n.key
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__6628 = null;
  var G__6628__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__6628__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__6628 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6628__2.call(this, self__, k);
      case 3:
        return G__6628__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6628
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args6627) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args6627.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._comparator.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__6624_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__6624_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta)
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__6629__delegate = function(keys) {
      if(function() {
        var and__3941__auto__ = keys instanceof cljs.core.IndexedSeq;
        if(and__3941__auto__) {
          return keys.arr.length < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD
        }else {
          return and__3941__auto__
        }
      }()) {
        var karr = keys.arr;
        var klen = karr.length;
        var alen = 2 * klen;
        var arr = new Array(alen);
        var ki = 0;
        while(true) {
          if(ki < klen) {
            var ai = 2 * ki;
            arr[ai] = karr[ki];
            arr[ai + 1] = null;
            var G__6630 = ki + 1;
            ki = G__6630;
            continue
          }else {
            return cljs.core.PersistentHashSet.fromArray.call(null, arr, true)
          }
          break
        }
      }else {
        var in$ = keys;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while(true) {
          if(!(in$ == null)) {
            var G__6631 = cljs.core._next.call(null, in$);
            var G__6632 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$));
            in$ = G__6631;
            out = G__6632;
            continue
          }else {
            return cljs.core._persistent_BANG_.call(null, out)
          }
          break
        }
      }
    };
    var G__6629 = function(var_args) {
      var keys = null;
      if(arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__6629__delegate.call(this, keys)
    };
    G__6629.cljs$lang$maxFixedArity = 0;
    G__6629.cljs$lang$applyTo = function(arglist__6633) {
      var keys = cljs.core.seq(arglist__6633);
      return G__6629__delegate(keys)
    };
    G__6629.cljs$core$IFn$_invoke$arity$variadic = G__6629__delegate;
    return G__6629
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__6634) {
    var keys = cljs.core.seq(arglist__6634);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__6636) {
    var comparator = cljs.core.first(arglist__6636);
    var keys = cljs.core.rest(arglist__6636);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__6635_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__6635_SHARP_);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e)
      }else {
        return p1__6635_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__6643, seen__$1) {
        while(true) {
          var vec__6644 = p__6643;
          var f = cljs.core.nth.call(null, vec__6644, 0, null);
          var xs__$1 = vec__6644;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if(temp__4092__auto__) {
            var s = temp__4092__auto__;
            if(cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__6645 = cljs.core.rest.call(null, s);
              var G__6646 = seen__$1;
              p__6643 = G__6645;
              seen__$1 = G__6646;
              continue
            }else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while(true) {
    if(cljs.core.next.call(null, s__$1)) {
      var G__6647 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__6648 = cljs.core.next.call(null, s__$1);
      ret = G__6647;
      s__$1 = G__6648;
      continue
    }else {
      return cljs.core.seq.call(null, ret)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(function() {
    var G__6650 = x;
    if(G__6650) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__6650.cljs$core$INamed$
        }
      }())) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._name.call(null, x)
  }else {
    if(cljs.core.string_QMARK_.call(null, x)) {
      return x
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        var i = x.lastIndexOf("/", x.length - 2);
        if(i < 0) {
          return cljs.core.subs.call(null, x, 2)
        }else {
          return cljs.core.subs.call(null, x, i + 1)
        }
      }else {
        if("\ufdd0:else") {
          throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var G__6652 = x;
    if(G__6652) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__6652.cljs$core$INamed$
        }
      }())) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._namespace.call(null, x)
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      var i = x.lastIndexOf("/", x.length - 2);
      if(i > -1) {
        return cljs.core.subs.call(null, x, 2, i)
      }else {
        return null
      }
    }else {
      throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.ObjMap.EMPTY;
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3941__auto__ = ks;
      if(and__3941__auto__) {
        return vs
      }else {
        return and__3941__auto__
      }
    }()) {
      var G__6655 = cljs.core.assoc.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__6656 = cljs.core.next.call(null, ks);
      var G__6657 = cljs.core.next.call(null, vs);
      map = G__6655;
      ks = G__6656;
      vs = G__6657;
      continue
    }else {
      return map
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__6660__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__6653_SHARP_, p2__6654_SHARP_) {
        return max_key.call(null, k, p1__6653_SHARP_, p2__6654_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__6660 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__6660__delegate.call(this, k, x, y, more)
    };
    G__6660.cljs$lang$maxFixedArity = 3;
    G__6660.cljs$lang$applyTo = function(arglist__6661) {
      var k = cljs.core.first(arglist__6661);
      arglist__6661 = cljs.core.next(arglist__6661);
      var x = cljs.core.first(arglist__6661);
      arglist__6661 = cljs.core.next(arglist__6661);
      var y = cljs.core.first(arglist__6661);
      var more = cljs.core.rest(arglist__6661);
      return G__6660__delegate(k, x, y, more)
    };
    G__6660.cljs$core$IFn$_invoke$arity$variadic = G__6660__delegate;
    return G__6660
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__6662__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__6658_SHARP_, p2__6659_SHARP_) {
        return min_key.call(null, k, p1__6658_SHARP_, p2__6659_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__6662 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__6662__delegate.call(this, k, x, y, more)
    };
    G__6662.cljs$lang$maxFixedArity = 3;
    G__6662.cljs$lang$applyTo = function(arglist__6663) {
      var k = cljs.core.first(arglist__6663);
      arglist__6663 = cljs.core.next(arglist__6663);
      var x = cljs.core.first(arglist__6663);
      arglist__6663 = cljs.core.next(arglist__6663);
      var y = cljs.core.first(arglist__6663);
      var more = cljs.core.rest(arglist__6663);
      return G__6662__delegate(k, x, y, more)
    };
    G__6662.cljs$core$IFn$_invoke$arity$variadic = G__6662__delegate;
    return G__6662
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, null, cljs.core._GT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__6666 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__6666, 0, null);
        var s = vec__6666;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__6667 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__6667, 0, null);
      var s = vec__6667;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, null, cljs.core._LT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__6670 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__6670, 0, null);
        var s = vec__6670;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__6671 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__6671, 0, null);
      var s = vec__6671;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq
}();
goog.provide("cljs.core.Range");
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_coll.call(null, rng);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }else {
    if(self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start < self__.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(self__.start > self__.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((self__.end - self__.start) / self__.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  return self__.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  return self__.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__6672_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__6672_SHARP_))
        }
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__6683 = null;
      var G__6683__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__6683__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__6683__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__6683__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__6683__4 = function() {
        var G__6684__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__6684 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__6684__delegate.call(this, x, y, z, args)
        };
        G__6684.cljs$lang$maxFixedArity = 3;
        G__6684.cljs$lang$applyTo = function(arglist__6685) {
          var x = cljs.core.first(arglist__6685);
          arglist__6685 = cljs.core.next(arglist__6685);
          var y = cljs.core.first(arglist__6685);
          arglist__6685 = cljs.core.next(arglist__6685);
          var z = cljs.core.first(arglist__6685);
          var args = cljs.core.rest(arglist__6685);
          return G__6684__delegate(x, y, z, args)
        };
        G__6684.cljs$core$IFn$_invoke$arity$variadic = G__6684__delegate;
        return G__6684
      }();
      G__6683 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6683__0.call(this);
          case 1:
            return G__6683__1.call(this, x);
          case 2:
            return G__6683__2.call(this, x, y);
          case 3:
            return G__6683__3.call(this, x, y, z);
          default:
            return G__6683__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6683.cljs$lang$maxFixedArity = 3;
      G__6683.cljs$lang$applyTo = G__6683__4.cljs$lang$applyTo;
      return G__6683
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__6686 = null;
      var G__6686__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__6686__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__6686__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__6686__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__6686__4 = function() {
        var G__6687__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__6687 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__6687__delegate.call(this, x, y, z, args)
        };
        G__6687.cljs$lang$maxFixedArity = 3;
        G__6687.cljs$lang$applyTo = function(arglist__6688) {
          var x = cljs.core.first(arglist__6688);
          arglist__6688 = cljs.core.next(arglist__6688);
          var y = cljs.core.first(arglist__6688);
          arglist__6688 = cljs.core.next(arglist__6688);
          var z = cljs.core.first(arglist__6688);
          var args = cljs.core.rest(arglist__6688);
          return G__6687__delegate(x, y, z, args)
        };
        G__6687.cljs$core$IFn$_invoke$arity$variadic = G__6687__delegate;
        return G__6687
      }();
      G__6686 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6686__0.call(this);
          case 1:
            return G__6686__1.call(this, x);
          case 2:
            return G__6686__2.call(this, x, y);
          case 3:
            return G__6686__3.call(this, x, y, z);
          default:
            return G__6686__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6686.cljs$lang$maxFixedArity = 3;
      G__6686.cljs$lang$applyTo = G__6686__4.cljs$lang$applyTo;
      return G__6686
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__6689 = null;
      var G__6689__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__6689__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__6689__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__6689__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__6689__4 = function() {
        var G__6690__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__6690 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__6690__delegate.call(this, x, y, z, args)
        };
        G__6690.cljs$lang$maxFixedArity = 3;
        G__6690.cljs$lang$applyTo = function(arglist__6691) {
          var x = cljs.core.first(arglist__6691);
          arglist__6691 = cljs.core.next(arglist__6691);
          var y = cljs.core.first(arglist__6691);
          arglist__6691 = cljs.core.next(arglist__6691);
          var z = cljs.core.first(arglist__6691);
          var args = cljs.core.rest(arglist__6691);
          return G__6690__delegate(x, y, z, args)
        };
        G__6690.cljs$core$IFn$_invoke$arity$variadic = G__6690__delegate;
        return G__6690
      }();
      G__6689 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6689__0.call(this);
          case 1:
            return G__6689__1.call(this, x);
          case 2:
            return G__6689__2.call(this, x, y);
          case 3:
            return G__6689__3.call(this, x, y, z);
          default:
            return G__6689__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6689.cljs$lang$maxFixedArity = 3;
      G__6689.cljs$lang$applyTo = G__6689__4.cljs$lang$applyTo;
      return G__6689
    }()
  };
  var juxt__4 = function() {
    var G__6692__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__6693 = null;
        var G__6693__0 = function() {
          return cljs.core.reduce.call(null, function(p1__6673_SHARP_, p2__6674_SHARP_) {
            return cljs.core.conj.call(null, p1__6673_SHARP_, p2__6674_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__6693__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__6675_SHARP_, p2__6676_SHARP_) {
            return cljs.core.conj.call(null, p1__6675_SHARP_, p2__6676_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__6693__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__6677_SHARP_, p2__6678_SHARP_) {
            return cljs.core.conj.call(null, p1__6677_SHARP_, p2__6678_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__6693__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__6679_SHARP_, p2__6680_SHARP_) {
            return cljs.core.conj.call(null, p1__6679_SHARP_, p2__6680_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__6693__4 = function() {
          var G__6694__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__6681_SHARP_, p2__6682_SHARP_) {
              return cljs.core.conj.call(null, p1__6681_SHARP_, cljs.core.apply.call(null, p2__6682_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__$1)
          };
          var G__6694 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__6694__delegate.call(this, x, y, z, args)
          };
          G__6694.cljs$lang$maxFixedArity = 3;
          G__6694.cljs$lang$applyTo = function(arglist__6695) {
            var x = cljs.core.first(arglist__6695);
            arglist__6695 = cljs.core.next(arglist__6695);
            var y = cljs.core.first(arglist__6695);
            arglist__6695 = cljs.core.next(arglist__6695);
            var z = cljs.core.first(arglist__6695);
            var args = cljs.core.rest(arglist__6695);
            return G__6694__delegate(x, y, z, args)
          };
          G__6694.cljs$core$IFn$_invoke$arity$variadic = G__6694__delegate;
          return G__6694
        }();
        G__6693 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__6693__0.call(this);
            case 1:
              return G__6693__1.call(this, x);
            case 2:
              return G__6693__2.call(this, x, y);
            case 3:
              return G__6693__3.call(this, x, y, z);
            default:
              return G__6693__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__6693.cljs$lang$maxFixedArity = 3;
        G__6693.cljs$lang$applyTo = G__6693__4.cljs$lang$applyTo;
        return G__6693
      }()
    };
    var G__6692 = function(f, g, h, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__6692__delegate.call(this, f, g, h, fs)
    };
    G__6692.cljs$lang$maxFixedArity = 3;
    G__6692.cljs$lang$applyTo = function(arglist__6696) {
      var f = cljs.core.first(arglist__6696);
      arglist__6696 = cljs.core.next(arglist__6696);
      var g = cljs.core.first(arglist__6696);
      arglist__6696 = cljs.core.next(arglist__6696);
      var h = cljs.core.first(arglist__6696);
      var fs = cljs.core.rest(arglist__6696);
      return G__6692__delegate(f, g, h, fs)
    };
    G__6692.cljs$core$IFn$_invoke$arity$variadic = G__6692__delegate;
    return G__6692
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__6697 = cljs.core.next.call(null, coll);
        coll = G__6697;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = cljs.core.seq.call(null, coll);
        if(and__3941__auto__) {
          return n > 0
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__6698 = n - 1;
        var G__6699 = cljs.core.next.call(null, coll);
        n = G__6698;
        coll = G__6699;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if(cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data, re_seq.call(null, re, post_match))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__6701 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__6701, 0, null);
  var flags = cljs.core.nth.call(null, vec__6701, 1, null);
  var pattern = cljs.core.nth.call(null, vec__6701, 2, null);
  return new RegExp(pattern, flags)
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  cljs.core._write.call(null, writer, begin);
  if(cljs.core.seq.call(null, coll)) {
    print_one.call(null, cljs.core.first.call(null, coll), writer, opts)
  }else {
  }
  var seq__6706_6710 = cljs.core.seq.call(null, cljs.core.next.call(null, coll));
  var chunk__6707_6711 = null;
  var count__6708_6712 = 0;
  var i__6709_6713 = 0;
  while(true) {
    if(i__6709_6713 < count__6708_6712) {
      var o_6714 = cljs.core._nth.call(null, chunk__6707_6711, i__6709_6713);
      cljs.core._write.call(null, writer, sep);
      print_one.call(null, o_6714, writer, opts);
      var G__6715 = seq__6706_6710;
      var G__6716 = chunk__6707_6711;
      var G__6717 = count__6708_6712;
      var G__6718 = i__6709_6713 + 1;
      seq__6706_6710 = G__6715;
      chunk__6707_6711 = G__6716;
      count__6708_6712 = G__6717;
      i__6709_6713 = G__6718;
      continue
    }else {
      var temp__4092__auto___6719 = cljs.core.seq.call(null, seq__6706_6710);
      if(temp__4092__auto___6719) {
        var seq__6706_6720__$1 = temp__4092__auto___6719;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__6706_6720__$1)) {
          var c__3073__auto___6721 = cljs.core.chunk_first.call(null, seq__6706_6720__$1);
          var G__6722 = cljs.core.chunk_rest.call(null, seq__6706_6720__$1);
          var G__6723 = c__3073__auto___6721;
          var G__6724 = cljs.core.count.call(null, c__3073__auto___6721);
          var G__6725 = 0;
          seq__6706_6710 = G__6722;
          chunk__6707_6711 = G__6723;
          count__6708_6712 = G__6724;
          i__6709_6713 = G__6725;
          continue
        }else {
          var o_6726 = cljs.core.first.call(null, seq__6706_6720__$1);
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, o_6726, writer, opts);
          var G__6727 = cljs.core.next.call(null, seq__6706_6720__$1);
          var G__6728 = null;
          var G__6729 = 0;
          var G__6730 = 0;
          seq__6706_6710 = G__6727;
          chunk__6707_6711 = G__6728;
          count__6708_6712 = G__6729;
          i__6709_6713 = G__6730;
          continue
        }
      }else {
      }
    }
    break
  }
  return cljs.core._write.call(null, writer, end)
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__6735 = cljs.core.seq.call(null, ss);
    var chunk__6736 = null;
    var count__6737 = 0;
    var i__6738 = 0;
    while(true) {
      if(i__6738 < count__6737) {
        var s = cljs.core._nth.call(null, chunk__6736, i__6738);
        cljs.core._write.call(null, writer, s);
        var G__6739 = seq__6735;
        var G__6740 = chunk__6736;
        var G__6741 = count__6737;
        var G__6742 = i__6738 + 1;
        seq__6735 = G__6739;
        chunk__6736 = G__6740;
        count__6737 = G__6741;
        i__6738 = G__6742;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__6735);
        if(temp__4092__auto__) {
          var seq__6735__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__6735__$1)) {
            var c__3073__auto__ = cljs.core.chunk_first.call(null, seq__6735__$1);
            var G__6743 = cljs.core.chunk_rest.call(null, seq__6735__$1);
            var G__6744 = c__3073__auto__;
            var G__6745 = cljs.core.count.call(null, c__3073__auto__);
            var G__6746 = 0;
            seq__6735 = G__6743;
            chunk__6736 = G__6744;
            count__6737 = G__6745;
            i__6738 = G__6746;
            continue
          }else {
            var s = cljs.core.first.call(null, seq__6735__$1);
            cljs.core._write.call(null, writer, s);
            var G__6747 = cljs.core.next.call(null, seq__6735__$1);
            var G__6748 = null;
            var G__6749 = 0;
            var G__6750 = 0;
            seq__6735 = G__6747;
            chunk__6736 = G__6748;
            count__6737 = G__6749;
            i__6738 = G__6750;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if(arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return write_all__delegate.call(this, writer, ss)
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__6751) {
    var writer = cljs.core.first(arglist__6751);
    var ss = cljs.core.rest(arglist__6751);
    return write_all__delegate(writer, ss)
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.char_escapes = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match]
  })), cljs.core.str('"')].join("")
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if(obj == null) {
    return cljs.core._write.call(null, writer, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core._write.call(null, writer, "#<undefined>")
    }else {
      if("\ufdd0:else") {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = cljs.core.get.call(null, opts, "\ufdd0:meta");
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = function() {
              var G__6754 = obj;
              if(G__6754) {
                if(function() {
                  var or__3943__auto__ = G__6754.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__6754.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__6754.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__6754)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__6754)
              }
            }();
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ")
        }else {
        }
        if(obj == null) {
          return cljs.core._write.call(null, writer, "nil")
        }else {
          if(obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts)
          }else {
            if(function() {
              var G__6755 = obj;
              if(G__6755) {
                if(function() {
                  var or__3943__auto__ = G__6755.cljs$lang$protocol_mask$partition0$ & 2147483648;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__6755.cljs$core$IPrintWithWriter$
                  }
                }()) {
                  return true
                }else {
                  return false
                }
              }else {
                return false
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts)
            }else {
              if(function() {
                var or__3943__auto__ = cljs.core.type.call(null, obj) === Boolean;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return typeof obj === "number"
                }
              }()) {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""))
              }else {
                if(obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#<Array [", ", ", "]>", opts, obj)
                }else {
                  if(goog.isString(obj)) {
                    if(cljs.core.keyword_QMARK_.call(null, obj)) {
                      cljs.core._write.call(null, writer, ":");
                      var temp__4092__auto___6756 = cljs.core.namespace.call(null, obj);
                      if(cljs.core.truth_(temp__4092__auto___6756)) {
                        var nspc_6757 = temp__4092__auto___6756;
                        cljs.core.write_all.call(null, writer, [cljs.core.str(nspc_6757)].join(""), "/")
                      }else {
                      }
                      return cljs.core._write.call(null, writer, cljs.core.name.call(null, obj))
                    }else {
                      if(obj instanceof cljs.core.Symbol) {
                        var temp__4092__auto___6758 = cljs.core.namespace.call(null, obj);
                        if(cljs.core.truth_(temp__4092__auto___6758)) {
                          var nspc_6759 = temp__4092__auto___6758;
                          cljs.core.write_all.call(null, writer, [cljs.core.str(nspc_6759)].join(""), "/")
                        }else {
                        }
                        return cljs.core._write.call(null, writer, cljs.core.name.call(null, obj))
                      }else {
                        if("\ufdd0:else") {
                          if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0:readably")).call(null, opts))) {
                            return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj))
                          }else {
                            return cljs.core._write.call(null, writer, obj)
                          }
                        }else {
                          return null
                        }
                      }
                    }
                  }else {
                    if(cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#<", [cljs.core.str(obj)].join(""), ">")
                    }else {
                      if(obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while(true) {
                            if(cljs.core.count.call(null, ns) < len) {
                              var G__6760 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__6760;
                              continue
                            }else {
                              return ns
                            }
                            break
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"')
                      }else {
                        if(cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj))) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"')
                        }else {
                          if("\ufdd0:else") {
                            return cljs.core.write_all.call(null, writer, "#<", [cljs.core.str(obj)].join(""), ">")
                          }else {
                            return null
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__6765 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__6766 = null;
  var count__6767 = 0;
  var i__6768 = 0;
  while(true) {
    if(i__6768 < count__6767) {
      var obj = cljs.core._nth.call(null, chunk__6766, i__6768);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__6769 = seq__6765;
      var G__6770 = chunk__6766;
      var G__6771 = count__6767;
      var G__6772 = i__6768 + 1;
      seq__6765 = G__6769;
      chunk__6766 = G__6770;
      count__6767 = G__6771;
      i__6768 = G__6772;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__6765);
      if(temp__4092__auto__) {
        var seq__6765__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__6765__$1)) {
          var c__3073__auto__ = cljs.core.chunk_first.call(null, seq__6765__$1);
          var G__6773 = cljs.core.chunk_rest.call(null, seq__6765__$1);
          var G__6774 = c__3073__auto__;
          var G__6775 = cljs.core.count.call(null, c__3073__auto__);
          var G__6776 = 0;
          seq__6765 = G__6773;
          chunk__6766 = G__6774;
          count__6767 = G__6775;
          i__6768 = G__6776;
          continue
        }else {
          var obj = cljs.core.first.call(null, seq__6765__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__6777 = cljs.core.next.call(null, seq__6765__$1);
          var G__6778 = null;
          var G__6779 = 0;
          var G__6780 = 0;
          seq__6765 = G__6777;
          chunk__6766 = G__6778;
          count__6767 = G__6779;
          i__6768 = G__6780;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return""
  }else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("")
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return"\n"
  }else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("")
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts))
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core.get.call(null, opts, "\ufdd0:flush-on-newline"))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__6781) {
    var objs = cljs.core.seq(arglist__6781);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__6782) {
    var objs = cljs.core.seq(arglist__6782);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__6783) {
    var objs = cljs.core.seq(arglist__6783);
    return pr__delegate(objs)
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__6784) {
    var objs = cljs.core.seq(arglist__6784);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__6785) {
    var objs = cljs.core.seq(arglist__6785);
    return print_str__delegate(objs)
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__6786) {
    var objs = cljs.core.seq(arglist__6786);
    return println__delegate(objs)
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0:readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__6787) {
    var objs = cljs.core.seq(arglist__6787);
    return println_str__delegate(objs)
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__6788) {
    var objs = cljs.core.seq(arglist__6788);
    return prn__delegate(objs)
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__6789) {
    var fmt = cljs.core.first(arglist__6789);
    var args = cljs.core.rest(arglist__6789);
    return printf__delegate(fmt, args)
  };
  printf.cljs$core$IFn$_invoke$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core._write.call(null, writer, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
goog.provide("cljs.core.Atom");
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var seq__6790 = cljs.core.seq.call(null, self__.watches);
  var chunk__6791 = null;
  var count__6792 = 0;
  var i__6793 = 0;
  while(true) {
    if(i__6793 < count__6792) {
      var vec__6794 = cljs.core._nth.call(null, chunk__6791, i__6793);
      var key = cljs.core.nth.call(null, vec__6794, 0, null);
      var f = cljs.core.nth.call(null, vec__6794, 1, null);
      f.call(null, key, this$, oldval, newval);
      var G__6796 = seq__6790;
      var G__6797 = chunk__6791;
      var G__6798 = count__6792;
      var G__6799 = i__6793 + 1;
      seq__6790 = G__6796;
      chunk__6791 = G__6797;
      count__6792 = G__6798;
      i__6793 = G__6799;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__6790);
      if(temp__4092__auto__) {
        var seq__6790__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__6790__$1)) {
          var c__3073__auto__ = cljs.core.chunk_first.call(null, seq__6790__$1);
          var G__6800 = cljs.core.chunk_rest.call(null, seq__6790__$1);
          var G__6801 = c__3073__auto__;
          var G__6802 = cljs.core.count.call(null, c__3073__auto__);
          var G__6803 = 0;
          seq__6790 = G__6800;
          chunk__6791 = G__6801;
          count__6792 = G__6802;
          i__6793 = G__6803;
          continue
        }else {
          var vec__6795 = cljs.core.first.call(null, seq__6790__$1);
          var key = cljs.core.nth.call(null, vec__6795, 0, null);
          var f = cljs.core.nth.call(null, vec__6795, 1, null);
          f.call(null, key, this$, oldval, newval);
          var G__6804 = cljs.core.next.call(null, seq__6790__$1);
          var G__6805 = null;
          var G__6806 = 0;
          var G__6807 = 0;
          seq__6790 = G__6804;
          chunk__6791 = G__6805;
          count__6792 = G__6806;
          i__6793 = G__6807;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  return this$.watches = cljs.core.assoc.call(null, self__.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  return this$.watches = cljs.core.dissoc.call(null, self__.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  cljs.core._write.call(null, writer, "#<Atom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return self__.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return o === other
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__6811__delegate = function(x, p__6808) {
      var map__6810 = p__6808;
      var map__6810__$1 = cljs.core.seq_QMARK_.call(null, map__6810) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6810) : map__6810;
      var validator = cljs.core.get.call(null, map__6810__$1, "\ufdd0:validator");
      var meta = cljs.core.get.call(null, map__6810__$1, "\ufdd0:meta");
      return new cljs.core.Atom(x, meta, validator, null)
    };
    var G__6811 = function(x, var_args) {
      var p__6808 = null;
      if(arguments.length > 1) {
        p__6808 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__6811__delegate.call(this, x, p__6808)
    };
    G__6811.cljs$lang$maxFixedArity = 1;
    G__6811.cljs$lang$applyTo = function(arglist__6812) {
      var x = cljs.core.first(arglist__6812);
      var p__6808 = cljs.core.rest(arglist__6812);
      return G__6811__delegate(x, p__6808)
    };
    G__6811.cljs$core$IFn$_invoke$arity$variadic = G__6811__delegate;
    return G__6811
  }();
  atom = function(x, var_args) {
    var p__6808 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4092__auto___6813 = a.validator;
  if(cljs.core.truth_(temp__4092__auto___6813)) {
    var validate_6814 = temp__4092__auto___6813;
    if(cljs.core.truth_(validate_6814.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null)), cljs.core.hash_map("\ufdd0:line", 6673, "\ufdd0:column", 13))))].join(""));
    }
  }else {
  }
  var old_value_6815 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value_6815, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__6816__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__6816 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__6816__delegate.call(this, a, f, x, y, z, more)
    };
    G__6816.cljs$lang$maxFixedArity = 5;
    G__6816.cljs$lang$applyTo = function(arglist__6817) {
      var a = cljs.core.first(arglist__6817);
      arglist__6817 = cljs.core.next(arglist__6817);
      var f = cljs.core.first(arglist__6817);
      arglist__6817 = cljs.core.next(arglist__6817);
      var x = cljs.core.first(arglist__6817);
      arglist__6817 = cljs.core.next(arglist__6817);
      var y = cljs.core.first(arglist__6817);
      arglist__6817 = cljs.core.next(arglist__6817);
      var z = cljs.core.first(arglist__6817);
      var more = cljs.core.rest(arglist__6817);
      return G__6816__delegate(a, f, x, y, z, more)
    };
    G__6816.cljs$core$IFn$_invoke$arity$variadic = G__6816__delegate;
    return G__6816
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__6818) {
    var iref = cljs.core.first(arglist__6818);
    arglist__6818 = cljs.core.next(arglist__6818);
    var f = cljs.core.first(arglist__6818);
    var args = cljs.core.rest(arglist__6818);
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
goog.provide("cljs.core.Delay");
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  return(new cljs.core.Keyword("\ufdd0:done")).call(null, cljs.core.deref.call(null, self__.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return(new cljs.core.Keyword("\ufdd0:value")).call(null, cljs.core.swap_BANG_.call(null, self__.state, function(p__6819) {
    var map__6820 = p__6819;
    var map__6820__$1 = cljs.core.seq_QMARK_.call(null, map__6820) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6820) : map__6820;
    var curr_state = map__6820__$1;
    var done = cljs.core.get.call(null, map__6820__$1, "\ufdd0:done");
    if(cljs.core.truth_(done)) {
      return curr_state
    }else {
      return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:done", true, "\ufdd0:value", self__.f.call(null)], true)
    }
  }))
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x)
  }else {
    var x__2942__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._clj__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj->js", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x)
  }else {
    var x__2942__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._key__GT_js[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key->js", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if(function() {
    var G__6822 = k;
    if(G__6822) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__6822.cljs$core$IEncodeJS$
        }
      }())) {
        return true
      }else {
        if(!G__6822.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__6822)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__6822)
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k)
  }else {
    if(function() {
      var or__3943__auto__ = cljs.core.string_QMARK_.call(null, k);
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = typeof k === "number";
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          var or__3943__auto____$2 = cljs.core.keyword_QMARK_.call(null, k);
          if(or__3943__auto____$2) {
            return or__3943__auto____$2
          }else {
            return k instanceof cljs.core.Symbol
          }
        }
      }
    }()) {
      return cljs.core.clj__GT_js.call(null, k)
    }else {
      return cljs.core.pr_str.call(null, k)
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if(x == null) {
    return null
  }else {
    if(function() {
      var G__6830 = x;
      if(G__6830) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__6830.cljs$core$IEncodeJS$
          }
        }())) {
          return true
        }else {
          if(!G__6830.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__6830)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__6830)
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.name.call(null, x)
      }else {
        if(x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("")
        }else {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m = {};
            var seq__6831_6837 = cljs.core.seq.call(null, x);
            var chunk__6832_6838 = null;
            var count__6833_6839 = 0;
            var i__6834_6840 = 0;
            while(true) {
              if(i__6834_6840 < count__6833_6839) {
                var vec__6835_6841 = cljs.core._nth.call(null, chunk__6832_6838, i__6834_6840);
                var k_6842 = cljs.core.nth.call(null, vec__6835_6841, 0, null);
                var v_6843 = cljs.core.nth.call(null, vec__6835_6841, 1, null);
                m[cljs.core.key__GT_js.call(null, k_6842)] = clj__GT_js.call(null, v_6843);
                var G__6844 = seq__6831_6837;
                var G__6845 = chunk__6832_6838;
                var G__6846 = count__6833_6839;
                var G__6847 = i__6834_6840 + 1;
                seq__6831_6837 = G__6844;
                chunk__6832_6838 = G__6845;
                count__6833_6839 = G__6846;
                i__6834_6840 = G__6847;
                continue
              }else {
                var temp__4092__auto___6848 = cljs.core.seq.call(null, seq__6831_6837);
                if(temp__4092__auto___6848) {
                  var seq__6831_6849__$1 = temp__4092__auto___6848;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__6831_6849__$1)) {
                    var c__3073__auto___6850 = cljs.core.chunk_first.call(null, seq__6831_6849__$1);
                    var G__6851 = cljs.core.chunk_rest.call(null, seq__6831_6849__$1);
                    var G__6852 = c__3073__auto___6850;
                    var G__6853 = cljs.core.count.call(null, c__3073__auto___6850);
                    var G__6854 = 0;
                    seq__6831_6837 = G__6851;
                    chunk__6832_6838 = G__6852;
                    count__6833_6839 = G__6853;
                    i__6834_6840 = G__6854;
                    continue
                  }else {
                    var vec__6836_6855 = cljs.core.first.call(null, seq__6831_6849__$1);
                    var k_6856 = cljs.core.nth.call(null, vec__6836_6855, 0, null);
                    var v_6857 = cljs.core.nth.call(null, vec__6836_6855, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_6856)] = clj__GT_js.call(null, v_6857);
                    var G__6858 = cljs.core.next.call(null, seq__6831_6849__$1);
                    var G__6859 = null;
                    var G__6860 = 0;
                    var G__6861 = 0;
                    seq__6831_6837 = G__6858;
                    chunk__6832_6838 = G__6859;
                    count__6833_6839 = G__6860;
                    i__6834_6840 = G__6861;
                    continue
                  }
                }else {
                }
              }
              break
            }
            return m
          }else {
            if(cljs.core.coll_QMARK_.call(null, x)) {
              return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
            }else {
              if("\ufdd0:else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options)
  }else {
    var x__2942__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._js__GT_clj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js->clj", x);
        }
      }
    }().call(null, x, options)
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:keywordize-keys", false], true))
  };
  var js__GT_clj__2 = function() {
    var G__6882__delegate = function(x, opts) {
      if(function() {
        var G__6872 = cljs.core.IEncodeClojure;
        if(G__6872) {
          if(cljs.core.truth_(function() {
            var or__3943__auto__ = null;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return G__6872.cljs$core$x$
            }
          }())) {
            return true
          }else {
            if(!G__6872.cljs$lang$protocol_mask$partition$) {
              return cljs.core.type_satisfies_.call(null, x, G__6872)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, x, G__6872)
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts))
      }else {
        if(cljs.core.seq.call(null, opts)) {
          var map__6873 = opts;
          var map__6873__$1 = cljs.core.seq_QMARK_.call(null, map__6873) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6873) : map__6873;
          var keywordize_keys = cljs.core.get.call(null, map__6873__$1, "\ufdd0:keywordize-keys");
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__6873, map__6873__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if(cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1))
              }else {
                if(cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1))
                }else {
                  if(x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1))
                  }else {
                    if(cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                        var iter__3042__auto__ = function(map__6873, map__6873__$1, keywordize_keys, keyfn) {
                          return function iter__6878(s__6879) {
                            return new cljs.core.LazySeq(null, false, function(map__6873, map__6873__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__6879__$1 = s__6879;
                                while(true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__6879__$1);
                                  if(temp__4092__auto__) {
                                    var s__6879__$2 = temp__4092__auto__;
                                    if(cljs.core.chunked_seq_QMARK_.call(null, s__6879__$2)) {
                                      var c__3040__auto__ = cljs.core.chunk_first.call(null, s__6879__$2);
                                      var size__3041__auto__ = cljs.core.count.call(null, c__3040__auto__);
                                      var b__6881 = cljs.core.chunk_buffer.call(null, size__3041__auto__);
                                      if(function() {
                                        var i__6880 = 0;
                                        while(true) {
                                          if(i__6880 < size__3041__auto__) {
                                            var k = cljs.core._nth.call(null, c__3040__auto__, i__6880);
                                            cljs.core.chunk_append.call(null, b__6881, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true));
                                            var G__6883 = i__6880 + 1;
                                            i__6880 = G__6883;
                                            continue
                                          }else {
                                            return true
                                          }
                                          break
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6881), iter__6878.call(null, cljs.core.chunk_rest.call(null, s__6879__$2)))
                                      }else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6881), null)
                                      }
                                    }else {
                                      var k = cljs.core.first.call(null, s__6879__$2);
                                      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true), iter__6878.call(null, cljs.core.rest.call(null, s__6879__$2)))
                                    }
                                  }else {
                                    return null
                                  }
                                  break
                                }
                              }
                            }(map__6873, map__6873__$1, keywordize_keys, keyfn), null)
                          }
                        }(map__6873, map__6873__$1, keywordize_keys, keyfn);
                        return iter__3042__auto__.call(null, cljs.core.js_keys.call(null, x__$1))
                      }())
                    }else {
                      if("\ufdd0:else") {
                        return x__$1
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }(map__6873, map__6873__$1, keywordize_keys, keyfn);
          return f.call(null, x)
        }else {
          return null
        }
      }
    };
    var G__6882 = function(x, var_args) {
      var opts = null;
      if(arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__6882__delegate.call(this, x, opts)
    };
    G__6882.cljs$lang$maxFixedArity = 1;
    G__6882.cljs$lang$applyTo = function(arglist__6884) {
      var x = cljs.core.first(arglist__6884);
      var opts = cljs.core.rest(arglist__6884);
      return G__6882__delegate(x, opts)
    };
    G__6882.cljs$core$IFn$_invoke$arity$variadic = G__6882__delegate;
    return G__6882
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__6885__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v
      }else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret
      }
    };
    var G__6885 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__6885__delegate.call(this, args)
    };
    G__6885.cljs$lang$maxFixedArity = 0;
    G__6885.cljs$lang$applyTo = function(arglist__6886) {
      var args = cljs.core.seq(arglist__6886);
      return G__6885__delegate(args)
    };
    G__6885.cljs$core$IFn$_invoke$arity$variadic = G__6885__delegate;
    return G__6885
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret)) {
        var G__6887 = ret;
        f = G__6887;
        continue
      }else {
        return ret
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__6888__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__6888 = function(f, var_args) {
      var args = null;
      if(arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__6888__delegate.call(this, f, args)
    };
    G__6888.cljs$lang$maxFixedArity = 1;
    G__6888.cljs$lang$applyTo = function(arglist__6889) {
      var f = cljs.core.first(arglist__6889);
      var args = cljs.core.rest(arglist__6889);
      return G__6888__delegate(f, args)
    };
    G__6888.cljs$core$IFn$_invoke$arity$variadic = G__6888__delegate;
    return G__6888
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:parents", cljs.core.ObjMap.EMPTY, "\ufdd0:descendants", cljs.core.ObjMap.EMPTY, "\ufdd0:ancestors", cljs.core.ObjMap.EMPTY], true)
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if(cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null))
  }else {
  }
  return cljs.core._global_hierarchy
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args)
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args)
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__6890) {
    var f = cljs.core.first(arglist__6890);
    var args = cljs.core.rest(arglist__6890);
    return swap_global_hierarchy_BANG___delegate(f, args)
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3943__auto__ = cljs.core._EQ_.call(null, child, parent);
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var or__3943__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h).call(null, child), parent);
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        var and__3941__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3941__auto__) {
          var and__3941__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3941__auto____$1) {
            var and__3941__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3941__auto____$2) {
              var ret = true;
              var i = 0;
              while(true) {
                if(function() {
                  var or__3943__auto____$2 = cljs.core.not.call(null, ret);
                  if(or__3943__auto____$2) {
                    return or__3943__auto____$2
                  }else {
                    return i === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret
                }else {
                  var G__6891 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__6892 = i + 1;
                  ret = G__6891;
                  i = G__6892;
                  continue
                }
                break
              }
            }else {
              return and__3941__auto____$2
            }
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword("\ufdd0:parents")).call(null, h), tag))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h), tag))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword("\ufdd0:descendants")).call(null, h), tag))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null)), cljs.core.hash_map("\ufdd0:line", 7014, "\ufdd0:column", 12))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list(new cljs.core.Symbol(null, "not=", "not=", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null)), cljs.core.hash_map("\ufdd0:line", 7018, "\ufdd0:column", 12))))].join(""));
    }
    var tp = (new cljs.core.Keyword("\ufdd0:parents")).call(null, h);
    var td = (new cljs.core.Keyword("\ufdd0:descendants")).call(null, h);
    var ta = (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
          }
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)))
      }
    }(tp, td, ta);
    var or__3943__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:parents", cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0:parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0:ancestors", tf.call(null, (new cljs.core.Keyword("\ufdd0:ancestors")).call(null, h), tag, td, parent, ta), "\ufdd0:descendants", tf.call(null, (new cljs.core.Keyword("\ufdd0:descendants")).call(null, h), parent, ta, tag, td)], 
      true)
    }();
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword("\ufdd0:parents")).call(null, h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__6893_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__6893_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__6893_SHARP_), cljs.core.second.call(null, p1__6893_SHARP_)))
      }
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if(cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__6894_SHARP_, p2__6895_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__6894_SHARP_, p2__6895_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3943__auto__ = cljs.core.truth_(function() {
    var and__3941__auto__ = xprefs;
    if(cljs.core.truth_(and__3941__auto__)) {
      return xprefs.call(null, y)
    }else {
      return and__3941__auto__
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var or__3943__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          }else {
          }
          var G__6896 = cljs.core.rest.call(null, ps);
          ps = G__6896;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3943__auto____$1)) {
      return or__3943__auto____$1
    }else {
      var or__3943__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            }else {
            }
            var G__6897 = cljs.core.rest.call(null, ps);
            ps = G__6897;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3943__auto____$2)) {
        return or__3943__auto____$2
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3943__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__6900) {
    var vec__6901 = p__6900;
    var k = cljs.core.nth.call(null, vec__6901, 0, null);
    var _ = cljs.core.nth.call(null, vec__6901, 1, null);
    var e = vec__6901;
    if(cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3943__auto__ = be == null;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2942__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._reset[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._reset["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2942__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._add_method[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2942__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._remove_method[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2942__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefer_method[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefer_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2942__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._get_method[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._get_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2942__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._methods[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._methods["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2942__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefers[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefers["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2942__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._dispatch[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dispatch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if(cljs.core.truth_(target_fn)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args)
};
goog.provide("cljs.core.MultiFn");
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn
  }else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if(cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn
    }else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  return cljs.core.do_dispatch.call(null, mf, self__.dispatch_fn, args)
};
cljs.core.MultiFn.prototype.call = function() {
  var G__6902__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args)
  };
  var G__6902 = function(_, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__6902__delegate.call(this, _, args)
  };
  G__6902.cljs$lang$maxFixedArity = 1;
  G__6902.cljs$lang$applyTo = function(arglist__6903) {
    var _ = cljs.core.first(arglist__6903);
    var args = cljs.core.rest(arglist__6903);
    return G__6902__delegate(_, args)
  };
  G__6902.cljs$core$IFn$_invoke$arity$variadic = G__6902__delegate;
  return G__6902
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
goog.provide("cljs.core.UUID");
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var and__3941__auto__ = other instanceof cljs.core.UUID;
  if(and__3941__auto__) {
    return self__.uuid === other.uuid
  }else {
    return and__3941__auto__
  }
};
goog.provide("cljs.core.ExceptionInfo");
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__2885__auto__, writer__2886__auto__, opts__2887__auto__) {
  return cljs.core._write.call(null, writer__2886__auto__, "cljs.core/ExceptionInfo")
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null)
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause)
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info
}();
cljs.core.ex_data = function ex_data(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.data
  }else {
    return null
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if(ex instanceof Error) {
    return ex.message
  }else {
    return null
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause
  }else {
    return null
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if(cljs.core.truth_(pred.call(null, x, y))) {
      return-1
    }else {
      if(cljs.core.truth_(pred.call(null, y, x))) {
        return 1
      }else {
        if("\ufdd0:else") {
          return 0
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.set([new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), new cljs.core.Symbol(null, "new", "new", -1640422567, null), new cljs.core.Symbol(null, "try*", "try*", -1636962424, null), new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), new cljs.core.Symbol(null, "&", "&", -1640531489, null), new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), new cljs.core.Symbol(null, "recur", "recur", -1532142362, null), 
  new cljs.core.Symbol(null, ".", ".", -1640531481, null), new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), new cljs.core.Symbol(null, "do", "do", -1640528316, null), new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), new cljs.core.Symbol(null, "js*", "js*", -1640426054, null), new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), 
  new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), new cljs.core.Symbol(null, "if", "if", -1640528170, null), new cljs.core.Symbol(null, "def", "def", -1640432194, null)]), x)
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.ReadPort = {};
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if(function() {
    var and__3941__auto__ = port;
    if(and__3941__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler)
  }else {
    var x__2942__auto__ = port == null ? null : port;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler)
  }
};
cljs.core.async.impl.protocols.WritePort = {};
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if(function() {
    var and__3941__auto__ = port;
    if(and__3941__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler)
  }else {
    var x__2942__auto__ = port == null ? null : port;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler)
  }
};
cljs.core.async.impl.protocols.Channel = {};
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if(function() {
    var and__3941__auto__ = chan;
    if(and__3941__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan)
  }else {
    var x__2942__auto__ = chan == null ? null : chan;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan)
  }
};
cljs.core.async.impl.protocols.Handler = {};
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if(function() {
    var and__3941__auto__ = h;
    if(and__3941__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h)
  }else {
    var x__2942__auto__ = h == null ? null : h;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if(function() {
    var and__3941__auto__ = h;
    if(and__3941__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h)
  }else {
    var x__2942__auto__ = h == null ? null : h;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.Buffer = {};
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b)
  }else {
    var x__2942__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b)
  }else {
    var x__2942__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm)
  }else {
    var x__2942__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm)
  }
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 4;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o]
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx]
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX] === "\ufdd0:finished"
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if(void 0 === cljs.core.async.impl.ioc_helpers.t6985) {
    goog.provide("cljs.core.async.impl.ioc_helpers.t6985");
    cljs.core.async.impl.ioc_helpers.t6985 = function(f, fn_handler, meta6986) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta6986 = meta6986;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.impl.ioc_helpers.t6985.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t6985.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t6985";
    cljs.core.async.impl.ioc_helpers.t6985.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
      return cljs.core._write.call(null, writer__2883__auto__, "cljs.core.async.impl.ioc-helpers/t6985")
    };
    cljs.core.async.impl.ioc_helpers.t6985.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t6985.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return true
    };
    cljs.core.async.impl.ioc_helpers.t6985.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      return self__.f
    };
    cljs.core.async.impl.ioc_helpers.t6985.prototype.cljs$core$IMeta$_meta$arity$1 = function(_6987) {
      var self__ = this;
      return self__.meta6986
    };
    cljs.core.async.impl.ioc_helpers.t6985.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_6987, meta6986__$1) {
      var self__ = this;
      return new cljs.core.async.impl.ioc_helpers.t6985(self__.f, self__.fn_handler, meta6986__$1)
    }
  }else {
  }
  return new cljs.core.async.impl.ioc_helpers.t6985(f, fn_handler, null)
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state)
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_6990_6992 = state;
    statearr_6990_6992[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_6990_6992[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_6991_6993 = state;
    statearr_6991_6993[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_6991_6993[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return"\ufdd0:recur"
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_6996_6998 = state;
    statearr_6996_6998[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_6996_6998[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_6997_6999 = state;
    statearr_6997_6999[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_6997_6999[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return"\ufdd0:recur"
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__7000) {
    var map__7005 = p__7000;
    var map__7005__$1 = cljs.core.seq_QMARK_.call(null, map__7005) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7005) : map__7005;
    var opts = map__7005__$1;
    var statearr_7006_7009 = state;
    statearr_7006_7009[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(val) {
      var statearr_7007_7010 = state;
      statearr_7007_7010[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state)
    }, ports, opts);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_7008_7011 = state;
      statearr_7008_7011[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return"\ufdd0:recur"
    }else {
      return null
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__7000 = null;
    if(arguments.length > 3) {
      p__7000 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__7000)
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__7012) {
    var state = cljs.core.first(arglist__7012);
    arglist__7012 = cljs.core.next(arglist__7012);
    var cont_block = cljs.core.first(arglist__7012);
    arglist__7012 = cljs.core.next(arglist__7012);
    var ports = cljs.core.first(arglist__7012);
    var p__7000 = cljs.core.rest(arglist__7012);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__7000)
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if(value == null) {
  }else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
      return null
    }))
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.provide("cljs.core.async.impl.buffers.FixedBuffer");
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core.async.impl.buffers/FixedBuffer")
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return cljs.core._EQ_.call(null, self__.buf.length, self__.n)
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(cljs.core.not.call(null, this$.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(this$))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.with_meta(cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)), cljs.core.hash_map("\ufdd0:line", 19, "\ufdd0:column", 18))), cljs.core.hash_map("\ufdd0:line", 
    19, "\ufdd0:column", 13))))].join(""));
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(new Array(0), n)
};
goog.provide("cljs.core.async.impl.buffers.DroppingBuffer");
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core.async.impl.buffers/DroppingBuffer")
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return false
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(cljs.core._EQ_.call(null, self__.buf.length, self__.n)) {
    return null
  }else {
    return self__.buf.unshift(itm)
  }
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(new Array(0), n)
};
goog.provide("cljs.core.async.impl.buffers.SlidingBuffer");
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core.async.impl.buffers/SlidingBuffer")
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return false
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(cljs.core._EQ_.call(null, self__.buf.length, self__.n)) {
    this$.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(this$)
  }else {
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(new Array(0), n)
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = null;
if(typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.tasks = [];
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.tasks.shift().call(null)
  }
}else {
}
cljs.core.async.impl.dispatch.queue_task = function queue_task(f) {
  cljs.core.async.impl.dispatch.tasks.push(f);
  return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0)
};
cljs.core.async.impl.dispatch.run = function run(f) {
  if(typeof MessageChannel !== "undefined") {
    return cljs.core.async.impl.dispatch.queue_task.call(null, f)
  }else {
    if(typeof setImmediate !== "undefined") {
      return setImmediate(f)
    }else {
      if("\ufdd0:else") {
        return setTimeout(f, 0)
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay)
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if(void 0 === cljs.core.async.impl.channels.t6960) {
    goog.provide("cljs.core.async.impl.channels.t6960");
    cljs.core.async.impl.channels.t6960 = function(val, box, meta6961) {
      this.val = val;
      this.box = box;
      this.meta6961 = meta6961;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984
    };
    cljs.core.async.impl.channels.t6960.cljs$lang$type = true;
    cljs.core.async.impl.channels.t6960.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t6960";
    cljs.core.async.impl.channels.t6960.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
      return cljs.core._write.call(null, writer__2883__auto__, "cljs.core.async.impl.channels/t6960")
    };
    cljs.core.async.impl.channels.t6960.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      return self__.val
    };
    cljs.core.async.impl.channels.t6960.prototype.cljs$core$IMeta$_meta$arity$1 = function(_6962) {
      var self__ = this;
      return self__.meta6961
    };
    cljs.core.async.impl.channels.t6960.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_6962, meta6961__$1) {
      var self__ = this;
      return new cljs.core.async.impl.channels.t6960(self__.val, self__.box, meta6961__$1)
    }
  }else {
  }
  return new cljs.core.async.impl.channels.t6960(val, box, null)
};
cljs.core.async.impl.channels.MMC = {};
cljs.core.async.impl.channels.cleanup = function cleanup(_) {
  if(function() {
    var and__3941__auto__ = _;
    if(and__3941__auto__) {
      return _.cljs$core$async$impl$channels$MMC$cleanup$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return _.cljs$core$async$impl$channels$MMC$cleanup$arity$1(_)
  }else {
    var x__2942__auto__ = _ == null ? null : _;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.channels.cleanup[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.channels.cleanup["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "MMC.cleanup", _);
        }
      }
    }().call(null, _)
  }
};
goog.provide("cljs.core.async.impl.channels.ManyToManyChannel");
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, puts, buf, closed) {
  this.takes = takes;
  this.puts = puts;
  this.buf = buf;
  this.closed = closed
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core.async.impl.channels/ManyToManyChannel")
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  this$.cljs$core$async$impl$channels$MMC$cleanup$arity$1(this$);
  if(cljs.core.truth_(cljs.core.deref.call(null, self__.closed))) {
    return null
  }else {
    cljs.core.reset_BANG_.call(null, self__.closed, true);
    var n__3120__auto___6967 = self__.takes.length;
    var idx_6968 = 0;
    while(true) {
      if(idx_6968 < n__3120__auto___6967) {
        var taker_6969 = self__.takes[idx_6968];
        var take_cb_6970 = function() {
          var and__3941__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_6969);
          if(cljs.core.truth_(and__3941__auto__)) {
            return cljs.core.async.impl.protocols.commit.call(null, taker_6969)
          }else {
            return and__3941__auto__
          }
        }();
        if(cljs.core.truth_(take_cb_6970)) {
          cljs.core.async.impl.dispatch.run.call(null, function(idx_6968, taker_6969, take_cb_6970) {
            return function() {
              return take_cb_6970.call(null, null)
            }
          }(idx_6968, taker_6969, take_cb_6970))
        }else {
        }
        var G__6971 = idx_6968 + 1;
        idx_6968 = G__6971;
        continue
      }else {
      }
      break
    }
    return null
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  this$.cljs$core$async$impl$channels$MMC$cleanup$arity$1(this$);
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = self__.buf;
    if(cljs.core.truth_(and__3941__auto__)) {
      return cljs.core.count.call(null, self__.buf) > 0
    }else {
      return and__3941__auto__
    }
  }())) {
    var temp__4090__auto__ = function() {
      var and__3941__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
      if(cljs.core.truth_(and__3941__auto__)) {
        return cljs.core.async.impl.protocols.commit.call(null, handler)
      }else {
        return and__3941__auto__
      }
    }();
    if(cljs.core.truth_(temp__4090__auto__)) {
      var take_cb = temp__4090__auto__;
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf))
    }else {
      return null
    }
  }else {
    var vec__6963 = function() {
      var put_idx = 0;
      while(true) {
        if(put_idx < self__.puts.length) {
          var vec__6964 = self__.puts[put_idx];
          var putter = cljs.core.nth.call(null, vec__6964, 0, null);
          var val = cljs.core.nth.call(null, vec__6964, 1, null);
          var temp__4090__auto__ = cljs.core.truth_(function() {
            var and__3941__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, putter)
            }else {
              return and__3941__auto__
            }
          }()) ? cljs.core.PersistentVector.fromArray([cljs.core.async.impl.protocols.commit.call(null, handler), cljs.core.async.impl.protocols.commit.call(null, putter), val], true) : null;
          if(cljs.core.truth_(temp__4090__auto__)) {
            var ret = temp__4090__auto__;
            self__.puts.splice(put_idx, 1);
            return ret
          }else {
            var G__6972 = put_idx + 1;
            put_idx = G__6972;
            continue
          }
        }else {
          return null
        }
        break
      }
    }();
    var take_cb = cljs.core.nth.call(null, vec__6963, 0, null);
    var put_cb = cljs.core.nth.call(null, vec__6963, 1, null);
    var val = cljs.core.nth.call(null, vec__6963, 2, null);
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = put_cb;
      if(cljs.core.truth_(and__3941__auto__)) {
        return take_cb
      }else {
        return and__3941__auto__
      }
    }())) {
      cljs.core.async.impl.dispatch.run.call(null, put_cb);
      return cljs.core.async.impl.channels.box.call(null, val)
    }else {
      if(cljs.core.truth_(cljs.core.deref.call(null, self__.closed))) {
        var temp__4090__auto__ = function() {
          var and__3941__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
          if(cljs.core.truth_(and__3941__auto__)) {
            return cljs.core.async.impl.protocols.commit.call(null, handler)
          }else {
            return and__3941__auto__
          }
        }();
        if(cljs.core.truth_(temp__4090__auto__)) {
          var take_cb__$1 = temp__4090__auto__;
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          return null
        }
      }else {
        self__.takes.unshift(handler);
        return null
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  if(!(val == null)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.with_meta(cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)), cljs.core.hash_map("\ufdd0:line", 43, "\ufdd0:column", 18))), cljs.core.hash_map("\ufdd0:line", 
    43, "\ufdd0:column", 13))))].join(""));
  }
  this$.cljs$core$async$impl$channels$MMC$cleanup$arity$1(this$);
  if(cljs.core.truth_(cljs.core.deref.call(null, self__.closed))) {
    return cljs.core.async.impl.channels.box.call(null, null)
  }else {
    var vec__6965 = function() {
      var taker_idx = 0;
      while(true) {
        if(taker_idx < self__.takes.length) {
          var taker = self__.takes[taker_idx];
          if(cljs.core.truth_(function() {
            var and__3941__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, taker);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)
            }else {
              return and__3941__auto__
            }
          }())) {
            self__.takes.splice(taker_idx, 1);
            return cljs.core.PersistentVector.fromArray([cljs.core.async.impl.protocols.commit.call(null, handler), cljs.core.async.impl.protocols.commit.call(null, taker)], true)
          }else {
            var G__6973 = taker_idx + 1;
            taker_idx = G__6973;
            continue
          }
        }else {
          return null
        }
        break
      }
    }();
    var put_cb = cljs.core.nth.call(null, vec__6965, 0, null);
    var take_cb = cljs.core.nth.call(null, vec__6965, 1, null);
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = put_cb;
      if(cljs.core.truth_(and__3941__auto__)) {
        return take_cb
      }else {
        return and__3941__auto__
      }
    }())) {
      cljs.core.async.impl.dispatch.run.call(null, function() {
        return take_cb.call(null, val)
      });
      return cljs.core.async.impl.channels.box.call(null, null)
    }else {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = self__.buf;
        if(cljs.core.truth_(and__3941__auto__)) {
          return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))
        }else {
          return and__3941__auto__
        }
      }())) {
        var put_cb__$1 = function() {
          var and__3941__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
          if(cljs.core.truth_(and__3941__auto__)) {
            return cljs.core.async.impl.protocols.commit.call(null, handler)
          }else {
            return and__3941__auto__
          }
        }();
        if(cljs.core.truth_(put_cb__$1)) {
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          return null
        }
      }else {
        self__.puts.unshift(cljs.core.PersistentVector.fromArray([handler, val], true));
        return null
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$cleanup$arity$1 = function(_) {
  var self__ = this;
  var idx_6974 = 0;
  while(true) {
    if(idx_6974 < self__.puts.length) {
      var vec__6966_6975 = self__.puts[idx_6974];
      var itm_6976 = cljs.core.nth.call(null, vec__6966_6975, 0, null);
      var val_6977 = cljs.core.nth.call(null, vec__6966_6975, 1, null);
      if(cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, itm_6976))) {
        var G__6978 = idx_6974 + 1;
        idx_6974 = G__6978;
        continue
      }else {
        self__.puts.splice(idx_6974, 1);
        var G__6979 = idx_6974;
        idx_6974 = G__6979;
        continue
      }
    }else {
    }
    break
  }
  var idx = 0;
  while(true) {
    if(idx < self__.takes.length) {
      var itm = self__.takes[idx];
      if(cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, itm))) {
        var G__6980 = idx + 1;
        idx = G__6980;
        continue
      }else {
        self__.takes.splice(idx, 1);
        var G__6981 = idx;
        idx = G__6981;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(new Array(0), new Array(0), buf, cljs.core.atom.call(null, null))
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0)
  };
  var random_level__1 = function(level) {
    while(true) {
      if(function() {
        var and__3941__auto__ = Math.random() < cljs.core.async.impl.timers.P;
        if(and__3941__auto__) {
          return level < cljs.core.async.impl.timers.MAX_LEVEL
        }else {
          return and__3941__auto__
        }
      }()) {
        var G__6933 = level + 1;
        level = G__6933;
        continue
      }else {
        return level
      }
      break
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level
}();
goog.provide("cljs.core.async.impl.timers.SkipListNode");
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core.async.impl.timers/SkipListNode")
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level)
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_6934 = 0;
    while(true) {
      if(i_6934 < arr.length) {
        arr[i_6934] = null;
        var G__6935 = i_6934 + 1;
        i_6934 = G__6935;
        continue
      }else {
      }
      break
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr)
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null)
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while(true) {
      if(!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while(true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if(x_SINGLEQUOTE_.key < k) {
                var G__6936 = x_SINGLEQUOTE_;
                x__$1 = G__6936;
                continue
              }else {
                return x__$1
              }
            }else {
              return x__$1
            }
            break
          }
        }();
        if(update == null) {
        }else {
          update[level] = x__$1
        }
        var G__6937 = x__$1;
        var G__6938 = k;
        var G__6939 = level - 1;
        var G__6940 = update;
        x = G__6937;
        k = G__6938;
        level = G__6939;
        update = G__6940;
        continue
      }else {
        return x
      }
      break
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node
}();
goog.provide("cljs.core.async.impl.timers.SkipList");
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.core.async.impl.timers/SkipList")
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, false, function() {
      if(node == null) {
        return null
      }else {
        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([node.key, node.val], true), iter.call(null, node.forward[0]))
      }
    }, null)
  };
  return iter.call(null, self__.header.forward[0])
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(function() {
    var and__3941__auto__ = !(x__$1 == null);
    if(and__3941__auto__) {
      return x__$1.key === k
    }else {
      return and__3941__auto__
    }
  }()) {
    return x__$1.val = v
  }else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if(new_level > self__.level) {
      var i_6941 = self__.level + 1;
      while(true) {
        if(i_6941 <= new_level + 1) {
          update[i_6941] = self__.header;
          var G__6942 = i_6941 + 1;
          i_6941 = G__6942;
          continue
        }else {
        }
        break
      }
      self__.level = new_level
    }else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while(true) {
      if(i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2
      }else {
        return null
      }
      break
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(function() {
    var and__3941__auto__ = !(x__$1 == null);
    if(and__3941__auto__) {
      return x__$1.key === k
    }else {
      return and__3941__auto__
    }
  }()) {
    var i_6943 = 0;
    while(true) {
      if(i_6943 <= self__.level) {
        var links_6944 = update[i_6943].forward;
        if(links_6944[i_6943] === x__$1) {
          links_6944[i_6943] = x__$1.forward[i_6943];
          var G__6945 = i_6943 + 1;
          i_6943 = G__6945;
          continue
        }else {
          var G__6946 = i_6943 + 1;
          i_6943 = G__6946;
          continue
        }
      }else {
      }
      break
    }
    while(true) {
      if(function() {
        var and__3941__auto__ = self__.level > 0;
        if(and__3941__auto__) {
          return self__.header.forward[self__.level] == null
        }else {
          return and__3941__auto__
        }
      }()) {
        self__.level = self__.level - 1;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(x_SINGLEQUOTE_ == null) {
            return null
          }else {
            if(x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_
            }else {
              var G__6947 = x_SINGLEQUOTE_;
              x__$1 = G__6947;
              continue
            }
          }
          break
        }
      }();
      if(!(nx == null)) {
        var G__6948 = nx;
        var G__6949 = level__$1 - 1;
        x = G__6948;
        level__$1 = G__6949;
        continue
      }else {
        var G__6950 = x;
        var G__6951 = level__$1 - 1;
        x = G__6950;
        level__$1 = G__6951;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(!(x_SINGLEQUOTE_ == null)) {
            if(x_SINGLEQUOTE_.key > k) {
              return x__$1
            }else {
              var G__6952 = x_SINGLEQUOTE_;
              x__$1 = G__6952;
              continue
            }
          }else {
            if(level__$1 === 0) {
              return x__$1
            }else {
              return null
            }
          }
          break
        }
      }();
      if(cljs.core.truth_(nx)) {
        var G__6953 = nx;
        var G__6954 = level__$1 - 1;
        x = G__6953;
        level__$1 = G__6954;
        continue
      }else {
        var G__6955 = x;
        var G__6956 = level__$1 - 1;
        x = G__6955;
        level__$1 = G__6956;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0)
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3943__auto__ = cljs.core.truth_(function() {
    var and__3941__auto__ = me;
    if(cljs.core.truth_(and__3941__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS
    }else {
      return and__3941__auto__
    }
  }()) ? me.val : null;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel)
    }, msecs);
    return timeout_channel
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.fn_handler = function fn_handler(f) {
  if(void 0 === cljs.core.async.t6907) {
    goog.provide("cljs.core.async.t6907");
    cljs.core.async.t6907 = function(f, fn_handler, meta6908) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta6908 = meta6908;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t6907.cljs$lang$type = true;
    cljs.core.async.t6907.cljs$lang$ctorStr = "cljs.core.async/t6907";
    cljs.core.async.t6907.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
      return cljs.core._write.call(null, writer__2883__auto__, "cljs.core.async/t6907")
    };
    cljs.core.async.t6907.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t6907.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return true
    };
    cljs.core.async.t6907.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      return self__.f
    };
    cljs.core.async.t6907.prototype.cljs$core$IMeta$_meta$arity$1 = function(_6909) {
      var self__ = this;
      return self__.meta6908
    };
    cljs.core.async.t6907.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_6909, meta6908__$1) {
      var self__ = this;
      return new cljs.core.async.t6907(self__.f, self__.fn_handler, meta6908__$1)
    }
  }else {
  }
  return new cljs.core.async.t6907(f, fn_handler, null)
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n)
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n)
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n)
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null)
  };
  var chan__1 = function(buf_or_n) {
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n === "number" ? cljs.core.async.buffer.call(null, buf_or_n) : buf_or_n)
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs)
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("<! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true)
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if(cljs.core.truth_(ret)) {
      var val_6910 = cljs.core.deref.call(null, ret);
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_6910)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, function() {
          return fn1.call(null, val_6910)
        })
      }
    }else {
    }
    return null
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_
}();
cljs.core.async.nop = function nop() {
  return null
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(">! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop)
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true)
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = ret;
      if(cljs.core.truth_(and__3941__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop)
      }else {
        return and__3941__auto__
      }
    }())) {
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, fn0)
      }
    }else {
    }
    return null
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port)
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__3120__auto___6911 = n;
  var x_6912 = 0;
  while(true) {
    if(x_6912 < n__3120__auto___6911) {
      a[x_6912] = 0;
      var G__6913 = x_6912 + 1;
      x_6912 = G__6913;
      continue
    }else {
    }
    break
  }
  var i = 1;
  while(true) {
    if(cljs.core._EQ_.call(null, i, n)) {
      return a
    }else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__6914 = i + 1;
      i = G__6914;
      continue
    }
    break
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if(void 0 === cljs.core.async.t6918) {
    goog.provide("cljs.core.async.t6918");
    cljs.core.async.t6918 = function(flag, alt_flag, meta6919) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta6919 = meta6919;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t6918.cljs$lang$type = true;
    cljs.core.async.t6918.cljs$lang$ctorStr = "cljs.core.async/t6918";
    cljs.core.async.t6918.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
      return cljs.core._write.call(null, writer__2883__auto__, "cljs.core.async/t6918")
    };
    cljs.core.async.t6918.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t6918.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.deref.call(null, self__.flag)
    };
    cljs.core.async.t6918.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, self__.flag, null);
      return true
    };
    cljs.core.async.t6918.prototype.cljs$core$IMeta$_meta$arity$1 = function(_6920) {
      var self__ = this;
      return self__.meta6919
    };
    cljs.core.async.t6918.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_6920, meta6919__$1) {
      var self__ = this;
      return new cljs.core.async.t6918(self__.flag, self__.alt_flag, meta6919__$1)
    }
  }else {
  }
  return new cljs.core.async.t6918(flag, alt_flag, null)
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if(void 0 === cljs.core.async.t6925) {
    goog.provide("cljs.core.async.t6925");
    cljs.core.async.t6925 = function(cb, flag, alt_handler, meta6926) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta6926 = meta6926;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t6925.cljs$lang$type = true;
    cljs.core.async.t6925.cljs$lang$ctorStr = "cljs.core.async/t6925";
    cljs.core.async.t6925.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
      return cljs.core._write.call(null, writer__2883__auto__, "cljs.core.async/t6925")
    };
    cljs.core.async.t6925.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t6925.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag)
    };
    cljs.core.async.t6925.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb
    };
    cljs.core.async.t6925.prototype.cljs$core$IMeta$_meta$arity$1 = function(_6927) {
      var self__ = this;
      return self__.meta6926
    };
    cljs.core.async.t6925.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_6927, meta6926__$1) {
      var self__ = this;
      return new cljs.core.async.t6925(self__.cb, self__.flag, self__.alt_handler, meta6926__$1)
    }
  }else {
  }
  return new cljs.core.async.t6925(cb, flag, alt_handler, null)
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword("\ufdd0:priority")).call(null, opts);
  var ret = function() {
    var i = 0;
    while(true) {
      if(i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, cljs.core.PersistentVector.fromArray([null, wport], true))
            }
          }(i, val, idx, port, wport, flag, n, idxs, priority)))
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__6921_SHARP_) {
            return fret.call(null, cljs.core.PersistentVector.fromArray([p1__6921_SHARP_, port], true))
          }
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if(cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([cljs.core.deref.call(null, vbox), function() {
            var or__3943__auto__ = wport;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return port
            }
          }()], true))
        }else {
          var G__6928 = i + 1;
          i = G__6928;
          continue
        }
      }else {
        return null
      }
      break
    }
  }();
  var or__3943__auto__ = ret;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    if(cljs.core.contains_QMARK_.call(null, opts, "\ufdd0:default")) {
      var temp__4092__auto__ = function() {
        var and__3941__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if(cljs.core.truth_(and__3941__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag)
        }else {
          return and__3941__auto__
        }
      }();
      if(cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([(new cljs.core.Keyword("\ufdd0:default")).call(null, opts), "\ufdd0:default"], true))
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__6929) {
    var map__6931 = p__6929;
    var map__6931__$1 = cljs.core.seq_QMARK_.call(null, map__6931) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6931) : map__6931;
    var opts = map__6931__$1;
    if(null) {
      return null
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__6929 = null;
    if(arguments.length > 1) {
      p__6929 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return alts_BANG___delegate.call(this, ports, p__6929)
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__6932) {
    var ports = cljs.core.first(arglist__6932);
    var p__6929 = cljs.core.rest(arglist__6932);
    return alts_BANG___delegate(ports, p__6929)
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_
}();
goog.provide("lsc_web.data");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
lsc_web.data.do_load_json = function do_load_json(url, out, on_error, num_retries) {
  if(num_retries > 0) {
    return d3.json(url, function(error, json) {
      if(cljs.core.truth_(error)) {
        on_error.call(null, url, error);
        return do_load_json.call(null, url, out, on_error, num_retries - 1)
      }else {
        cljs.core.async.put_BANG_.call(null, out, json);
        return cljs.core.async.close_BANG_.call(null, out)
      }
    })
  }else {
    return null
  }
};
lsc_web.data.log_error = function log_error(url, error) {
  return console.log([cljs.core.str("Could not load "), cljs.core.str(url), cljs.core.str(": "), cljs.core.str(error)].join(""))
};
lsc_web.data.load_json = function() {
  var load_json__delegate = function(url, p__5484) {
    var map__5493 = p__5484;
    var map__5493__$1 = cljs.core.seq_QMARK_.call(null, map__5493) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5493) : map__5493;
    var num_retries = cljs.core.get.call(null, map__5493__$1, "\ufdd0:num-retries", 3);
    var on_error = cljs.core.get.call(null, map__5493__$1, "\ufdd0:on-error", lsc_web.data.log_error);
    var out = cljs.core.async.chan.call(null, 1);
    var c__4701__auto___5501 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__4702__auto__ = function() {
        var switch__4627__auto__ = function(state_5496) {
          var state_val_5497 = state_5496[1];
          if(state_val_5497 === 1) {
            var inst_5494 = lsc_web.data.do_load_json.call(null, url, out, on_error, num_retries);
            var state_5496__$1 = state_5496;
            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5496__$1, inst_5494)
          }else {
            return null
          }
        };
        return function(switch__4627__auto__) {
          return function() {
            var state_machine__4628__auto__ = null;
            var state_machine__4628__auto____0 = function() {
              var statearr_5499 = new Array(5);
              statearr_5499[0] = state_machine__4628__auto__;
              statearr_5499[1] = 1;
              return statearr_5499
            };
            var state_machine__4628__auto____1 = function(state_5496) {
              while(true) {
                var result__4629__auto__ = switch__4627__auto__.call(null, state_5496);
                if(result__4629__auto__ === "\ufdd0:recur") {
                  continue
                }else {
                  return result__4629__auto__
                }
                break
              }
            };
            state_machine__4628__auto__ = function(state_5496) {
              switch(arguments.length) {
                case 0:
                  return state_machine__4628__auto____0.call(this);
                case 1:
                  return state_machine__4628__auto____1.call(this, state_5496)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__4628__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4628__auto____0;
            state_machine__4628__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4628__auto____1;
            return state_machine__4628__auto__
          }()
        }(switch__4627__auto__)
      }();
      var state__4703__auto__ = function() {
        var statearr_5500 = f__4702__auto__.call(null);
        statearr_5500[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4701__auto___5501;
        return statearr_5500
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state__4703__auto__)
    });
    return out
  };
  var load_json = function(url, var_args) {
    var p__5484 = null;
    if(arguments.length > 1) {
      p__5484 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return load_json__delegate.call(this, url, p__5484)
  };
  load_json.cljs$lang$maxFixedArity = 1;
  load_json.cljs$lang$applyTo = function(arglist__5502) {
    var url = cljs.core.first(arglist__5502);
    var p__5484 = cljs.core.rest(arglist__5502);
    return load_json__delegate(url, p__5484)
  };
  load_json.cljs$core$IFn$_invoke$arity$variadic = load_json__delegate;
  return load_json
}();
lsc_web.data.do_load_json_v2 = function do_load_json_v2(url, out) {
  return d3.json(url, function(json) {
    cljs.core.async.put_BANG_.call(null, out, json);
    return cljs.core.async.close_BANG_.call(null, out)
  })
};
lsc_web.data.load_json_v2 = function load_json_v2(url) {
  var out = cljs.core.async.chan.call(null, 1);
  var c__4701__auto___5517 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4702__auto__ = function() {
      var switch__4627__auto__ = function(state_5512) {
        var state_val_5513 = state_5512[1];
        if(state_val_5513 === 1) {
          var inst_5510 = lsc_web.data.do_load_json_v2.call(null, url, out);
          var state_5512__$1 = state_5512;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5512__$1, inst_5510)
        }else {
          return null
        }
      };
      return function(switch__4627__auto__) {
        return function() {
          var state_machine__4628__auto__ = null;
          var state_machine__4628__auto____0 = function() {
            var statearr_5515 = new Array(5);
            statearr_5515[0] = state_machine__4628__auto__;
            statearr_5515[1] = 1;
            return statearr_5515
          };
          var state_machine__4628__auto____1 = function(state_5512) {
            while(true) {
              var result__4629__auto__ = switch__4627__auto__.call(null, state_5512);
              if(result__4629__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4629__auto__
              }
              break
            }
          };
          state_machine__4628__auto__ = function(state_5512) {
            switch(arguments.length) {
              case 0:
                return state_machine__4628__auto____0.call(this);
              case 1:
                return state_machine__4628__auto____1.call(this, state_5512)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4628__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4628__auto____0;
          state_machine__4628__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4628__auto____1;
          return state_machine__4628__auto__
        }()
      }(switch__4627__auto__)
    }();
    var state__4703__auto__ = function() {
      var statearr_5516 = f__4702__auto__.call(null);
      statearr_5516[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4701__auto___5517;
      return statearr_5516
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state__4703__auto__)
  });
  return out
};
lsc_web.data.unwrap_result = function() {
  var unwrap_result__delegate = function(data_chan, p__5518) {
    var map__5545 = p__5518;
    var map__5545__$1 = cljs.core.seq_QMARK_.call(null, map__5545) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5545) : map__5545;
    var on_error = cljs.core.get.call(null, map__5545__$1, "\ufdd0:on-error", lsc_web.data.log_error);
    var out = cljs.core.async.chan.call(null, 1);
    var c__4701__auto___5571 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__4702__auto__ = function() {
        var switch__4627__auto__ = function(state_5560) {
          var state_val_5561 = state_5560[1];
          if(state_val_5561 === 6) {
            var inst_5552 = state_5560[2];
            var state_5560__$1 = state_5560;
            var statearr_5562_5572 = state_5560__$1;
            statearr_5562_5572[2] = inst_5552;
            statearr_5562_5572[1] = 5;
            return"\ufdd0:recur"
          }else {
            if(state_val_5561 === 5) {
              var inst_5557 = state_5560[2];
              var inst_5558 = cljs.core.async.close_BANG_.call(null, out);
              var state_5560__$1 = function() {
                var statearr_5563 = state_5560;
                statearr_5563[5] = inst_5557;
                return statearr_5563
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5560__$1, inst_5558)
            }else {
              if(state_val_5561 === 4) {
                var inst_5547 = state_5560[6];
                var inst_5554 = inst_5547.error;
                var inst_5555 = on_error.call(null, inst_5554);
                var state_5560__$1 = state_5560;
                var statearr_5564_5573 = state_5560__$1;
                statearr_5564_5573[2] = inst_5555;
                statearr_5564_5573[1] = 5;
                return"\ufdd0:recur"
              }else {
                if(state_val_5561 === 3) {
                  var inst_5547 = state_5560[6];
                  var inst_5550 = inst_5547.data;
                  var state_5560__$1 = state_5560;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_5560__$1, 6, out, inst_5550)
                }else {
                  if(state_val_5561 === 2) {
                    var inst_5547 = state_5560[6];
                    var inst_5547__$1 = state_5560[2];
                    var inst_5548 = inst_5547__$1.success;
                    var state_5560__$1 = function() {
                      var statearr_5565 = state_5560;
                      statearr_5565[6] = inst_5547__$1;
                      return statearr_5565
                    }();
                    if(cljs.core.truth_(inst_5548)) {
                      var statearr_5566_5574 = state_5560__$1;
                      statearr_5566_5574[1] = 3
                    }else {
                      var statearr_5567_5575 = state_5560__$1;
                      statearr_5567_5575[1] = 4
                    }
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_5561 === 1) {
                      var state_5560__$1 = state_5560;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5560__$1, 2, data_chan)
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__4627__auto__) {
          return function() {
            var state_machine__4628__auto__ = null;
            var state_machine__4628__auto____0 = function() {
              var statearr_5569 = new Array(7);
              statearr_5569[0] = state_machine__4628__auto__;
              statearr_5569[1] = 1;
              return statearr_5569
            };
            var state_machine__4628__auto____1 = function(state_5560) {
              while(true) {
                var result__4629__auto__ = switch__4627__auto__.call(null, state_5560);
                if(result__4629__auto__ === "\ufdd0:recur") {
                  continue
                }else {
                  return result__4629__auto__
                }
                break
              }
            };
            state_machine__4628__auto__ = function(state_5560) {
              switch(arguments.length) {
                case 0:
                  return state_machine__4628__auto____0.call(this);
                case 1:
                  return state_machine__4628__auto____1.call(this, state_5560)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__4628__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4628__auto____0;
            state_machine__4628__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4628__auto____1;
            return state_machine__4628__auto__
          }()
        }(switch__4627__auto__)
      }();
      var state__4703__auto__ = function() {
        var statearr_5570 = f__4702__auto__.call(null);
        statearr_5570[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4701__auto___5571;
        return statearr_5570
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state__4703__auto__)
    });
    return out
  };
  var unwrap_result = function(data_chan, var_args) {
    var p__5518 = null;
    if(arguments.length > 1) {
      p__5518 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return unwrap_result__delegate.call(this, data_chan, p__5518)
  };
  unwrap_result.cljs$lang$maxFixedArity = 1;
  unwrap_result.cljs$lang$applyTo = function(arglist__5576) {
    var data_chan = cljs.core.first(arglist__5576);
    var p__5518 = cljs.core.rest(arglist__5576);
    return unwrap_result__delegate(data_chan, p__5518)
  };
  unwrap_result.cljs$core$IFn$_invoke$arity$variadic = unwrap_result__delegate;
  return unwrap_result
}();
goog.provide("lsc_web.utils");
goog.require("cljs.core");
lsc_web.utils.leaps = cljs.core.PersistentHashSet.fromArray([46828800, null, 78364801, null, 109900802, null, 173059203, null, 252028804, null, 315187205, null, 346723206, null, 393984007, null, 425520008, null, 457056009, null, 504489610, null, 551750411, null, 599184012, null, 820108813, null, 914803214, null, 1025136015, null], true);
lsc_web.utils.count_leaps = function count_leaps(gps_time) {
  return cljs.core.count.call(null, cljs.core.filter.call(null, function(p1__5761_SHARP_) {
    return gps_time >= p1__5761_SHARP_
  }, lsc_web.utils.leaps))
};
lsc_web.utils.gps__GT_unix = function gps__GT_unix(gps_time) {
  return gps_time + 315964800 + lsc_web.utils.count_leaps.call(null, gps_time) + (cljs.core.truth_(lsc_web.utils.leaps.call(null, gps_time)) ? 0.5 : 0)
};
lsc_web.utils.unix__GT_date = function unix__GT_date(unix) {
  return new Date(unix * 1E3)
};
lsc_web.utils.floor = function floor(x) {
  return Math.floor(x)
};
lsc_web.utils.to_map = function to_map(f, coll) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
    var iter__3042__auto__ = function iter__5766(s__5767) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__5767__$1 = s__5767;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__5767__$1);
          if(temp__4092__auto__) {
            var s__5767__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__5767__$2)) {
              var c__3040__auto__ = cljs.core.chunk_first.call(null, s__5767__$2);
              var size__3041__auto__ = cljs.core.count.call(null, c__3040__auto__);
              var b__5769 = cljs.core.chunk_buffer.call(null, size__3041__auto__);
              if(function() {
                var i__5768 = 0;
                while(true) {
                  if(i__5768 < size__3041__auto__) {
                    var x = cljs.core._nth.call(null, c__3040__auto__, i__5768);
                    cljs.core.chunk_append.call(null, b__5769, cljs.core.PersistentVector.fromArray([x, f.call(null, x)], true));
                    var G__5770 = i__5768 + 1;
                    i__5768 = G__5770;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5769), iter__5766.call(null, cljs.core.chunk_rest.call(null, s__5767__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5769), null)
              }
            }else {
              var x = cljs.core.first.call(null, s__5767__$2);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([x, f.call(null, x)], true), iter__5766.call(null, cljs.core.rest.call(null, s__5767__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3042__auto__.call(null, coll)
  }())
};
lsc_web.utils.options__GT_map = function options__GT_map(options) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, options))))
};
lsc_web.utils.pad_with = function pad_with(length, value, col) {
  return cljs.core.first.call(null, cljs.core.partition.call(null, length, length, cljs.core.repeat.call(null, value), col))
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0:else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1)
        }else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if(cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__7013 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__7014 = limit__$1 - 1;
            var G__7015 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__7013;
            limit__$1 = G__7014;
            parts = G__7015;
            continue
          }else {
            return cljs.core.conj.call(null, parts, s__$1)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while(true) {
    if(index === 0) {
      return""
    }else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if(function() {
        var or__3943__auto__ = cljs.core._EQ_.call(null, ch, "\n");
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core._EQ_.call(null, ch, "\r")
        }
      }()) {
        var G__7016 = index - 1;
        index = G__7016;
        continue
      }else {
        return s.substring(0, index)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s)
};
clojure.string.escape = function escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString()
    }else {
      var ch = s.charAt(index);
      var temp__4090__auto___7017 = cljs.core.get.call(null, cmap, ch);
      if(cljs.core.truth_(temp__4090__auto___7017)) {
        var replacement_7018 = temp__4090__auto___7017;
        buffer.append([cljs.core.str(replacement_7018)].join(""))
      }else {
        buffer.append(ch)
      }
      var G__7019 = index + 1;
      index = G__7019;
      continue
    }
    break
  }
};
goog.provide("lsc_web.plots");
goog.require("cljs.core");
goog.require("clojure.string");
lsc_web.plots.d3 = d3;
lsc_web.plots.describe_BANG_ = function describe_BANG_(obj, properties) {
  var seq__5581_5585 = cljs.core.seq.call(null, cljs.core.keys.call(null, properties));
  var chunk__5582_5586 = null;
  var count__5583_5587 = 0;
  var i__5584_5588 = 0;
  while(true) {
    if(i__5584_5588 < count__5583_5587) {
      var prop_name_5589 = cljs.core._nth.call(null, chunk__5582_5586, i__5584_5588);
      obj.attr(cljs.core.name.call(null, prop_name_5589), prop_name_5589.call(null, properties));
      var G__5590 = seq__5581_5585;
      var G__5591 = chunk__5582_5586;
      var G__5592 = count__5583_5587;
      var G__5593 = i__5584_5588 + 1;
      seq__5581_5585 = G__5590;
      chunk__5582_5586 = G__5591;
      count__5583_5587 = G__5592;
      i__5584_5588 = G__5593;
      continue
    }else {
      var temp__4092__auto___5594 = cljs.core.seq.call(null, seq__5581_5585);
      if(temp__4092__auto___5594) {
        var seq__5581_5595__$1 = temp__4092__auto___5594;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__5581_5595__$1)) {
          var c__3073__auto___5596 = cljs.core.chunk_first.call(null, seq__5581_5595__$1);
          var G__5597 = cljs.core.chunk_rest.call(null, seq__5581_5595__$1);
          var G__5598 = c__3073__auto___5596;
          var G__5599 = cljs.core.count.call(null, c__3073__auto___5596);
          var G__5600 = 0;
          seq__5581_5585 = G__5597;
          chunk__5582_5586 = G__5598;
          count__5583_5587 = G__5599;
          i__5584_5588 = G__5600;
          continue
        }else {
          var prop_name_5601 = cljs.core.first.call(null, seq__5581_5595__$1);
          obj.attr(cljs.core.name.call(null, prop_name_5601), prop_name_5601.call(null, properties));
          var G__5602 = cljs.core.next.call(null, seq__5581_5595__$1);
          var G__5603 = null;
          var G__5604 = 0;
          var G__5605 = 0;
          seq__5581_5585 = G__5602;
          chunk__5582_5586 = G__5603;
          count__5583_5587 = G__5604;
          i__5584_5588 = G__5605;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
lsc_web.plots.style_BANG_ = function style_BANG_(obj, properties) {
  var seq__5610_5614 = cljs.core.seq.call(null, cljs.core.keys.call(null, properties));
  var chunk__5611_5615 = null;
  var count__5612_5616 = 0;
  var i__5613_5617 = 0;
  while(true) {
    if(i__5613_5617 < count__5612_5616) {
      var prop_name_5618 = cljs.core._nth.call(null, chunk__5611_5615, i__5613_5617);
      obj.style(cljs.core.name.call(null, prop_name_5618), prop_name_5618.call(null, properties));
      var G__5619 = seq__5610_5614;
      var G__5620 = chunk__5611_5615;
      var G__5621 = count__5612_5616;
      var G__5622 = i__5613_5617 + 1;
      seq__5610_5614 = G__5619;
      chunk__5611_5615 = G__5620;
      count__5612_5616 = G__5621;
      i__5613_5617 = G__5622;
      continue
    }else {
      var temp__4092__auto___5623 = cljs.core.seq.call(null, seq__5610_5614);
      if(temp__4092__auto___5623) {
        var seq__5610_5624__$1 = temp__4092__auto___5623;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__5610_5624__$1)) {
          var c__3073__auto___5625 = cljs.core.chunk_first.call(null, seq__5610_5624__$1);
          var G__5626 = cljs.core.chunk_rest.call(null, seq__5610_5624__$1);
          var G__5627 = c__3073__auto___5625;
          var G__5628 = cljs.core.count.call(null, c__3073__auto___5625);
          var G__5629 = 0;
          seq__5610_5614 = G__5626;
          chunk__5611_5615 = G__5627;
          count__5612_5616 = G__5628;
          i__5613_5617 = G__5629;
          continue
        }else {
          var prop_name_5630 = cljs.core.first.call(null, seq__5610_5624__$1);
          obj.style(cljs.core.name.call(null, prop_name_5630), prop_name_5630.call(null, properties));
          var G__5631 = cljs.core.next.call(null, seq__5610_5624__$1);
          var G__5632 = null;
          var G__5633 = 0;
          var G__5634 = 0;
          seq__5610_5614 = G__5631;
          chunk__5611_5615 = G__5632;
          count__5612_5616 = G__5633;
          i__5613_5617 = G__5634;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
lsc_web.plots.select = function select(selection) {
  return lsc_web.plots.d3.select(cljs.core.name.call(null, selection))
};
lsc_web.plots.translate_BANG_ = function translate_BANG_(selection, x, y) {
  return lsc_web.plots.describe_BANG_.call(null, selection, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:transform", [cljs.core.str("translate("), cljs.core.str(x), cljs.core.str(","), cljs.core.str(y), cljs.core.str(")")].join("")], true))
};
lsc_web.plots.half = function half(x) {
  return x / 2
};
lsc_web.plots.get_size = function get_size(selection) {
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", selection.attr("width") | 0, "\ufdd0:y", selection.attr("height") | 0], true)
};
lsc_web.plots.extent = function extent(xs) {
  return lsc_web.plots.d3.extent(cljs.core.to_array.call(null, xs))
};
lsc_web.plots.scale = function() {
  var scale__delegate = function(domain, p__5635) {
    var map__5637 = p__5635;
    var map__5637__$1 = cljs.core.seq_QMARK_.call(null, map__5637) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5637) : map__5637;
    var clamp = cljs.core.get.call(null, map__5637__$1, "\ufdd0:clamp", false);
    var range = cljs.core.get.call(null, map__5637__$1, "\ufdd0:range", null);
    var type = cljs.core.get.call(null, map__5637__$1, "\ufdd0:type", "\ufdd0:linear");
    var scale__$1 = cljs.core._EQ_.call(null, cljs.core.name.call(null, type), "time") ? lsc_web.plots.d3.time.scale() : lsc_web.plots.d3.scale[cljs.core.name.call(null, type)].call(null);
    if(cljs.core.truth_(domain)) {
      scale__$1.domain(cljs.core.to_array.call(null, domain))
    }else {
    }
    if(cljs.core.truth_(range)) {
      scale__$1.range(cljs.core.to_array.call(null, range))
    }else {
    }
    if(cljs.core.truth_(clamp)) {
      scale__$1.clamp(clamp)
    }else {
    }
    return scale__$1
  };
  var scale = function(domain, var_args) {
    var p__5635 = null;
    if(arguments.length > 1) {
      p__5635 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return scale__delegate.call(this, domain, p__5635)
  };
  scale.cljs$lang$maxFixedArity = 1;
  scale.cljs$lang$applyTo = function(arglist__5638) {
    var domain = cljs.core.first(arglist__5638);
    var p__5635 = cljs.core.rest(arglist__5638);
    return scale__delegate(domain, p__5635)
  };
  scale.cljs$core$IFn$_invoke$arity$variadic = scale__delegate;
  return scale
}();
lsc_web.plots.PrepareCanvas = {};
lsc_web.plots.prepare_BANG_ = function prepare_BANG_(this$, container) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$plots$PrepareCanvas$prepare_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$plots$PrepareCanvas$prepare_BANG_$arity$2(this$, container)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.plots.prepare_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.plots.prepare_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PrepareCanvas.prepare!", this$);
        }
      }
    }().call(null, this$, container)
  }
};
lsc_web.plots.prepare_all_BANG_ = function prepare_all_BANG_(container, preparers) {
  return cljs.core.reduce.call(null, function(p1__5640_SHARP_, p2__5639_SHARP_) {
    return lsc_web.plots.prepare_BANG_.call(null, p2__5639_SHARP_, p1__5640_SHARP_)
  }, container, preparers)
};
lsc_web.plots.UpdateCanvas = {};
lsc_web.plots.update_BANG_ = function update_BANG_(this$, canvas) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$plots$UpdateCanvas$update_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$plots$UpdateCanvas$update_BANG_$arity$2(this$, canvas)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.plots.update_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.plots.update_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "UpdateCanvas.update!", this$);
        }
      }
    }().call(null, this$, canvas)
  }
};
lsc_web.plots.Draw = {};
lsc_web.plots.draw_BANG_ = function draw_BANG_(this$, canvas, data) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$plots$Draw$draw_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$plots$Draw$draw_BANG_$arity$3(this$, canvas, data)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.plots.draw_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.plots.draw_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Draw.draw!", this$);
        }
      }
    }().call(null, this$, canvas, data)
  }
};
goog.provide("lsc_web.plots.LabeledCanvas");
lsc_web.plots.LabeledCanvas = function(title, x_label, y_label, __meta, __extmap) {
  this.title = title;
  this.x_label = x_label;
  this.y_label = y_label;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
lsc_web.plots.LabeledCanvas.prototype.lsc_web$plots$UpdateCanvas$ = true;
lsc_web.plots.LabeledCanvas.prototype.lsc_web$plots$UpdateCanvas$update_BANG_$arity$2 = function(this$, canvas) {
  var self__ = this;
  var title__$1 = canvas.select("text.title.label");
  var x_label__$1 = canvas.select("text.x.label");
  var y_label__$1 = canvas.select("text.y.label");
  title__$1.text((new cljs.core.Keyword("\ufdd0:title")).call(null, this$));
  x_label__$1.text((new cljs.core.Keyword("\ufdd0:x-label")).call(null, this$));
  y_label__$1.text((new cljs.core.Keyword("\ufdd0:y-label")).call(null, this$));
  return canvas
};
lsc_web.plots.LabeledCanvas.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2895__auto__) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_imap.call(null, this__2895__auto__);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
lsc_web.plots.LabeledCanvas.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2900__auto__, k__2901__auto__) {
  var self__ = this;
  return this__2900__auto__.cljs$core$ILookup$_lookup$arity$3(this__2900__auto__, k__2901__auto__, null)
};
lsc_web.plots.LabeledCanvas.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2902__auto__, k5642, else__2903__auto__) {
  var self__ = this;
  if(k5642 === "\ufdd0:title") {
    return self__.title
  }else {
    if(k5642 === "\ufdd0:x-label") {
      return self__.x_label
    }else {
      if(k5642 === "\ufdd0:y-label") {
        return self__.y_label
      }else {
        if("\ufdd0:else") {
          return cljs.core.get.call(null, self__.__extmap, k5642, else__2903__auto__)
        }else {
          return null
        }
      }
    }
  }
};
lsc_web.plots.LabeledCanvas.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2907__auto__, k__2908__auto__, G__5641) {
  var self__ = this;
  var pred__5644 = cljs.core.identical_QMARK_;
  var expr__5645 = k__2908__auto__;
  if(pred__5644.call(null, "\ufdd0:title", expr__5645)) {
    return new lsc_web.plots.LabeledCanvas(G__5641, self__.x_label, self__.y_label, self__.__meta, self__.__extmap, null)
  }else {
    if(pred__5644.call(null, "\ufdd0:x-label", expr__5645)) {
      return new lsc_web.plots.LabeledCanvas(self__.title, G__5641, self__.y_label, self__.__meta, self__.__extmap, null)
    }else {
      if(pred__5644.call(null, "\ufdd0:y-label", expr__5645)) {
        return new lsc_web.plots.LabeledCanvas(self__.title, self__.x_label, G__5641, self__.__meta, self__.__extmap, null)
      }else {
        return new lsc_web.plots.LabeledCanvas(self__.title, self__.x_label, self__.y_label, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__2908__auto__, G__5641), null)
      }
    }
  }
};
lsc_web.plots.LabeledCanvas.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__2914__auto__, writer__2915__auto__, opts__2916__auto__) {
  var self__ = this;
  var pr_pair__2917__auto__ = function(keyval__2918__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__2915__auto__, cljs.core.pr_writer, "", " ", "", opts__2916__auto__, keyval__2918__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__2915__auto__, pr_pair__2917__auto__, "#lsc-web.plots.LabeledCanvas{", ", ", "}", opts__2916__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0:title", self__.title), cljs.core.vector.call(null, "\ufdd0:x-label", self__.x_label), cljs.core.vector.call(null, "\ufdd0:y-label", self__.y_label)], true), self__.__extmap))
};
lsc_web.plots.LabeledCanvas.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2905__auto__, entry__2906__auto__) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2906__auto__)) {
    return this__2905__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2905__auto__, cljs.core._nth.call(null, entry__2906__auto__, 0), cljs.core._nth.call(null, entry__2906__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2905__auto__, entry__2906__auto__)
  }
};
lsc_web.plots.LabeledCanvas.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2912__auto__) {
  var self__ = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0:title", self__.title), cljs.core.vector.call(null, "\ufdd0:x-label", self__.x_label), cljs.core.vector.call(null, "\ufdd0:y-label", self__.y_label)], true), self__.__extmap))
};
lsc_web.plots.LabeledCanvas.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2904__auto__) {
  var self__ = this;
  return 3 + cljs.core.count.call(null, self__.__extmap)
};
lsc_web.plots.LabeledCanvas.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2896__auto__, other__2897__auto__) {
  var self__ = this;
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = other__2897__auto__;
    if(cljs.core.truth_(and__3941__auto__)) {
      var and__3941__auto____$1 = this__2896__auto__.constructor === other__2897__auto__.constructor;
      if(and__3941__auto____$1) {
        return cljs.core.equiv_map.call(null, this__2896__auto__, other__2897__auto__)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
lsc_web.plots.LabeledCanvas.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2899__auto__, G__5641) {
  var self__ = this;
  return new lsc_web.plots.LabeledCanvas(self__.title, self__.x_label, self__.y_label, G__5641, self__.__extmap, self__.__hash)
};
lsc_web.plots.LabeledCanvas.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2898__auto__) {
  var self__ = this;
  return self__.__meta
};
lsc_web.plots.LabeledCanvas.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2909__auto__, k__2910__auto__) {
  var self__ = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0:x-label", null, "\ufdd0:title", null, "\ufdd0:y-label", null], true), k__2910__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2909__auto__), self__.__meta), k__2910__auto__)
  }else {
    return new lsc_web.plots.LabeledCanvas(self__.title, self__.x_label, self__.y_label, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__2910__auto__)), null)
  }
};
lsc_web.plots.LabeledCanvas.prototype.lsc_web$plots$PrepareCanvas$ = true;
lsc_web.plots.LabeledCanvas.prototype.lsc_web$plots$PrepareCanvas$prepare_BANG_$arity$2 = function(this$, container) {
  var self__ = this;
  var margins = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:left", 60, "\ufdd0:top", 40, "\ufdd0:right", 40, "\ufdd0:bottom", 60], true);
  var font_heights = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:title", 20, "\ufdd0:x-label", 18, "\ufdd0:y-label", 18], true);
  var container_size = lsc_web.plots.get_size.call(null, container);
  var size = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", (new cljs.core.Keyword("\ufdd0:x")).call(null, container_size) - (new cljs.core.Keyword("\ufdd0:left")).call(null, margins) - (new cljs.core.Keyword("\ufdd0:right")).call(null, margins), "\ufdd0:y", (new cljs.core.Keyword("\ufdd0:y")).call(null, container_size) - (new cljs.core.Keyword("\ufdd0:top")).call(null, margins) - (new cljs.core.Keyword("\ufdd0:bottom")).call(null, margins)], true);
  var canvas = lsc_web.plots.describe_BANG_.call(null, container.append("g"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", "canvas", "\ufdd0:width", (new cljs.core.Keyword("\ufdd0:x")).call(null, size), "\ufdd0:height", (new cljs.core.Keyword("\ufdd0:y")).call(null, size)], true));
  lsc_web.plots.translate_BANG_.call(null, canvas, (new cljs.core.Keyword("\ufdd0:left")).call(null, margins), (new cljs.core.Keyword("\ufdd0:top")).call(null, margins));
  lsc_web.plots.describe_BANG_.call(null, canvas.append("text").text(self__.title), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", lsc_web.plots.half.call(null, (new cljs.core.Keyword("\ufdd0:x")).call(null, size)), "\ufdd0:y", 1.1 * (new cljs.core.Keyword("\ufdd0:title")).call(null, font_heights) - (new cljs.core.Keyword("\ufdd0:top")).call(null, margins), "\ufdd0:text-anchor", "middle", "\ufdd0:font-size", (new cljs.core.Keyword("\ufdd0:title")).call(null, font_heights), "\ufdd0:class", "title label"], 
  true));
  lsc_web.plots.describe_BANG_.call(null, canvas.append("text").text(self__.x_label), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", lsc_web.plots.half.call(null, (new cljs.core.Keyword("\ufdd0:x")).call(null, size)), "\ufdd0:y", (new cljs.core.Keyword("\ufdd0:y")).call(null, size) + (new cljs.core.Keyword("\ufdd0:bottom")).call(null, margins) + -1.1 * (new cljs.core.Keyword("\ufdd0:x-label")).call(null, font_heights), "\ufdd0:text-anchor", "middle", "\ufdd0:font-size", (new cljs.core.Keyword("\ufdd0:x-label")).call(null, 
  font_heights), "\ufdd0:class", "x label"], true));
  lsc_web.plots.describe_BANG_.call(null, canvas.append("g").attr("transform", "rotate(-90)").append("text").text(self__.y_label), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", -lsc_web.plots.half.call(null, (new cljs.core.Keyword("\ufdd0:y")).call(null, size)), "\ufdd0:y", 1.1 * (new cljs.core.Keyword("\ufdd0:y-label")).call(null, font_heights) - (new cljs.core.Keyword("\ufdd0:left")).call(null, margins), "\ufdd0:text-anchor", "middle", "\ufdd0:font-size", (new cljs.core.Keyword("\ufdd0:y-label")).call(null, 
  font_heights), "\ufdd0:class", "y label"], true));
  return canvas
};
lsc_web.plots.LabeledCanvas.cljs$lang$type = true;
lsc_web.plots.LabeledCanvas.cljs$lang$ctorPrSeq = function(this__2935__auto__) {
  return cljs.core.list.call(null, "lsc-web.plots/LabeledCanvas")
};
lsc_web.plots.LabeledCanvas.cljs$lang$ctorPrWriter = function(this__2935__auto__, writer__2936__auto__) {
  return cljs.core._write.call(null, writer__2936__auto__, "lsc-web.plots/LabeledCanvas")
};
lsc_web.plots.__GT_LabeledCanvas = function __GT_LabeledCanvas(title, x_label, y_label) {
  return new lsc_web.plots.LabeledCanvas(title, x_label, y_label)
};
lsc_web.plots.map__GT_LabeledCanvas = function map__GT_LabeledCanvas(G__5643) {
  return new lsc_web.plots.LabeledCanvas((new cljs.core.Keyword("\ufdd0:title")).call(null, G__5643), (new cljs.core.Keyword("\ufdd0:x-label")).call(null, G__5643), (new cljs.core.Keyword("\ufdd0:y-label")).call(null, G__5643), null, cljs.core.dissoc.call(null, G__5643, "\ufdd0:title", "\ufdd0:x-label", "\ufdd0:y-label"))
};
lsc_web.plots.make_axis = function make_axis(scale, orientation) {
  return lsc_web.plots.d3.svg.axis().scale(scale).orient(orientation)
};
lsc_web.plots.make_x_axis = function make_x_axis(axes) {
  return lsc_web.plots.make_axis.call(null, (new cljs.core.Keyword("\ufdd0:x-scale")).call(null, axes), "bottom")
};
lsc_web.plots.make_y_axis = function make_y_axis(axes) {
  return lsc_web.plots.make_axis.call(null, (new cljs.core.Keyword("\ufdd0:y-scale")).call(null, axes), "left")
};
lsc_web.plots.make_grid_axis = function make_grid_axis(axis, length) {
  return axis.tickSize(-length, 0, 0).tickFormat("")
};
lsc_web.plots.expand_to_canvas_size = function expand_to_canvas_size(scales, canvas) {
  var map__5649 = lsc_web.plots.get_size.call(null, canvas);
  var map__5649__$1 = cljs.core.seq_QMARK_.call(null, map__5649) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5649) : map__5649;
  var width = cljs.core.get.call(null, map__5649__$1, "\ufdd0:x");
  var height = cljs.core.get.call(null, map__5649__$1, "\ufdd0:y");
  var map__5650 = scales;
  var map__5650__$1 = cljs.core.seq_QMARK_.call(null, map__5650) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5650) : map__5650;
  var y = cljs.core.get.call(null, map__5650__$1, "\ufdd0:y");
  var x = cljs.core.get.call(null, map__5650__$1, "\ufdd0:x");
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", x.copy().range(cljs.core.to_array.call(null, cljs.core.PersistentVector.fromArray([0, width], true))), "\ufdd0:y", y.copy().range(cljs.core.to_array.call(null, cljs.core.PersistentVector.fromArray([height, 0], true)))], true)
};
lsc_web.plots.expand_axes_to_canvas_size = function expand_axes_to_canvas_size(axes, canvas) {
  var map__5652 = lsc_web.plots.expand_to_canvas_size.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", (new cljs.core.Keyword("\ufdd0:x-scale")).call(null, axes), "\ufdd0:y", (new cljs.core.Keyword("\ufdd0:y-scale")).call(null, axes)], true), canvas);
  var map__5652__$1 = cljs.core.seq_QMARK_.call(null, map__5652) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5652) : map__5652;
  var y = cljs.core.get.call(null, map__5652__$1, "\ufdd0:y");
  var x = cljs.core.get.call(null, map__5652__$1, "\ufdd0:x");
  return cljs.core.assoc.call(null, axes, "\ufdd0:x-scale", x, "\ufdd0:y-scale", y)
};
goog.provide("lsc_web.plots.XYAxes");
lsc_web.plots.XYAxes = function(x_scale, y_scale, show_grid, __meta, __extmap) {
  this.x_scale = x_scale;
  this.y_scale = y_scale;
  this.show_grid = show_grid;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
lsc_web.plots.XYAxes.prototype.lsc_web$plots$UpdateCanvas$ = true;
lsc_web.plots.XYAxes.prototype.lsc_web$plots$UpdateCanvas$update_BANG_$arity$2 = function(this$, canvas) {
  var self__ = this;
  var this$__$1 = lsc_web.plots.expand_axes_to_canvas_size.call(null, this$, canvas);
  var size = lsc_web.plots.get_size.call(null, canvas);
  var x_axis = lsc_web.plots.make_x_axis.call(null, this$__$1);
  var y_axis = lsc_web.plots.make_y_axis.call(null, this$__$1);
  var x_grid_axis = lsc_web.plots.make_grid_axis.call(null, lsc_web.plots.make_x_axis.call(null, this$__$1), (new cljs.core.Keyword("\ufdd0:y")).call(null, size));
  var y_grid_axis = lsc_web.plots.make_grid_axis.call(null, lsc_web.plots.make_y_axis.call(null, this$__$1), (new cljs.core.Keyword("\ufdd0:x")).call(null, size));
  x_grid_axis.call(null, canvas.select(".x.grid"));
  y_grid_axis.call(null, canvas.select(".y.grid"));
  lsc_web.plots.describe_BANG_.call(null, canvas.selectAll(".grid"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:display", cljs.core.truth_((new cljs.core.Keyword("\ufdd0:show-grid")).call(null, this$__$1)) ? "true" : "none"], true));
  x_axis.call(null, canvas.select(".x.axis"));
  y_axis.call(null, canvas.select(".y.axis"));
  return canvas
};
lsc_web.plots.XYAxes.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2895__auto__) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_imap.call(null, this__2895__auto__);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
lsc_web.plots.XYAxes.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2900__auto__, k__2901__auto__) {
  var self__ = this;
  return this__2900__auto__.cljs$core$ILookup$_lookup$arity$3(this__2900__auto__, k__2901__auto__, null)
};
lsc_web.plots.XYAxes.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2902__auto__, k5655, else__2903__auto__) {
  var self__ = this;
  if(k5655 === "\ufdd0:x-scale") {
    return self__.x_scale
  }else {
    if(k5655 === "\ufdd0:y-scale") {
      return self__.y_scale
    }else {
      if(k5655 === "\ufdd0:show-grid") {
        return self__.show_grid
      }else {
        if("\ufdd0:else") {
          return cljs.core.get.call(null, self__.__extmap, k5655, else__2903__auto__)
        }else {
          return null
        }
      }
    }
  }
};
lsc_web.plots.XYAxes.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2907__auto__, k__2908__auto__, G__5654) {
  var self__ = this;
  var pred__5657 = cljs.core.identical_QMARK_;
  var expr__5658 = k__2908__auto__;
  if(pred__5657.call(null, "\ufdd0:x-scale", expr__5658)) {
    return new lsc_web.plots.XYAxes(G__5654, self__.y_scale, self__.show_grid, self__.__meta, self__.__extmap, null)
  }else {
    if(pred__5657.call(null, "\ufdd0:y-scale", expr__5658)) {
      return new lsc_web.plots.XYAxes(self__.x_scale, G__5654, self__.show_grid, self__.__meta, self__.__extmap, null)
    }else {
      if(pred__5657.call(null, "\ufdd0:show-grid", expr__5658)) {
        return new lsc_web.plots.XYAxes(self__.x_scale, self__.y_scale, G__5654, self__.__meta, self__.__extmap, null)
      }else {
        return new lsc_web.plots.XYAxes(self__.x_scale, self__.y_scale, self__.show_grid, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__2908__auto__, G__5654), null)
      }
    }
  }
};
lsc_web.plots.XYAxes.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__2914__auto__, writer__2915__auto__, opts__2916__auto__) {
  var self__ = this;
  var pr_pair__2917__auto__ = function(keyval__2918__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__2915__auto__, cljs.core.pr_writer, "", " ", "", opts__2916__auto__, keyval__2918__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__2915__auto__, pr_pair__2917__auto__, "#lsc-web.plots.XYAxes{", ", ", "}", opts__2916__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0:x-scale", self__.x_scale), cljs.core.vector.call(null, "\ufdd0:y-scale", self__.y_scale), cljs.core.vector.call(null, "\ufdd0:show-grid", self__.show_grid)], true), self__.__extmap))
};
lsc_web.plots.XYAxes.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2905__auto__, entry__2906__auto__) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2906__auto__)) {
    return this__2905__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2905__auto__, cljs.core._nth.call(null, entry__2906__auto__, 0), cljs.core._nth.call(null, entry__2906__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2905__auto__, entry__2906__auto__)
  }
};
lsc_web.plots.XYAxes.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2912__auto__) {
  var self__ = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0:x-scale", self__.x_scale), cljs.core.vector.call(null, "\ufdd0:y-scale", self__.y_scale), cljs.core.vector.call(null, "\ufdd0:show-grid", self__.show_grid)], true), self__.__extmap))
};
lsc_web.plots.XYAxes.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2904__auto__) {
  var self__ = this;
  return 3 + cljs.core.count.call(null, self__.__extmap)
};
lsc_web.plots.XYAxes.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2896__auto__, other__2897__auto__) {
  var self__ = this;
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = other__2897__auto__;
    if(cljs.core.truth_(and__3941__auto__)) {
      var and__3941__auto____$1 = this__2896__auto__.constructor === other__2897__auto__.constructor;
      if(and__3941__auto____$1) {
        return cljs.core.equiv_map.call(null, this__2896__auto__, other__2897__auto__)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
lsc_web.plots.XYAxes.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2899__auto__, G__5654) {
  var self__ = this;
  return new lsc_web.plots.XYAxes(self__.x_scale, self__.y_scale, self__.show_grid, G__5654, self__.__extmap, self__.__hash)
};
lsc_web.plots.XYAxes.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2898__auto__) {
  var self__ = this;
  return self__.__meta
};
lsc_web.plots.XYAxes.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2909__auto__, k__2910__auto__) {
  var self__ = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0:show-grid", null, "\ufdd0:x-scale", null, "\ufdd0:y-scale", null], true), k__2910__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2909__auto__), self__.__meta), k__2910__auto__)
  }else {
    return new lsc_web.plots.XYAxes(self__.x_scale, self__.y_scale, self__.show_grid, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__2910__auto__)), null)
  }
};
lsc_web.plots.XYAxes.prototype.lsc_web$plots$PrepareCanvas$ = true;
lsc_web.plots.XYAxes.prototype.lsc_web$plots$PrepareCanvas$prepare_BANG_$arity$2 = function(this$, canvas) {
  var self__ = this;
  var this$__$1 = lsc_web.plots.expand_axes_to_canvas_size.call(null, this$, canvas);
  var size = lsc_web.plots.get_size.call(null, canvas);
  var x_grid_group = lsc_web.plots.describe_BANG_.call(null, canvas.append("g"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", "x grid"], true));
  var y_grid_group = lsc_web.plots.describe_BANG_.call(null, canvas.append("g"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", "y grid"], true));
  var x_group = lsc_web.plots.describe_BANG_.call(null, canvas.append("g"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", "x axis"], true));
  var y_group = lsc_web.plots.describe_BANG_.call(null, canvas.append("g"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", "y axis"], true));
  var seq__5660_5664 = cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([x_grid_group, x_group], true));
  var chunk__5661_5665 = null;
  var count__5662_5666 = 0;
  var i__5663_5667 = 0;
  while(true) {
    if(i__5663_5667 < count__5662_5666) {
      var group_5668 = cljs.core._nth.call(null, chunk__5661_5665, i__5663_5667);
      lsc_web.plots.translate_BANG_.call(null, group_5668, 0, (new cljs.core.Keyword("\ufdd0:y")).call(null, size));
      var G__5669 = seq__5660_5664;
      var G__5670 = chunk__5661_5665;
      var G__5671 = count__5662_5666;
      var G__5672 = i__5663_5667 + 1;
      seq__5660_5664 = G__5669;
      chunk__5661_5665 = G__5670;
      count__5662_5666 = G__5671;
      i__5663_5667 = G__5672;
      continue
    }else {
      var temp__4092__auto___5673 = cljs.core.seq.call(null, seq__5660_5664);
      if(temp__4092__auto___5673) {
        var seq__5660_5674__$1 = temp__4092__auto___5673;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__5660_5674__$1)) {
          var c__3073__auto___5675 = cljs.core.chunk_first.call(null, seq__5660_5674__$1);
          var G__5676 = cljs.core.chunk_rest.call(null, seq__5660_5674__$1);
          var G__5677 = c__3073__auto___5675;
          var G__5678 = cljs.core.count.call(null, c__3073__auto___5675);
          var G__5679 = 0;
          seq__5660_5664 = G__5676;
          chunk__5661_5665 = G__5677;
          count__5662_5666 = G__5678;
          i__5663_5667 = G__5679;
          continue
        }else {
          var group_5680 = cljs.core.first.call(null, seq__5660_5674__$1);
          lsc_web.plots.translate_BANG_.call(null, group_5680, 0, (new cljs.core.Keyword("\ufdd0:y")).call(null, size));
          var G__5681 = cljs.core.next.call(null, seq__5660_5674__$1);
          var G__5682 = null;
          var G__5683 = 0;
          var G__5684 = 0;
          seq__5660_5664 = G__5681;
          chunk__5661_5665 = G__5682;
          count__5662_5666 = G__5683;
          i__5663_5667 = G__5684;
          continue
        }
      }else {
      }
    }
    break
  }
  return lsc_web.plots.update_BANG_.call(null, this$__$1, canvas)
};
lsc_web.plots.XYAxes.cljs$lang$type = true;
lsc_web.plots.XYAxes.cljs$lang$ctorPrSeq = function(this__2935__auto__) {
  return cljs.core.list.call(null, "lsc-web.plots/XYAxes")
};
lsc_web.plots.XYAxes.cljs$lang$ctorPrWriter = function(this__2935__auto__, writer__2936__auto__) {
  return cljs.core._write.call(null, writer__2936__auto__, "lsc-web.plots/XYAxes")
};
lsc_web.plots.__GT_XYAxes = function __GT_XYAxes(x_scale, y_scale, show_grid) {
  return new lsc_web.plots.XYAxes(x_scale, y_scale, show_grid)
};
lsc_web.plots.map__GT_XYAxes = function map__GT_XYAxes(G__5656) {
  return new lsc_web.plots.XYAxes((new cljs.core.Keyword("\ufdd0:x-scale")).call(null, G__5656), (new cljs.core.Keyword("\ufdd0:y-scale")).call(null, G__5656), (new cljs.core.Keyword("\ufdd0:show-grid")).call(null, G__5656), null, cljs.core.dissoc.call(null, G__5656, "\ufdd0:x-scale", "\ufdd0:y-scale", "\ufdd0:show-grid"))
};
lsc_web.plots.make_color_scale = function make_color_scale(scale, low_color, high_color) {
  var scale__$1 = scale.copy().range([0, 1]);
  var interp = lsc_web.plots.d3.interpolateRgb(low_color, high_color);
  return cljs.core.with_meta.call(null, function(p1__5653_SHARP_) {
    return interp.call(null, scale__$1.call(null, p1__5653_SHARP_))
  }, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:low-color", low_color, "\ufdd0:high-color", high_color, "\ufdd0:scale", scale__$1], true))
};
goog.provide("lsc_web.plots.ZColorAxis");
lsc_web.plots.ZColorAxis = function(color_scale, __meta, __extmap) {
  this.color_scale = color_scale;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
lsc_web.plots.ZColorAxis.prototype.lsc_web$plots$UpdateCanvas$ = true;
lsc_web.plots.ZColorAxis.prototype.lsc_web$plots$UpdateCanvas$update_BANG_$arity$2 = function(this$, canvas) {
  var self__ = this;
  var size = lsc_web.plots.get_size.call(null, canvas);
  var axis = lsc_web.plots.make_axis.call(null, (new cljs.core.Keyword("\ufdd0:scale")).call(null, cljs.core.meta.call(null, self__.color_scale)).copy().range([(new cljs.core.Keyword("\ufdd0:y")).call(null, size), 0]), "right");
  var defs = canvas.select("defs");
  defs.select("#z-gradient").remove();
  var gradient_5695 = defs.append("linearGradient");
  var make_stop_5696 = function(gradient_5695) {
    return function(p1__5687_SHARP_, p2__5688_SHARP_) {
      return lsc_web.plots.describe_BANG_.call(null, gradient_5695.append("stop"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:offset", p1__5687_SHARP_, "\ufdd0:stop-color", p2__5688_SHARP_, "\ufdd0:stop-opacity", 1], true))
    }
  }(gradient_5695);
  lsc_web.plots.describe_BANG_.call(null, gradient_5695, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:id", "z-gradient", "\ufdd0:x1", "0%", "\ufdd0:y1", "100%", "\ufdd0:x2", "0%", "\ufdd0:y2", "0%"], true));
  make_stop_5696.call(null, "0%", (new cljs.core.Keyword("\ufdd0:low-color")).call(null, cljs.core.meta.call(null, self__.color_scale)));
  make_stop_5696.call(null, "100%", (new cljs.core.Keyword("\ufdd0:high-color")).call(null, cljs.core.meta.call(null, self__.color_scale)));
  axis.call(null, canvas.select(".z.axis"));
  return canvas
};
lsc_web.plots.ZColorAxis.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2895__auto__) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_imap.call(null, this__2895__auto__);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
lsc_web.plots.ZColorAxis.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2900__auto__, k__2901__auto__) {
  var self__ = this;
  return this__2900__auto__.cljs$core$ILookup$_lookup$arity$3(this__2900__auto__, k__2901__auto__, null)
};
lsc_web.plots.ZColorAxis.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2902__auto__, k5690, else__2903__auto__) {
  var self__ = this;
  if(k5690 === "\ufdd0:color-scale") {
    return self__.color_scale
  }else {
    if("\ufdd0:else") {
      return cljs.core.get.call(null, self__.__extmap, k5690, else__2903__auto__)
    }else {
      return null
    }
  }
};
lsc_web.plots.ZColorAxis.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2907__auto__, k__2908__auto__, G__5689) {
  var self__ = this;
  var pred__5692 = cljs.core.identical_QMARK_;
  var expr__5693 = k__2908__auto__;
  if(pred__5692.call(null, "\ufdd0:color-scale", expr__5693)) {
    return new lsc_web.plots.ZColorAxis(G__5689, self__.__meta, self__.__extmap, null)
  }else {
    return new lsc_web.plots.ZColorAxis(self__.color_scale, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__2908__auto__, G__5689), null)
  }
};
lsc_web.plots.ZColorAxis.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__2914__auto__, writer__2915__auto__, opts__2916__auto__) {
  var self__ = this;
  var pr_pair__2917__auto__ = function(keyval__2918__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__2915__auto__, cljs.core.pr_writer, "", " ", "", opts__2916__auto__, keyval__2918__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__2915__auto__, pr_pair__2917__auto__, "#lsc-web.plots.ZColorAxis{", ", ", "}", opts__2916__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0:color-scale", self__.color_scale)], true), self__.__extmap))
};
lsc_web.plots.ZColorAxis.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2905__auto__, entry__2906__auto__) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2906__auto__)) {
    return this__2905__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2905__auto__, cljs.core._nth.call(null, entry__2906__auto__, 0), cljs.core._nth.call(null, entry__2906__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2905__auto__, entry__2906__auto__)
  }
};
lsc_web.plots.ZColorAxis.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2912__auto__) {
  var self__ = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0:color-scale", self__.color_scale)], true), self__.__extmap))
};
lsc_web.plots.ZColorAxis.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2904__auto__) {
  var self__ = this;
  return 1 + cljs.core.count.call(null, self__.__extmap)
};
lsc_web.plots.ZColorAxis.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2896__auto__, other__2897__auto__) {
  var self__ = this;
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = other__2897__auto__;
    if(cljs.core.truth_(and__3941__auto__)) {
      var and__3941__auto____$1 = this__2896__auto__.constructor === other__2897__auto__.constructor;
      if(and__3941__auto____$1) {
        return cljs.core.equiv_map.call(null, this__2896__auto__, other__2897__auto__)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
lsc_web.plots.ZColorAxis.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2899__auto__, G__5689) {
  var self__ = this;
  return new lsc_web.plots.ZColorAxis(self__.color_scale, G__5689, self__.__extmap, self__.__hash)
};
lsc_web.plots.ZColorAxis.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2898__auto__) {
  var self__ = this;
  return self__.__meta
};
lsc_web.plots.ZColorAxis.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2909__auto__, k__2910__auto__) {
  var self__ = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0:color-scale", null], true), k__2910__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2909__auto__), self__.__meta), k__2910__auto__)
  }else {
    return new lsc_web.plots.ZColorAxis(self__.color_scale, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__2910__auto__)), null)
  }
};
lsc_web.plots.ZColorAxis.prototype.lsc_web$plots$PrepareCanvas$ = true;
lsc_web.plots.ZColorAxis.prototype.lsc_web$plots$PrepareCanvas$prepare_BANG_$arity$2 = function(this$, container) {
  var self__ = this;
  var size = lsc_web.plots.get_size.call(null, container);
  var width = 30;
  var bar_width = 20;
  var defs = container.append("defs");
  var group = lsc_web.plots.describe_BANG_.call(null, container.append("g"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", "z axis"], true));
  var gradient_5697 = defs.append("linearGradient");
  var make_stop_5698 = function(gradient_5697) {
    return function(p1__5685_SHARP_, p2__5686_SHARP_) {
      return lsc_web.plots.describe_BANG_.call(null, gradient_5697.append("stop"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:offset", p1__5685_SHARP_, "\ufdd0:stop-color", p2__5686_SHARP_, "\ufdd0:stop-opacity", 1], true))
    }
  }(gradient_5697);
  lsc_web.plots.describe_BANG_.call(null, gradient_5697, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:id", "z-gradient", "\ufdd0:x1", "0%", "\ufdd0:y1", "100%", "\ufdd0:x2", "0%", "\ufdd0:y2", "0%"], true));
  make_stop_5698.call(null, "0%", (new cljs.core.Keyword("\ufdd0:low-color")).call(null, cljs.core.meta.call(null, self__.color_scale)));
  make_stop_5698.call(null, "100%", (new cljs.core.Keyword("\ufdd0:high-color")).call(null, cljs.core.meta.call(null, self__.color_scale)));
  lsc_web.plots.translate_BANG_.call(null, group, (new cljs.core.Keyword("\ufdd0:x")).call(null, size) - (width - bar_width), 0);
  lsc_web.plots.describe_BANG_.call(null, group.append("rect"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", -bar_width, "\ufdd0:y", 0, "\ufdd0:width", bar_width, "\ufdd0:height", (new cljs.core.Keyword("\ufdd0:y")).call(null, size), "\ufdd0:fill", "url(#z-gradient)"], true));
  this$.lsc_web$plots$UpdateCanvas$update_BANG_$arity$2(this$, container);
  return lsc_web.plots.describe_BANG_.call(null, container.append("g"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:width", (new cljs.core.Keyword("\ufdd0:x")).call(null, size) - width - bar_width - 5, "\ufdd0:height", (new cljs.core.Keyword("\ufdd0:y")).call(null, size)], true))
};
lsc_web.plots.ZColorAxis.cljs$lang$type = true;
lsc_web.plots.ZColorAxis.cljs$lang$ctorPrSeq = function(this__2935__auto__) {
  return cljs.core.list.call(null, "lsc-web.plots/ZColorAxis")
};
lsc_web.plots.ZColorAxis.cljs$lang$ctorPrWriter = function(this__2935__auto__, writer__2936__auto__) {
  return cljs.core._write.call(null, writer__2936__auto__, "lsc-web.plots/ZColorAxis")
};
lsc_web.plots.__GT_ZColorAxis = function __GT_ZColorAxis(color_scale) {
  return new lsc_web.plots.ZColorAxis(color_scale)
};
lsc_web.plots.map__GT_ZColorAxis = function map__GT_ZColorAxis(G__5691) {
  return new lsc_web.plots.ZColorAxis((new cljs.core.Keyword("\ufdd0:color-scale")).call(null, G__5691), null, cljs.core.dissoc.call(null, G__5691, "\ufdd0:color-scale"))
};
lsc_web.plots.default_data_set = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:label", null, "\ufdd0:color", "black", "\ufdd0:marker-size", 2], true);
goog.provide("lsc_web.plots.ScatterPlot");
lsc_web.plots.ScatterPlot = function(axes, legend, data_sets, __meta, __extmap) {
  this.axes = axes;
  this.legend = legend;
  this.data_sets = data_sets;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
lsc_web.plots.ScatterPlot.prototype.lsc_web$plots$UpdateCanvas$ = true;
lsc_web.plots.ScatterPlot.prototype.lsc_web$plots$UpdateCanvas$update_BANG_$arity$2 = function(this$, canvas) {
  var self__ = this;
  var legend_pos = cljs.core.get.call(null, this$, "\ufdd0:legend", "\ufdd0:top-right");
  var canvas_size = lsc_web.plots.get_size.call(null, canvas);
  var size = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", 100, "\ufdd0:y", 20], true);
  if(cljs.core.not_EQ_.call(null, legend_pos, "\ufdd0:no-legend")) {
    var data_sets_5718__$1 = cljs.core.filter.call(null, "\ufdd0:label", cljs.core.vals.call(null, (new cljs.core.Keyword("\ufdd0:data-sets")).call(null, this$)));
    var legend_5719__$1 = canvas.selectAll(".legend").data(cljs.core.to_array.call(null, data_sets_5718__$1));
    var position_5720 = function(data_sets_5718__$1, legend_5719__$1) {
      return function(_, i) {
        var vec__5708 = function() {
          var G__5709 = legend_pos;
          if(cljs.core._EQ_.call(null, "\ufdd0:top-right", G__5709)) {
            return cljs.core.PersistentVector.fromArray([(new cljs.core.Keyword("\ufdd0:x")).call(null, canvas_size) - (new cljs.core.Keyword("\ufdd0:x")).call(null, size), i * ((new cljs.core.Keyword("\ufdd0:y")).call(null, size) + 5)], true)
          }else {
            if("\ufdd0:else") {
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(legend_pos)].join(""));
            }else {
              return null
            }
          }
        }();
        var x = cljs.core.nth.call(null, vec__5708, 0, null);
        var y = cljs.core.nth.call(null, vec__5708, 1, null);
        return[cljs.core.str("translate("), cljs.core.str(x), cljs.core.str(","), cljs.core.str(y), cljs.core.str(")")].join("")
      }
    }(data_sets_5718__$1, legend_5719__$1);
    var legend_group_5721 = lsc_web.plots.describe_BANG_.call(null, legend_5719__$1.enter().append("g"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", "legend", "\ufdd0:transform", position_5720], true));
    lsc_web.plots.describe_BANG_.call(null, legend_group_5721.append("rect"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", 0, "\ufdd0:y", 0, "\ufdd0:width", (new cljs.core.Keyword("\ufdd0:x")).call(null, size), "\ufdd0:height", (new cljs.core.Keyword("\ufdd0:y")).call(null, size), "\ufdd0:stroke", "none", "\ufdd0:fill", function(p1__5699_SHARP_) {
      return cljs.core.get.call(null, p1__5699_SHARP_, "\ufdd0:color", "black")
    }], true));
    lsc_web.plots.describe_BANG_.call(null, legend_group_5721.append("text").text(function(p1__5700_SHARP_) {
      return(new cljs.core.Keyword("\ufdd0:label")).call(null, p1__5700_SHARP_)
    }), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", 3, "\ufdd0:y", (new cljs.core.Keyword("\ufdd0:y")).call(null, size) - 5, "\ufdd0:text-anchor", "start", "\ufdd0:font-size", (new cljs.core.Keyword("\ufdd0:y")).call(null, size) - 8, "\ufdd0:font-weight", "bold", "\ufdd0:fill", "white"], true));
    legend_5719__$1.exit().remove()
  }else {
  }
  return canvas
};
lsc_web.plots.ScatterPlot.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2895__auto__) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_imap.call(null, this__2895__auto__);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
lsc_web.plots.ScatterPlot.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2900__auto__, k__2901__auto__) {
  var self__ = this;
  return this__2900__auto__.cljs$core$ILookup$_lookup$arity$3(this__2900__auto__, k__2901__auto__, null)
};
lsc_web.plots.ScatterPlot.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2902__auto__, k5706, else__2903__auto__) {
  var self__ = this;
  if(k5706 === "\ufdd0:axes") {
    return self__.axes
  }else {
    if(k5706 === "\ufdd0:legend") {
      return self__.legend
    }else {
      if(k5706 === "\ufdd0:data-sets") {
        return self__.data_sets
      }else {
        if("\ufdd0:else") {
          return cljs.core.get.call(null, self__.__extmap, k5706, else__2903__auto__)
        }else {
          return null
        }
      }
    }
  }
};
lsc_web.plots.ScatterPlot.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2907__auto__, k__2908__auto__, G__5705) {
  var self__ = this;
  var pred__5710 = cljs.core.identical_QMARK_;
  var expr__5711 = k__2908__auto__;
  if(pred__5710.call(null, "\ufdd0:axes", expr__5711)) {
    return new lsc_web.plots.ScatterPlot(G__5705, self__.legend, self__.data_sets, self__.__meta, self__.__extmap, null)
  }else {
    if(pred__5710.call(null, "\ufdd0:legend", expr__5711)) {
      return new lsc_web.plots.ScatterPlot(self__.axes, G__5705, self__.data_sets, self__.__meta, self__.__extmap, null)
    }else {
      if(pred__5710.call(null, "\ufdd0:data-sets", expr__5711)) {
        return new lsc_web.plots.ScatterPlot(self__.axes, self__.legend, G__5705, self__.__meta, self__.__extmap, null)
      }else {
        return new lsc_web.plots.ScatterPlot(self__.axes, self__.legend, self__.data_sets, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__2908__auto__, G__5705), null)
      }
    }
  }
};
lsc_web.plots.ScatterPlot.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__2914__auto__, writer__2915__auto__, opts__2916__auto__) {
  var self__ = this;
  var pr_pair__2917__auto__ = function(keyval__2918__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__2915__auto__, cljs.core.pr_writer, "", " ", "", opts__2916__auto__, keyval__2918__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__2915__auto__, pr_pair__2917__auto__, "#lsc-web.plots.ScatterPlot{", ", ", "}", opts__2916__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0:axes", self__.axes), cljs.core.vector.call(null, "\ufdd0:legend", self__.legend), cljs.core.vector.call(null, "\ufdd0:data-sets", self__.data_sets)], true), self__.__extmap))
};
lsc_web.plots.ScatterPlot.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2905__auto__, entry__2906__auto__) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2906__auto__)) {
    return this__2905__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2905__auto__, cljs.core._nth.call(null, entry__2906__auto__, 0), cljs.core._nth.call(null, entry__2906__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2905__auto__, entry__2906__auto__)
  }
};
lsc_web.plots.ScatterPlot.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2912__auto__) {
  var self__ = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0:axes", self__.axes), cljs.core.vector.call(null, "\ufdd0:legend", self__.legend), cljs.core.vector.call(null, "\ufdd0:data-sets", self__.data_sets)], true), self__.__extmap))
};
lsc_web.plots.ScatterPlot.prototype.lsc_web$plots$Draw$ = true;
lsc_web.plots.ScatterPlot.prototype.lsc_web$plots$Draw$draw_BANG_$arity$3 = function(this$, canvas, data) {
  var self__ = this;
  var with_keys = function(key) {
    return cljs.core.map.call(null, function(v) {
      return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:key", key, "\ufdd0:value", v], true)
    }, key.call(null, data))
  };
  var combined = cljs.core.mapcat.call(null, with_keys, cljs.core.keys.call(null, data));
  var map__5713 = lsc_web.plots.expand_axes_to_canvas_size.call(null, self__.axes, canvas);
  var map__5713__$1 = cljs.core.seq_QMARK_.call(null, map__5713) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5713) : map__5713;
  var y_scale = cljs.core.get.call(null, map__5713__$1, "\ufdd0:y-scale");
  var x_scale = cljs.core.get.call(null, map__5713__$1, "\ufdd0:x-scale");
  var get_data_set = function(with_keys, combined, map__5713, map__5713__$1, y_scale, x_scale) {
    return function(p1__5701_SHARP_) {
      return cljs.core.get.call(null, (new cljs.core.Keyword("\ufdd0:data-sets")).call(null, this$), p1__5701_SHARP_, lsc_web.plots.default_data_set)
    }
  }(with_keys, combined, map__5713, map__5713__$1, y_scale, x_scale);
  var seq__5714_5722 = cljs.core.seq.call(null, cljs.core.keys.call(null, data));
  var chunk__5715_5723 = null;
  var count__5716_5724 = 0;
  var i__5717_5725 = 0;
  while(true) {
    if(i__5717_5725 < count__5716_5724) {
      var key_5726 = cljs.core._nth.call(null, chunk__5715_5723, i__5717_5725);
      var data_set_5727 = key_5726.call(null, (new cljs.core.Keyword("\ufdd0:data-sets")).call(null, this$));
      var class_5728 = function(seq__5714_5722, chunk__5715_5723, count__5716_5724, i__5717_5725, data_set_5727, key_5726) {
        return function(p1__5702_SHARP_) {
          return clojure.string.join.call(null, p1__5702_SHARP_, cljs.core.PersistentVector.fromArray(["scatter-point", cljs.core.name.call(null, key_5726)], true))
        }
      }(seq__5714_5722, chunk__5715_5723, count__5716_5724, i__5717_5725, data_set_5727, key_5726);
      var circles_5729 = canvas.selectAll([cljs.core.str("."), cljs.core.str(class_5728.call(null, "."))].join("")).data(cljs.core.to_array.call(null, key_5726.call(null, data)));
      lsc_web.plots.describe_BANG_.call(null, circles_5729.enter().append("circle"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", class_5728.call(null, " ")], true));
      lsc_web.plots.describe_BANG_.call(null, circles_5729.transition().duration(500), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:cx", function(seq__5714_5722, chunk__5715_5723, count__5716_5724, i__5717_5725, data_set_5727, class_5728, circles_5729, key_5726) {
        return function(p1__5703_SHARP_) {
          return x_scale.call(null, cljs.core.first.call(null, p1__5703_SHARP_))
        }
      }(seq__5714_5722, chunk__5715_5723, count__5716_5724, i__5717_5725, data_set_5727, class_5728, circles_5729, key_5726), "\ufdd0:cy", function(seq__5714_5722, chunk__5715_5723, count__5716_5724, i__5717_5725, data_set_5727, class_5728, circles_5729, key_5726) {
        return function(p1__5704_SHARP_) {
          return y_scale.call(null, cljs.core.second.call(null, p1__5704_SHARP_))
        }
      }(seq__5714_5722, chunk__5715_5723, count__5716_5724, i__5717_5725, data_set_5727, class_5728, circles_5729, key_5726), "\ufdd0:r", cljs.core.get.call(null, data_set_5727, "\ufdd0:marker-size", 2), "\ufdd0:stroke", "none", "\ufdd0:fill", cljs.core.get.call(null, data_set_5727, "\ufdd0:color", "black")], true));
      circles_5729.exit().remove();
      var G__5730 = seq__5714_5722;
      var G__5731 = chunk__5715_5723;
      var G__5732 = count__5716_5724;
      var G__5733 = i__5717_5725 + 1;
      seq__5714_5722 = G__5730;
      chunk__5715_5723 = G__5731;
      count__5716_5724 = G__5732;
      i__5717_5725 = G__5733;
      continue
    }else {
      var temp__4092__auto___5734 = cljs.core.seq.call(null, seq__5714_5722);
      if(temp__4092__auto___5734) {
        var seq__5714_5735__$1 = temp__4092__auto___5734;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__5714_5735__$1)) {
          var c__3073__auto___5736 = cljs.core.chunk_first.call(null, seq__5714_5735__$1);
          var G__5737 = cljs.core.chunk_rest.call(null, seq__5714_5735__$1);
          var G__5738 = c__3073__auto___5736;
          var G__5739 = cljs.core.count.call(null, c__3073__auto___5736);
          var G__5740 = 0;
          seq__5714_5722 = G__5737;
          chunk__5715_5723 = G__5738;
          count__5716_5724 = G__5739;
          i__5717_5725 = G__5740;
          continue
        }else {
          var key_5741 = cljs.core.first.call(null, seq__5714_5735__$1);
          var data_set_5742 = key_5741.call(null, (new cljs.core.Keyword("\ufdd0:data-sets")).call(null, this$));
          var class_5743 = function(seq__5714_5722, chunk__5715_5723, count__5716_5724, i__5717_5725, data_set_5742, key_5741, seq__5714_5735__$1, temp__4092__auto___5734) {
            return function(p1__5702_SHARP_) {
              return clojure.string.join.call(null, p1__5702_SHARP_, cljs.core.PersistentVector.fromArray(["scatter-point", cljs.core.name.call(null, key_5741)], true))
            }
          }(seq__5714_5722, chunk__5715_5723, count__5716_5724, i__5717_5725, data_set_5742, key_5741, seq__5714_5735__$1, temp__4092__auto___5734);
          var circles_5744 = canvas.selectAll([cljs.core.str("."), cljs.core.str(class_5743.call(null, "."))].join("")).data(cljs.core.to_array.call(null, key_5741.call(null, data)));
          lsc_web.plots.describe_BANG_.call(null, circles_5744.enter().append("circle"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", class_5743.call(null, " ")], true));
          lsc_web.plots.describe_BANG_.call(null, circles_5744.transition().duration(500), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:cx", function(seq__5714_5722, chunk__5715_5723, count__5716_5724, i__5717_5725, data_set_5742, class_5743, circles_5744, key_5741, seq__5714_5735__$1, temp__4092__auto___5734) {
            return function(p1__5703_SHARP_) {
              return x_scale.call(null, cljs.core.first.call(null, p1__5703_SHARP_))
            }
          }(seq__5714_5722, chunk__5715_5723, count__5716_5724, i__5717_5725, data_set_5742, class_5743, circles_5744, key_5741, seq__5714_5735__$1, temp__4092__auto___5734), "\ufdd0:cy", function(seq__5714_5722, chunk__5715_5723, count__5716_5724, i__5717_5725, data_set_5742, class_5743, circles_5744, key_5741, seq__5714_5735__$1, temp__4092__auto___5734) {
            return function(p1__5704_SHARP_) {
              return y_scale.call(null, cljs.core.second.call(null, p1__5704_SHARP_))
            }
          }(seq__5714_5722, chunk__5715_5723, count__5716_5724, i__5717_5725, data_set_5742, class_5743, circles_5744, key_5741, seq__5714_5735__$1, temp__4092__auto___5734), "\ufdd0:r", cljs.core.get.call(null, data_set_5742, "\ufdd0:marker-size", 2), "\ufdd0:stroke", "none", "\ufdd0:fill", cljs.core.get.call(null, data_set_5742, "\ufdd0:color", "black")], true));
          circles_5744.exit().remove();
          var G__5745 = cljs.core.next.call(null, seq__5714_5735__$1);
          var G__5746 = null;
          var G__5747 = 0;
          var G__5748 = 0;
          seq__5714_5722 = G__5745;
          chunk__5715_5723 = G__5746;
          count__5716_5724 = G__5747;
          i__5717_5725 = G__5748;
          continue
        }
      }else {
      }
    }
    break
  }
  return this$.lsc_web$plots$UpdateCanvas$update_BANG_$arity$2(this$, canvas)
};
lsc_web.plots.ScatterPlot.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2904__auto__) {
  var self__ = this;
  return 3 + cljs.core.count.call(null, self__.__extmap)
};
lsc_web.plots.ScatterPlot.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2896__auto__, other__2897__auto__) {
  var self__ = this;
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = other__2897__auto__;
    if(cljs.core.truth_(and__3941__auto__)) {
      var and__3941__auto____$1 = this__2896__auto__.constructor === other__2897__auto__.constructor;
      if(and__3941__auto____$1) {
        return cljs.core.equiv_map.call(null, this__2896__auto__, other__2897__auto__)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
lsc_web.plots.ScatterPlot.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2899__auto__, G__5705) {
  var self__ = this;
  return new lsc_web.plots.ScatterPlot(self__.axes, self__.legend, self__.data_sets, G__5705, self__.__extmap, self__.__hash)
};
lsc_web.plots.ScatterPlot.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2898__auto__) {
  var self__ = this;
  return self__.__meta
};
lsc_web.plots.ScatterPlot.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2909__auto__, k__2910__auto__) {
  var self__ = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0:axes", null, "\ufdd0:data-sets", null, "\ufdd0:legend", null], true), k__2910__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2909__auto__), self__.__meta), k__2910__auto__)
  }else {
    return new lsc_web.plots.ScatterPlot(self__.axes, self__.legend, self__.data_sets, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__2910__auto__)), null)
  }
};
lsc_web.plots.ScatterPlot.cljs$lang$type = true;
lsc_web.plots.ScatterPlot.cljs$lang$ctorPrSeq = function(this__2935__auto__) {
  return cljs.core.list.call(null, "lsc-web.plots/ScatterPlot")
};
lsc_web.plots.ScatterPlot.cljs$lang$ctorPrWriter = function(this__2935__auto__, writer__2936__auto__) {
  return cljs.core._write.call(null, writer__2936__auto__, "lsc-web.plots/ScatterPlot")
};
lsc_web.plots.__GT_ScatterPlot = function __GT_ScatterPlot(axes, legend, data_sets) {
  return new lsc_web.plots.ScatterPlot(axes, legend, data_sets)
};
lsc_web.plots.map__GT_ScatterPlot = function map__GT_ScatterPlot(G__5707) {
  return new lsc_web.plots.ScatterPlot((new cljs.core.Keyword("\ufdd0:axes")).call(null, G__5707), (new cljs.core.Keyword("\ufdd0:legend")).call(null, G__5707), (new cljs.core.Keyword("\ufdd0:data-sets")).call(null, G__5707), null, cljs.core.dissoc.call(null, G__5707, "\ufdd0:axes", "\ufdd0:legend", "\ufdd0:data-sets"))
};
lsc_web.plots.make_histogram = function() {
  var make_histogram = null;
  var make_histogram__1 = function(bins) {
    return lsc_web.plots.d3.layout.histogram().bins(cljs.core.to_array.call(null, bins)).frequency(false)
  };
  var make_histogram__2 = function(bins, accessor) {
    return make_histogram.call(null, bins).value(accessor)
  };
  make_histogram = function(bins, accessor) {
    switch(arguments.length) {
      case 1:
        return make_histogram__1.call(this, bins);
      case 2:
        return make_histogram__2.call(this, bins, accessor)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_histogram.cljs$core$IFn$_invoke$arity$1 = make_histogram__1;
  make_histogram.cljs$core$IFn$_invoke$arity$2 = make_histogram__2;
  return make_histogram
}();
lsc_web.plots.get_hist_length = function get_hist_length(datum, scale) {
  return Math.abs(scale.call(null, datum.x + datum.dx) - scale.call(null, datum.x))
};
goog.provide("lsc_web.plots.Histogram2D");
lsc_web.plots.Histogram2D = function(scales, x_bins, y_bins, __meta, __extmap) {
  this.scales = scales;
  this.x_bins = x_bins;
  this.y_bins = y_bins;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
lsc_web.plots.Histogram2D.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2895__auto__) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_imap.call(null, this__2895__auto__);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
lsc_web.plots.Histogram2D.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2900__auto__, k__2901__auto__) {
  var self__ = this;
  return this__2900__auto__.cljs$core$ILookup$_lookup$arity$3(this__2900__auto__, k__2901__auto__, null)
};
lsc_web.plots.Histogram2D.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2902__auto__, k5755, else__2903__auto__) {
  var self__ = this;
  if(k5755 === "\ufdd0:scales") {
    return self__.scales
  }else {
    if(k5755 === "\ufdd0:x-bins") {
      return self__.x_bins
    }else {
      if(k5755 === "\ufdd0:y-bins") {
        return self__.y_bins
      }else {
        if("\ufdd0:else") {
          return cljs.core.get.call(null, self__.__extmap, k5755, else__2903__auto__)
        }else {
          return null
        }
      }
    }
  }
};
lsc_web.plots.Histogram2D.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2907__auto__, k__2908__auto__, G__5754) {
  var self__ = this;
  var pred__5757 = cljs.core.identical_QMARK_;
  var expr__5758 = k__2908__auto__;
  if(pred__5757.call(null, "\ufdd0:scales", expr__5758)) {
    return new lsc_web.plots.Histogram2D(G__5754, self__.x_bins, self__.y_bins, self__.__meta, self__.__extmap, null)
  }else {
    if(pred__5757.call(null, "\ufdd0:x-bins", expr__5758)) {
      return new lsc_web.plots.Histogram2D(self__.scales, G__5754, self__.y_bins, self__.__meta, self__.__extmap, null)
    }else {
      if(pred__5757.call(null, "\ufdd0:y-bins", expr__5758)) {
        return new lsc_web.plots.Histogram2D(self__.scales, self__.x_bins, G__5754, self__.__meta, self__.__extmap, null)
      }else {
        return new lsc_web.plots.Histogram2D(self__.scales, self__.x_bins, self__.y_bins, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__2908__auto__, G__5754), null)
      }
    }
  }
};
lsc_web.plots.Histogram2D.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__2914__auto__, writer__2915__auto__, opts__2916__auto__) {
  var self__ = this;
  var pr_pair__2917__auto__ = function(keyval__2918__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__2915__auto__, cljs.core.pr_writer, "", " ", "", opts__2916__auto__, keyval__2918__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__2915__auto__, pr_pair__2917__auto__, "#lsc-web.plots.Histogram2D{", ", ", "}", opts__2916__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0:scales", self__.scales), cljs.core.vector.call(null, "\ufdd0:x-bins", self__.x_bins), cljs.core.vector.call(null, "\ufdd0:y-bins", self__.y_bins)], true), self__.__extmap))
};
lsc_web.plots.Histogram2D.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2905__auto__, entry__2906__auto__) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2906__auto__)) {
    return this__2905__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2905__auto__, cljs.core._nth.call(null, entry__2906__auto__, 0), cljs.core._nth.call(null, entry__2906__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2905__auto__, entry__2906__auto__)
  }
};
lsc_web.plots.Histogram2D.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2912__auto__) {
  var self__ = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0:scales", self__.scales), cljs.core.vector.call(null, "\ufdd0:x-bins", self__.x_bins), cljs.core.vector.call(null, "\ufdd0:y-bins", self__.y_bins)], true), self__.__extmap))
};
lsc_web.plots.Histogram2D.prototype.lsc_web$plots$Draw$ = true;
lsc_web.plots.Histogram2D.prototype.lsc_web$plots$Draw$draw_BANG_$arity$3 = function(this$, canvas, data) {
  var self__ = this;
  var map__5760 = lsc_web.plots.expand_to_canvas_size.call(null, self__.scales, canvas);
  var map__5760__$1 = cljs.core.seq_QMARK_.call(null, map__5760) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5760) : map__5760;
  var x_scale = cljs.core.get.call(null, map__5760__$1, "\ufdd0:x");
  var y_scale = cljs.core.get.call(null, map__5760__$1, "\ufdd0:y");
  var z_scale = (new cljs.core.Keyword("\ufdd0:z")).call(null, self__.scales);
  var x_hist = lsc_web.plots.make_histogram.call(null, self__.x_bins, cljs.core.first);
  var y_hist = lsc_web.plots.make_histogram.call(null, self__.y_bins, cljs.core.second);
  var x_data = x_hist.call(null, cljs.core.to_array.call(null, data));
  var x_groups = canvas.selectAll("g.histogram").data(x_data);
  lsc_web.plots.describe_BANG_.call(null, x_groups.enter().append("g"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", "histogram"], true));
  x_groups.exit().remove();
  lsc_web.plots.describe_BANG_.call(null, x_groups, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:transform", function(p1__5749_SHARP_) {
    return[cljs.core.str("translate("), cljs.core.str(Math.floor(x_scale.call(null, p1__5749_SHARP_.x))), cljs.core.str(",0)")].join("")
  }, "\ufdd0:width", function(p1__5750_SHARP_) {
    return lsc_web.plots.get_hist_length.call(null, p1__5750_SHARP_, x_scale)
  }], true));
  var rects = x_groups.selectAll("rect.histogram").data(y_hist);
  lsc_web.plots.describe_BANG_.call(null, rects.enter().append("rect"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", "histogram", "\ufdd0:x", 0, "\ufdd0:stroke", "none"], true));
  rects.exit().remove();
  return lsc_web.plots.describe_BANG_.call(null, rects, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:y", function(p1__5751_SHARP_) {
    return y_scale.call(null, p1__5751_SHARP_.x) - lsc_web.plots.get_hist_length.call(null, p1__5751_SHARP_, y_scale)
  }, "\ufdd0:height", function(p1__5752_SHARP_) {
    return lsc_web.plots.get_hist_length.call(null, p1__5752_SHARP_, y_scale)
  }, "\ufdd0:width", function() {
    var this$__$1 = this;
    return lsc_web.plots.d3.select(this$__$1.parentNode).attr("width")
  }, "\ufdd0:fill", function(p1__5753_SHARP_) {
    var this$__$1 = this;
    return z_scale.call(null, p1__5753_SHARP_.y * lsc_web.plots.d3.select(this$__$1.parentNode).datum().y)
  }], true))
};
lsc_web.plots.Histogram2D.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2904__auto__) {
  var self__ = this;
  return 3 + cljs.core.count.call(null, self__.__extmap)
};
lsc_web.plots.Histogram2D.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2896__auto__, other__2897__auto__) {
  var self__ = this;
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = other__2897__auto__;
    if(cljs.core.truth_(and__3941__auto__)) {
      var and__3941__auto____$1 = this__2896__auto__.constructor === other__2897__auto__.constructor;
      if(and__3941__auto____$1) {
        return cljs.core.equiv_map.call(null, this__2896__auto__, other__2897__auto__)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
lsc_web.plots.Histogram2D.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2899__auto__, G__5754) {
  var self__ = this;
  return new lsc_web.plots.Histogram2D(self__.scales, self__.x_bins, self__.y_bins, G__5754, self__.__extmap, self__.__hash)
};
lsc_web.plots.Histogram2D.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2898__auto__) {
  var self__ = this;
  return self__.__meta
};
lsc_web.plots.Histogram2D.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2909__auto__, k__2910__auto__) {
  var self__ = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0:x-bins", null, "\ufdd0:scales", null, "\ufdd0:y-bins", null], true), k__2910__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2909__auto__), self__.__meta), k__2910__auto__)
  }else {
    return new lsc_web.plots.Histogram2D(self__.scales, self__.x_bins, self__.y_bins, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__2910__auto__)), null)
  }
};
lsc_web.plots.Histogram2D.cljs$lang$type = true;
lsc_web.plots.Histogram2D.cljs$lang$ctorPrSeq = function(this__2935__auto__) {
  return cljs.core.list.call(null, "lsc-web.plots/Histogram2D")
};
lsc_web.plots.Histogram2D.cljs$lang$ctorPrWriter = function(this__2935__auto__, writer__2936__auto__) {
  return cljs.core._write.call(null, writer__2936__auto__, "lsc-web.plots/Histogram2D")
};
lsc_web.plots.__GT_Histogram2D = function __GT_Histogram2D(scales, x_bins, y_bins) {
  return new lsc_web.plots.Histogram2D(scales, x_bins, y_bins)
};
lsc_web.plots.map__GT_Histogram2D = function map__GT_Histogram2D(G__5756) {
  return new lsc_web.plots.Histogram2D((new cljs.core.Keyword("\ufdd0:scales")).call(null, G__5756), (new cljs.core.Keyword("\ufdd0:x-bins")).call(null, G__5756), (new cljs.core.Keyword("\ufdd0:y-bins")).call(null, G__5756), null, cljs.core.dissoc.call(null, G__5756, "\ufdd0:scales", "\ufdd0:x-bins", "\ufdd0:y-bins"))
};
goog.provide("lsc_web.cross");
goog.require("cljs.core");
goog.require("lsc_web.utils");
goog.require("lsc_web.plots");
goog.require("lsc_web.plots");
goog.require("lsc_web.utils");
goog.require("cljs.core.async");
lsc_web.cross.CrossFilter = {};
lsc_web.cross.dimension = function dimension(this$, func) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$CrossFilter$dimension$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$CrossFilter$dimension$arity$2(this$, func)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.dimension[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.dimension["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "CrossFilter.dimension", this$);
        }
      }
    }().call(null, this$, func)
  }
};
lsc_web.cross.add_BANG_ = function add_BANG_(this$, records) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$CrossFilter$add_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$CrossFilter$add_BANG_$arity$2(this$, records)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.add_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.add_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "CrossFilter.add!", this$);
        }
      }
    }().call(null, this$, records)
  }
};
lsc_web.cross.Top = {};
lsc_web.cross.top = function top(this$, k) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$Top$top$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$Top$top$arity$2(this$, k)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.top[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.top["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Top.top", this$);
        }
      }
    }().call(null, this$, k)
  }
};
lsc_web.cross.Remove = {};
lsc_web.cross.remove_BANG_ = function remove_BANG_(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$Remove$remove_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$Remove$remove_BANG_$arity$1(this$)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.remove_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.remove_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Remove.remove!", this$);
        }
      }
    }().call(null, this$)
  }
};
lsc_web.cross.Dimension = {};
lsc_web.cross.group = function group(this$, func) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$Dimension$group$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$Dimension$group$arity$2(this$, func)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.group[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.group["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Dimension.group", this$);
        }
      }
    }().call(null, this$, func)
  }
};
lsc_web.cross.get_dim_value = function get_dim_value(this$, obj) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$Dimension$get_dim_value$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$Dimension$get_dim_value$arity$2(this$, obj)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.get_dim_value[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.get_dim_value["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Dimension.get-dim-value", this$);
        }
      }
    }().call(null, this$, obj)
  }
};
lsc_web.cross.filter_value_BANG_ = function filter_value_BANG_(this$, value) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$Dimension$filter_value_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$Dimension$filter_value_BANG_$arity$2(this$, value)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.filter_value_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.filter_value_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Dimension.filter-value!", this$);
        }
      }
    }().call(null, this$, value)
  }
};
lsc_web.cross.filter_exact_BANG_ = function filter_exact_BANG_(this$, value) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$Dimension$filter_exact_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$Dimension$filter_exact_BANG_$arity$2(this$, value)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.filter_exact_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.filter_exact_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Dimension.filter-exact!", this$);
        }
      }
    }().call(null, this$, value)
  }
};
lsc_web.cross.filter_range_BANG_ = function filter_range_BANG_(this$, range) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$Dimension$filter_range_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$Dimension$filter_range_BANG_$arity$2(this$, range)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.filter_range_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.filter_range_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Dimension.filter-range!", this$);
        }
      }
    }().call(null, this$, range)
  }
};
lsc_web.cross.filter_func_BANG_ = function filter_func_BANG_(this$, func) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$Dimension$filter_func_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$Dimension$filter_func_BANG_$arity$2(this$, func)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.filter_func_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.filter_func_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Dimension.filter-func!", this$);
        }
      }
    }().call(null, this$, func)
  }
};
lsc_web.cross.filter_all_BANG_ = function filter_all_BANG_(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$Dimension$filter_all_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$Dimension$filter_all_BANG_$arity$1(this$)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.filter_all_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.filter_all_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Dimension.filter-all!", this$);
        }
      }
    }().call(null, this$)
  }
};
lsc_web.cross.bottom = function bottom(this$, k) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$Dimension$bottom$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$Dimension$bottom$arity$2(this$, k)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.bottom[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.bottom["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Dimension.bottom", this$);
        }
      }
    }().call(null, this$, k)
  }
};
lsc_web.cross.ReduceGroup = {};
lsc_web.cross.reduce_group_BANG_ = function reduce_group_BANG_(this$, add, remove, initial) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$ReduceGroup$reduce_group_BANG_$arity$4
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$ReduceGroup$reduce_group_BANG_$arity$4(this$, add, remove, initial)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.reduce_group_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.reduce_group_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ReduceGroup.reduce-group!", this$);
        }
      }
    }().call(null, this$, add, remove, initial)
  }
};
lsc_web.cross.GroupAll = {};
lsc_web.cross.group_all = function group_all(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$GroupAll$group_all$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$GroupAll$group_all$arity$1(this$)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.group_all[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.group_all["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "GroupAll.group-all", this$);
        }
      }
    }().call(null, this$)
  }
};
lsc_web.cross.AllGroup = {};
lsc_web.cross.get_value = function get_value(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$AllGroup$get_value$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$AllGroup$get_value$arity$1(this$)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.get_value[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.get_value["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "AllGroup.get-value", this$);
        }
      }
    }().call(null, this$)
  }
};
lsc_web.cross.Group = {};
lsc_web.cross.reduce_count_BANG_ = function reduce_count_BANG_(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$Group$reduce_count_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$Group$reduce_count_BANG_$arity$1(this$)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.reduce_count_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.reduce_count_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Group.reduce-count!", this$);
        }
      }
    }().call(null, this$)
  }
};
lsc_web.cross.reduce_sum_BANG_ = function reduce_sum_BANG_(this$, value_func) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$Group$reduce_sum_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$Group$reduce_sum_BANG_$arity$2(this$, value_func)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.reduce_sum_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.reduce_sum_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Group.reduce-sum!", this$);
        }
      }
    }().call(null, this$, value_func)
  }
};
lsc_web.cross.order_BANG_ = function order_BANG_(this$, order_value_func) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$Group$order_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$Group$order_BANG_$arity$2(this$, order_value_func)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.order_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.order_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Group.order!", this$);
        }
      }
    }().call(null, this$, order_value_func)
  }
};
lsc_web.cross.order_natural_BANG_ = function order_natural_BANG_(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$Group$order_natural_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$Group$order_natural_BANG_$arity$1(this$)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.order_natural_BANG_[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.order_natural_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Group.order-natural!", this$);
        }
      }
    }().call(null, this$)
  }
};
lsc_web.cross.get_all = function get_all(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$Group$get_all$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$Group$get_all$arity$1(this$)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.get_all[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.get_all["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Group.get-all", this$);
        }
      }
    }().call(null, this$)
  }
};
lsc_web.cross.HasDimension = {};
lsc_web.cross.get_dimension = function get_dimension(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$HasDimension$get_dimension$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$HasDimension$get_dimension$arity$1(this$)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.get_dimension[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.get_dimension["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "HasDimension.get-dimension", this$);
        }
      }
    }().call(null, this$)
  }
};
lsc_web.cross.make_all_group = function make_all_group(dimension, group_obj) {
  if(void 0 === lsc_web.cross.t5217) {
    goog.provide("lsc_web.cross.t5217");
    lsc_web.cross.t5217 = function(group_obj, dimension, make_all_group, meta5218) {
      this.group_obj = group_obj;
      this.dimension = dimension;
      this.make_all_group = make_all_group;
      this.meta5218 = meta5218;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    lsc_web.cross.t5217.cljs$lang$type = true;
    lsc_web.cross.t5217.cljs$lang$ctorStr = "lsc-web.cross/t5217";
    lsc_web.cross.t5217.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
      return cljs.core._write.call(null, writer__2883__auto__, "lsc-web.cross/t5217")
    };
    lsc_web.cross.t5217.prototype.lsc_web$cross$HasDimension$ = true;
    lsc_web.cross.t5217.prototype.lsc_web$cross$HasDimension$get_dimension$arity$1 = function(_) {
      var self__ = this;
      return self__.dimension
    };
    lsc_web.cross.t5217.prototype.lsc_web$cross$ReduceGroup$ = true;
    lsc_web.cross.t5217.prototype.lsc_web$cross$ReduceGroup$reduce_group_BANG_$arity$4 = function(_, add, remove, initial) {
      var self__ = this;
      return self__.group_obj.reduce(add, remove, initial)
    };
    lsc_web.cross.t5217.prototype.lsc_web$cross$AllGroup$ = true;
    lsc_web.cross.t5217.prototype.lsc_web$cross$AllGroup$get_value$arity$1 = function(_) {
      var self__ = this;
      return self__.group_obj.value()
    };
    lsc_web.cross.t5217.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5219) {
      var self__ = this;
      return self__.meta5218
    };
    lsc_web.cross.t5217.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5219, meta5218__$1) {
      var self__ = this;
      return new lsc_web.cross.t5217(self__.group_obj, self__.dimension, self__.make_all_group, meta5218__$1)
    }
  }else {
  }
  return new lsc_web.cross.t5217(group_obj, dimension, make_all_group, null)
};
lsc_web.cross.make_group = function make_group(dimension, group_obj) {
  if(void 0 === lsc_web.cross.t5223) {
    goog.provide("lsc_web.cross.t5223");
    lsc_web.cross.t5223 = function(group_obj, dimension, make_group, meta5224) {
      this.group_obj = group_obj;
      this.dimension = dimension;
      this.make_group = make_group;
      this.meta5224 = meta5224;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393218
    };
    lsc_web.cross.t5223.cljs$lang$type = true;
    lsc_web.cross.t5223.cljs$lang$ctorStr = "lsc-web.cross/t5223";
    lsc_web.cross.t5223.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
      return cljs.core._write.call(null, writer__2883__auto__, "lsc-web.cross/t5223")
    };
    lsc_web.cross.t5223.prototype.lsc_web$cross$HasDimension$ = true;
    lsc_web.cross.t5223.prototype.lsc_web$cross$HasDimension$get_dimension$arity$1 = function(_) {
      var self__ = this;
      return self__.dimension
    };
    lsc_web.cross.t5223.prototype.lsc_web$cross$Remove$ = true;
    lsc_web.cross.t5223.prototype.lsc_web$cross$Remove$remove_BANG_$arity$1 = function(_) {
      var self__ = this;
      return self__.group_obj.remove()
    };
    lsc_web.cross.t5223.prototype.lsc_web$cross$Top$ = true;
    lsc_web.cross.t5223.prototype.lsc_web$cross$Top$top$arity$2 = function(_, k) {
      var self__ = this;
      return self__.group_obj.top(k)
    };
    lsc_web.cross.t5223.prototype.lsc_web$cross$Group$ = true;
    lsc_web.cross.t5223.prototype.lsc_web$cross$Group$reduce_count_BANG_$arity$1 = function(_) {
      var self__ = this;
      return self__.group_obj.reduceCount()
    };
    lsc_web.cross.t5223.prototype.lsc_web$cross$Group$reduce_sum_BANG_$arity$2 = function(_, value_func) {
      var self__ = this;
      return self__.group_obj.reduceSum(value_func)
    };
    lsc_web.cross.t5223.prototype.lsc_web$cross$Group$order_BANG_$arity$2 = function(_, order_value_func) {
      var self__ = this;
      return self__.group_obj.order(order_value_func)
    };
    lsc_web.cross.t5223.prototype.lsc_web$cross$Group$order_natural_BANG_$arity$1 = function(_) {
      var self__ = this;
      return self__.group_obj.orderNatural()
    };
    lsc_web.cross.t5223.prototype.lsc_web$cross$Group$get_all$arity$1 = function(_) {
      var self__ = this;
      return self__.group_obj.all()
    };
    lsc_web.cross.t5223.prototype.lsc_web$cross$ReduceGroup$ = true;
    lsc_web.cross.t5223.prototype.lsc_web$cross$ReduceGroup$reduce_group_BANG_$arity$4 = function(_, add, remove, initial) {
      var self__ = this;
      return self__.group_obj.reduce(add, remove, initial)
    };
    lsc_web.cross.t5223.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
      var self__ = this;
      return self__.group_obj.size()
    };
    lsc_web.cross.t5223.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5225) {
      var self__ = this;
      return self__.meta5224
    };
    lsc_web.cross.t5223.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5225, meta5224__$1) {
      var self__ = this;
      return new lsc_web.cross.t5223(self__.group_obj, self__.dimension, self__.make_group, meta5224__$1)
    }
  }else {
  }
  return new lsc_web.cross.t5223(group_obj, dimension, make_group, null)
};
lsc_web.cross.make_dimension = function make_dimension(dim_obj, func) {
  if(void 0 === lsc_web.cross.t5229) {
    goog.provide("lsc_web.cross.t5229");
    lsc_web.cross.t5229 = function(func, dim_obj, make_dimension, meta5230) {
      this.func = func;
      this.dim_obj = dim_obj;
      this.make_dimension = make_dimension;
      this.meta5230 = meta5230;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    lsc_web.cross.t5229.cljs$lang$type = true;
    lsc_web.cross.t5229.cljs$lang$ctorStr = "lsc-web.cross/t5229";
    lsc_web.cross.t5229.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
      return cljs.core._write.call(null, writer__2883__auto__, "lsc-web.cross/t5229")
    };
    lsc_web.cross.t5229.prototype.lsc_web$cross$Remove$ = true;
    lsc_web.cross.t5229.prototype.lsc_web$cross$Remove$remove_BANG_$arity$1 = function(_) {
      var self__ = this;
      return self__.dim_obj.remove()
    };
    lsc_web.cross.t5229.prototype.lsc_web$cross$Top$ = true;
    lsc_web.cross.t5229.prototype.lsc_web$cross$Top$top$arity$2 = function(_, k) {
      var self__ = this;
      return self__.dim_obj.top(k)
    };
    lsc_web.cross.t5229.prototype.lsc_web$cross$GroupAll$ = true;
    lsc_web.cross.t5229.prototype.lsc_web$cross$GroupAll$group_all_BANG_$arity$1 = function(this$) {
      var self__ = this;
      return lsc_web.cross.make_all_group.call(null, this$, self__.dim_obj.groupAll())
    };
    lsc_web.cross.t5229.prototype.lsc_web$cross$Dimension$ = true;
    lsc_web.cross.t5229.prototype.lsc_web$cross$Dimension$get_dim_value$arity$2 = function(_, obj) {
      var self__ = this;
      return self__.func.call(null, obj)
    };
    lsc_web.cross.t5229.prototype.lsc_web$cross$Dimension$group$arity$2 = function(this$, group_func) {
      var self__ = this;
      return lsc_web.cross.make_group.call(null, this$, self__.dim_obj.group(group_func))
    };
    lsc_web.cross.t5229.prototype.lsc_web$cross$Dimension$filter_value_BANG_$arity$2 = function(_, value) {
      var self__ = this;
      return self__.dim_obj.filter(value)
    };
    lsc_web.cross.t5229.prototype.lsc_web$cross$Dimension$filter_exact_BANG_$arity$2 = function(_, value) {
      var self__ = this;
      return self__.dim_obj.filterExact(value)
    };
    lsc_web.cross.t5229.prototype.lsc_web$cross$Dimension$filter_range_BANG_$arity$2 = function(_, range) {
      var self__ = this;
      return self__.dim_obj.filterRange(cljs.core.to_array.call(null, range))
    };
    lsc_web.cross.t5229.prototype.lsc_web$cross$Dimension$filter_func_BANG_$arity$2 = function(_, func__$2) {
      var self__ = this;
      return self__.dim_obj.filterFunction(func__$2)
    };
    lsc_web.cross.t5229.prototype.lsc_web$cross$Dimension$filter_all_BANG_$arity$1 = function(_) {
      var self__ = this;
      return self__.dim_obj.filterAll()
    };
    lsc_web.cross.t5229.prototype.lsc_web$cross$Dimension$bottom$arity$2 = function(_, k) {
      var self__ = this;
      return self__.dim_obj.bottom(k)
    };
    lsc_web.cross.t5229.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5231) {
      var self__ = this;
      return self__.meta5230
    };
    lsc_web.cross.t5229.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5231, meta5230__$1) {
      var self__ = this;
      return new lsc_web.cross.t5229(self__.func, self__.dim_obj, self__.make_dimension, meta5230__$1)
    }
  }else {
  }
  return new lsc_web.cross.t5229(func, dim_obj, make_dimension, null)
};
lsc_web.cross.cross = function cross(data) {
  var cross_obj = crossfilter(cljs.core.to_array.call(null, data));
  if(void 0 === lsc_web.cross.t5235) {
    goog.provide("lsc_web.cross.t5235");
    lsc_web.cross.t5235 = function(cross_obj, data, cross, meta5236) {
      this.cross_obj = cross_obj;
      this.data = data;
      this.cross = cross;
      this.meta5236 = meta5236;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393218
    };
    lsc_web.cross.t5235.cljs$lang$type = true;
    lsc_web.cross.t5235.cljs$lang$ctorStr = "lsc-web.cross/t5235";
    lsc_web.cross.t5235.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
      return cljs.core._write.call(null, writer__2883__auto__, "lsc-web.cross/t5235")
    };
    lsc_web.cross.t5235.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
      var self__ = this;
      return self__.cross_obj.size()
    };
    lsc_web.cross.t5235.prototype.lsc_web$cross$GroupAll$ = true;
    lsc_web.cross.t5235.prototype.lsc_web$cross$GroupAll$group_all$arity$1 = function(_) {
      var self__ = this;
      return lsc_web.cross.make_all_group.call(null, null, self__.cross_obj.groupAll())
    };
    lsc_web.cross.t5235.prototype.lsc_web$cross$CrossFilter$ = true;
    lsc_web.cross.t5235.prototype.lsc_web$cross$CrossFilter$dimension$arity$2 = function(_, func) {
      var self__ = this;
      return lsc_web.cross.make_dimension.call(null, self__.cross_obj.dimension(func), func)
    };
    lsc_web.cross.t5235.prototype.lsc_web$cross$CrossFilter$add_BANG_$arity$2 = function(_, records) {
      var self__ = this;
      return self__.cross_obj.add(cljs.core.to_array.call(null, records))
    };
    lsc_web.cross.t5235.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5237) {
      var self__ = this;
      return self__.meta5236
    };
    lsc_web.cross.t5235.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5237, meta5236__$1) {
      var self__ = this;
      return new lsc_web.cross.t5235(self__.cross_obj, self__.data, self__.cross, meta5236__$1)
    }
  }else {
  }
  return new lsc_web.cross.t5235(cross_obj, data, cross, null)
};
lsc_web.cross.Size = {};
lsc_web.cross.size = function size(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$Size$size$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$Size$size$arity$1(this$)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.size[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.size["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Size.size", this$);
        }
      }
    }().call(null, this$)
  }
};
lsc_web.cross.BarView = {};
lsc_web.cross.__GT_group = function __GT_group(this$, dimension) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$BarView$__GT_group$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$BarView$__GT_group$arity$2(this$, dimension)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.__GT_group[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.__GT_group["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "BarView.->group", this$);
        }
      }
    }().call(null, this$, dimension)
  }
};
lsc_web.cross.ungroup = function ungroup(this$, x) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$BarView$ungroup$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$BarView$ungroup$arity$2(this$, x)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.ungroup[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.ungroup["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "BarView.ungroup", this$);
        }
      }
    }().call(null, this$, x)
  }
};
lsc_web.cross.x_scale = function x_scale(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$BarView$x_scale$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$BarView$x_scale$arity$1(this$)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.x_scale[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.x_scale["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "BarView.x-scale", this$);
        }
      }
    }().call(null, this$)
  }
};
lsc_web.cross.x_delta = function x_delta(this$, x) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$BarView$x_delta$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$BarView$x_delta$arity$2(this$, x)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.x_delta[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.x_delta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "BarView.x-delta", this$);
        }
      }
    }().call(null, this$, x)
  }
};
lsc_web.cross.ColumnView = {};
lsc_web.cross.format_value = function format_value(this$, value) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$ColumnView$format_value$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$ColumnView$format_value$arity$2(this$, value)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.format_value[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.format_value["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ColumnView.format-value", this$);
        }
      }
    }().call(null, this$, value)
  }
};
lsc_web.cross.describe_elem = function describe_elem(this$, elem, value) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.lsc_web$cross$ColumnView$describe_elem$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.lsc_web$cross$ColumnView$describe_elem$arity$3(this$, elem, value)
  }else {
    var x__2942__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = lsc_web.cross.describe_elem[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = lsc_web.cross.describe_elem["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ColumnView.describe-elem", this$);
        }
      }
    }().call(null, this$, elem, value)
  }
};
lsc_web.cross.sizes = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:small", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", 250, "\ufdd0:y", 250], true), "\ufdd0:medium", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", 500, "\ufdd0:y", 250], true), "\ufdd0:large", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", 1E3, "\ufdd0:y", 250], true)], true);
lsc_web.cross.data_set = function() {
  var data_set__delegate = function(cross, fields) {
    return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:cross", cross, "\ufdd0:fields", cljs.core.mapcat.call(null, function(p1__5238_SHARP_) {
      if(function() {
        var or__3943__auto__ = cljs.core.vector_QMARK_.call(null, p1__5238_SHARP_);
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core.list_QMARK_.call(null, p1__5238_SHARP_)
        }
      }()) {
        return p1__5238_SHARP_
      }else {
        return cljs.core.PersistentVector.fromArray([p1__5238_SHARP_], true)
      }
    }, fields)], true)
  };
  var data_set = function(cross, var_args) {
    var fields = null;
    if(arguments.length > 1) {
      fields = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return data_set__delegate.call(this, cross, fields)
  };
  data_set.cljs$lang$maxFixedArity = 1;
  data_set.cljs$lang$applyTo = function(arglist__5239) {
    var cross = cljs.core.first(arglist__5239);
    var fields = cljs.core.rest(arglist__5239);
    return data_set__delegate(cross, fields)
  };
  data_set.cljs$core$IFn$_invoke$arity$variadic = data_set__delegate;
  return data_set
}();
lsc_web.cross.field = function() {
  var field__delegate = function(p__5240) {
    var map__5242 = p__5240;
    var map__5242__$1 = cljs.core.seq_QMARK_.call(null, map__5242) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5242) : map__5242;
    var views = cljs.core.get.call(null, map__5242__$1, "\ufdd0:views");
    var dimension = cljs.core.get.call(null, map__5242__$1, "\ufdd0:dimension");
    var name = cljs.core.get.call(null, map__5242__$1, "\ufdd0:name");
    return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:name", name, "\ufdd0:dimension", dimension, "\ufdd0:views", views], true)
  };
  var field = function(var_args) {
    var p__5240 = null;
    if(arguments.length > 0) {
      p__5240 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return field__delegate.call(this, p__5240)
  };
  field.cljs$lang$maxFixedArity = 0;
  field.cljs$lang$applyTo = function(arglist__5243) {
    var p__5240 = cljs.core.seq(arglist__5243);
    return field__delegate(p__5240)
  };
  field.cljs$core$IFn$_invoke$arity$variadic = field__delegate;
  return field
}();
lsc_web.cross.time_bar_view = function() {
  var time_bar_view__delegate = function(p__5245) {
    var map__5251 = p__5245;
    var map__5251__$1 = cljs.core.seq_QMARK_.call(null, map__5251) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5251) : map__5251;
    var size = cljs.core.get.call(null, map__5251__$1, "\ufdd0:size", "\ufdd0:medium");
    var ungrouping = cljs.core.get.call(null, map__5251__$1, "\ufdd0:ungrouping", cljs.core.identity);
    var grouping = cljs.core.get.call(null, map__5251__$1, "\ufdd0:grouping", "\ufdd0:hour");
    var domain = cljs.core.get.call(null, map__5251__$1, "\ufdd0:domain");
    if(void 0 === lsc_web.cross.t5252) {
      goog.provide("lsc_web.cross.t5252");
      lsc_web.cross.t5252 = function(domain, grouping, ungrouping, size, map__5251, p__5245, time_bar_view, meta5253) {
        this.domain = domain;
        this.grouping = grouping;
        this.ungrouping = ungrouping;
        this.size = size;
        this.map__5251 = map__5251;
        this.p__5245 = p__5245;
        this.time_bar_view = time_bar_view;
        this.meta5253 = meta5253;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      lsc_web.cross.t5252.cljs$lang$type = true;
      lsc_web.cross.t5252.cljs$lang$ctorStr = "lsc-web.cross/t5252";
      lsc_web.cross.t5252.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
        return cljs.core._write.call(null, writer__2883__auto__, "lsc-web.cross/t5252")
      };
      lsc_web.cross.t5252.prototype.lsc_web$cross$BarView$ = true;
      lsc_web.cross.t5252.prototype.lsc_web$cross$BarView$__GT_group$arity$2 = function(_, dimension) {
        var self__ = this;
        return lsc_web.cross.group.call(null, dimension, lsc_web.plots.d3.time[cljs.core.name.call(null, self__.grouping)])
      };
      lsc_web.cross.t5252.prototype.lsc_web$cross$BarView$ungroup$arity$2 = function(_, x) {
        var self__ = this;
        return self__.ungrouping.call(null, x)
      };
      lsc_web.cross.t5252.prototype.lsc_web$cross$BarView$x_scale$arity$1 = function(_) {
        var self__ = this;
        return lsc_web.plots.scale.call(null, self__.domain, "\ufdd0:clamp", true, "\ufdd0:type", "\ufdd0:time")
      };
      lsc_web.cross.t5252.prototype.lsc_web$cross$BarView$x_delta$arity$2 = function(_, x) {
        var self__ = this;
        return new Date(x.getTime() + function() {
          var G__5255 = self__.grouping;
          if(cljs.core._EQ_.call(null, "\ufdd0:day", G__5255)) {
            return 24 * 60 * 60 * 1E3
          }else {
            if(cljs.core._EQ_.call(null, "\ufdd0:hour", G__5255)) {
              return 60 * 60 * 1E3
            }else {
              if(cljs.core._EQ_.call(null, "\ufdd0:minute", G__5255)) {
                return 60 * 1E3
              }else {
                if(cljs.core._EQ_.call(null, "\ufdd0:second", G__5255)) {
                  return 1E3
                }else {
                  if("\ufdd0:else") {
                    throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(self__.grouping)].join(""));
                  }else {
                    return null
                  }
                }
              }
            }
          }
        }())
      };
      lsc_web.cross.t5252.prototype.lsc_web$cross$Size$ = true;
      lsc_web.cross.t5252.prototype.lsc_web$cross$Size$size$arity$1 = function(_) {
        var self__ = this;
        return self__.size.call(null, lsc_web.cross.sizes)
      };
      lsc_web.cross.t5252.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5254) {
        var self__ = this;
        return self__.meta5253
      };
      lsc_web.cross.t5252.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5254, meta5253__$1) {
        var self__ = this;
        return new lsc_web.cross.t5252(self__.domain, self__.grouping, self__.ungrouping, self__.size, self__.map__5251, self__.p__5245, self__.time_bar_view, meta5253__$1)
      }
    }else {
    }
    return new lsc_web.cross.t5252(domain, grouping, ungrouping, size, map__5251__$1, p__5245, time_bar_view, null)
  };
  var time_bar_view = function(var_args) {
    var p__5245 = null;
    if(arguments.length > 0) {
      p__5245 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return time_bar_view__delegate.call(this, p__5245)
  };
  time_bar_view.cljs$lang$maxFixedArity = 0;
  time_bar_view.cljs$lang$applyTo = function(arglist__5256) {
    var p__5245 = cljs.core.seq(arglist__5256);
    return time_bar_view__delegate(p__5245)
  };
  time_bar_view.cljs$core$IFn$_invoke$arity$variadic = time_bar_view__delegate;
  return time_bar_view
}();
lsc_web.cross.bar_view = function() {
  var bar_view__delegate = function(p__5257) {
    var map__5262 = p__5257;
    var map__5262__$1 = cljs.core.seq_QMARK_.call(null, map__5262) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5262) : map__5262;
    var size = cljs.core.get.call(null, map__5262__$1, "\ufdd0:size", "\ufdd0:medium");
    var bar_width = cljs.core.get.call(null, map__5262__$1, "\ufdd0:bar-width", 1);
    var domain = cljs.core.get.call(null, map__5262__$1, "\ufdd0:domain");
    if(void 0 === lsc_web.cross.t5263) {
      goog.provide("lsc_web.cross.t5263");
      lsc_web.cross.t5263 = function(domain, bar_width, size, map__5262, p__5257, bar_view, meta5264) {
        this.domain = domain;
        this.bar_width = bar_width;
        this.size = size;
        this.map__5262 = map__5262;
        this.p__5257 = p__5257;
        this.bar_view = bar_view;
        this.meta5264 = meta5264;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      lsc_web.cross.t5263.cljs$lang$type = true;
      lsc_web.cross.t5263.cljs$lang$ctorStr = "lsc-web.cross/t5263";
      lsc_web.cross.t5263.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
        return cljs.core._write.call(null, writer__2883__auto__, "lsc-web.cross/t5263")
      };
      lsc_web.cross.t5263.prototype.lsc_web$cross$BarView$ = true;
      lsc_web.cross.t5263.prototype.lsc_web$cross$BarView$__GT_group$arity$2 = function(_, dimension) {
        var self__ = this;
        return lsc_web.cross.group.call(null, dimension, function(p1__5244_SHARP_) {
          return lsc_web.utils.floor.call(null, (cljs.core.first.call(null, self__.domain) > (cljs.core.second.call(null, self__.domain) < p1__5244_SHARP_ ? cljs.core.second.call(null, self__.domain) : p1__5244_SHARP_) ? cljs.core.first.call(null, self__.domain) : cljs.core.second.call(null, self__.domain) < p1__5244_SHARP_ ? cljs.core.second.call(null, self__.domain) : p1__5244_SHARP_) / self__.bar_width)
        })
      };
      lsc_web.cross.t5263.prototype.lsc_web$cross$BarView$ungroup$arity$2 = function(_, x) {
        var self__ = this;
        return x * self__.bar_width
      };
      lsc_web.cross.t5263.prototype.lsc_web$cross$BarView$x_scale$arity$1 = function(_) {
        var self__ = this;
        return lsc_web.plots.scale.call(null, self__.domain, "\ufdd0:clamp", true)
      };
      lsc_web.cross.t5263.prototype.lsc_web$cross$BarView$x_delta$arity$2 = function(_, x) {
        var self__ = this;
        return x + self__.bar_width
      };
      lsc_web.cross.t5263.prototype.lsc_web$cross$Size$ = true;
      lsc_web.cross.t5263.prototype.lsc_web$cross$Size$size$arity$1 = function(_) {
        var self__ = this;
        return self__.size.call(null, lsc_web.cross.sizes)
      };
      lsc_web.cross.t5263.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5265) {
        var self__ = this;
        return self__.meta5264
      };
      lsc_web.cross.t5263.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5265, meta5264__$1) {
        var self__ = this;
        return new lsc_web.cross.t5263(self__.domain, self__.bar_width, self__.size, self__.map__5262, self__.p__5257, self__.bar_view, meta5264__$1)
      }
    }else {
    }
    return new lsc_web.cross.t5263(domain, bar_width, size, map__5262__$1, p__5257, bar_view, null)
  };
  var bar_view = function(var_args) {
    var p__5257 = null;
    if(arguments.length > 0) {
      p__5257 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return bar_view__delegate.call(this, p__5257)
  };
  bar_view.cljs$lang$maxFixedArity = 0;
  bar_view.cljs$lang$applyTo = function(arglist__5266) {
    var p__5257 = cljs.core.seq(arglist__5266);
    return bar_view__delegate(p__5257)
  };
  bar_view.cljs$core$IFn$_invoke$arity$variadic = bar_view__delegate;
  return bar_view
}();
lsc_web.cross.column_view = function() {
  var column_view__delegate = function(p__5270) {
    var map__5275 = p__5270;
    var map__5275__$1 = cljs.core.seq_QMARK_.call(null, map__5275) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5275) : map__5275;
    var describe = cljs.core.get.call(null, map__5275__$1, "\ufdd0:describe", function(map__5275, map__5275__$1) {
      return function(_, ___$1) {
        return null
      }
    }(map__5275, map__5275__$1));
    var width = cljs.core.get.call(null, map__5275__$1, "\ufdd0:width", 50);
    var format = cljs.core.get.call(null, map__5275__$1, "\ufdd0:format", cljs.core.str);
    if(void 0 === lsc_web.cross.t5276) {
      goog.provide("lsc_web.cross.t5276");
      lsc_web.cross.t5276 = function(format, width, describe, map__5275, p__5270, column_view, meta5277) {
        this.format = format;
        this.width = width;
        this.describe = describe;
        this.map__5275 = map__5275;
        this.p__5270 = p__5270;
        this.column_view = column_view;
        this.meta5277 = meta5277;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      lsc_web.cross.t5276.cljs$lang$type = true;
      lsc_web.cross.t5276.cljs$lang$ctorStr = "lsc-web.cross/t5276";
      lsc_web.cross.t5276.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
        return cljs.core._write.call(null, writer__2883__auto__, "lsc-web.cross/t5276")
      };
      lsc_web.cross.t5276.prototype.lsc_web$cross$ColumnView$ = true;
      lsc_web.cross.t5276.prototype.lsc_web$cross$ColumnView$format_value$arity$2 = function(_, value) {
        var self__ = this;
        return self__.format.call(null, value)
      };
      lsc_web.cross.t5276.prototype.lsc_web$cross$ColumnView$describe_elem$arity$3 = function(_, elem, value) {
        var self__ = this;
        return self__.describe.call(null, elem, value)
      };
      lsc_web.cross.t5276.prototype.lsc_web$cross$Size$ = true;
      lsc_web.cross.t5276.prototype.lsc_web$cross$Size$size$arity$1 = function(_) {
        var self__ = this;
        return self__.width
      };
      lsc_web.cross.t5276.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5278) {
        var self__ = this;
        return self__.meta5277
      };
      lsc_web.cross.t5276.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5278, meta5277__$1) {
        var self__ = this;
        return new lsc_web.cross.t5276(self__.format, self__.width, self__.describe, self__.map__5275, self__.p__5270, self__.column_view, meta5277__$1)
      }
    }else {
    }
    return new lsc_web.cross.t5276(format, width, describe, map__5275__$1, p__5270, column_view, null)
  };
  var column_view = function(var_args) {
    var p__5270 = null;
    if(arguments.length > 0) {
      p__5270 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return column_view__delegate.call(this, p__5270)
  };
  column_view.cljs$lang$maxFixedArity = 0;
  column_view.cljs$lang$applyTo = function(arglist__5279) {
    var p__5270 = cljs.core.seq(arglist__5279);
    return column_view__delegate(p__5270)
  };
  column_view.cljs$core$IFn$_invoke$arity$variadic = column_view__delegate;
  return column_view
}();
goog.provide("lsc_web.cross.BarPlot");
lsc_web.cross.BarPlot = function(scales, view, background, __meta, __extmap) {
  this.scales = scales;
  this.view = view;
  this.background = background;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
lsc_web.cross.BarPlot.prototype.lsc_web$plots$Draw$ = true;
lsc_web.cross.BarPlot.prototype.lsc_web$plots$Draw$draw_BANG_$arity$3 = function(this$, canvas, data) {
  var self__ = this;
  var map__5283 = lsc_web.plots.expand_to_canvas_size.call(null, self__.scales, canvas);
  var map__5283__$1 = cljs.core.seq_QMARK_.call(null, map__5283) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5283) : map__5283;
  var y = cljs.core.get.call(null, map__5283__$1, "\ufdd0:y");
  var x = cljs.core.get.call(null, map__5283__$1, "\ufdd0:x");
  var rects = canvas.selectAll("rect.bar").data(cljs.core.to_array.call(null, data));
  if(cljs.core.count.call(null, data) > 0) {
    lsc_web.plots.describe_BANG_.call(null, rects.enter().append("rect"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", "bar", "\ufdd0:width", function() {
      var first_x = cljs.core.first.call(null, cljs.core.first.call(null, data));
      return x.call(null, lsc_web.cross.x_delta.call(null, self__.view, first_x)) - x.call(null, first_x) - 2
    }(), "\ufdd0:fill", cljs.core.truth_(self__.background) ? "gray" : "steelblue", "\ufdd0:opacity", cljs.core.truth_(self__.background) ? 0.1 : 1, "\ufdd0:shape-rendering", "crispEdge"], true));
    lsc_web.plots.describe_BANG_.call(null, rects, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", function(p1__5267_SHARP_) {
      return x.call(null, cljs.core.first.call(null, p1__5267_SHARP_)) + 1
    }, "\ufdd0:y", function(p1__5268_SHARP_) {
      return y.call(null, cljs.core.second.call(null, p1__5268_SHARP_))
    }, "\ufdd0:height", function(p1__5269_SHARP_) {
      return y.call(null, 0) - y.call(null, cljs.core.second.call(null, p1__5269_SHARP_))
    }], true))
  }else {
  }
  return rects.exit().remove()
};
lsc_web.cross.BarPlot.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2895__auto__) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_imap.call(null, this__2895__auto__);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
lsc_web.cross.BarPlot.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2900__auto__, k__2901__auto__) {
  var self__ = this;
  return this__2900__auto__.cljs$core$ILookup$_lookup$arity$3(this__2900__auto__, k__2901__auto__, null)
};
lsc_web.cross.BarPlot.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2902__auto__, k5281, else__2903__auto__) {
  var self__ = this;
  if(k5281 === "\ufdd0:scales") {
    return self__.scales
  }else {
    if(k5281 === "\ufdd0:view") {
      return self__.view
    }else {
      if(k5281 === "\ufdd0:background") {
        return self__.background
      }else {
        if("\ufdd0:else") {
          return cljs.core.get.call(null, self__.__extmap, k5281, else__2903__auto__)
        }else {
          return null
        }
      }
    }
  }
};
lsc_web.cross.BarPlot.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2907__auto__, k__2908__auto__, G__5280) {
  var self__ = this;
  var pred__5284 = cljs.core.identical_QMARK_;
  var expr__5285 = k__2908__auto__;
  if(pred__5284.call(null, "\ufdd0:scales", expr__5285)) {
    return new lsc_web.cross.BarPlot(G__5280, self__.view, self__.background, self__.__meta, self__.__extmap, null)
  }else {
    if(pred__5284.call(null, "\ufdd0:view", expr__5285)) {
      return new lsc_web.cross.BarPlot(self__.scales, G__5280, self__.background, self__.__meta, self__.__extmap, null)
    }else {
      if(pred__5284.call(null, "\ufdd0:background", expr__5285)) {
        return new lsc_web.cross.BarPlot(self__.scales, self__.view, G__5280, self__.__meta, self__.__extmap, null)
      }else {
        return new lsc_web.cross.BarPlot(self__.scales, self__.view, self__.background, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__2908__auto__, G__5280), null)
      }
    }
  }
};
lsc_web.cross.BarPlot.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__2914__auto__, writer__2915__auto__, opts__2916__auto__) {
  var self__ = this;
  var pr_pair__2917__auto__ = function(keyval__2918__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__2915__auto__, cljs.core.pr_writer, "", " ", "", opts__2916__auto__, keyval__2918__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__2915__auto__, pr_pair__2917__auto__, "#lsc-web.cross.BarPlot{", ", ", "}", opts__2916__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0:scales", self__.scales), cljs.core.vector.call(null, "\ufdd0:view", self__.view), cljs.core.vector.call(null, "\ufdd0:background", self__.background)], true), self__.__extmap))
};
lsc_web.cross.BarPlot.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2905__auto__, entry__2906__auto__) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2906__auto__)) {
    return this__2905__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2905__auto__, cljs.core._nth.call(null, entry__2906__auto__, 0), cljs.core._nth.call(null, entry__2906__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2905__auto__, entry__2906__auto__)
  }
};
lsc_web.cross.BarPlot.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2912__auto__) {
  var self__ = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0:scales", self__.scales), cljs.core.vector.call(null, "\ufdd0:view", self__.view), cljs.core.vector.call(null, "\ufdd0:background", self__.background)], true), self__.__extmap))
};
lsc_web.cross.BarPlot.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2904__auto__) {
  var self__ = this;
  return 3 + cljs.core.count.call(null, self__.__extmap)
};
lsc_web.cross.BarPlot.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2896__auto__, other__2897__auto__) {
  var self__ = this;
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = other__2897__auto__;
    if(cljs.core.truth_(and__3941__auto__)) {
      var and__3941__auto____$1 = this__2896__auto__.constructor === other__2897__auto__.constructor;
      if(and__3941__auto____$1) {
        return cljs.core.equiv_map.call(null, this__2896__auto__, other__2897__auto__)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
lsc_web.cross.BarPlot.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2899__auto__, G__5280) {
  var self__ = this;
  return new lsc_web.cross.BarPlot(self__.scales, self__.view, self__.background, G__5280, self__.__extmap, self__.__hash)
};
lsc_web.cross.BarPlot.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2898__auto__) {
  var self__ = this;
  return self__.__meta
};
lsc_web.cross.BarPlot.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2909__auto__, k__2910__auto__) {
  var self__ = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0:view", null, "\ufdd0:background", null, "\ufdd0:scales", null], true), k__2910__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2909__auto__), self__.__meta), k__2910__auto__)
  }else {
    return new lsc_web.cross.BarPlot(self__.scales, self__.view, self__.background, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__2910__auto__)), null)
  }
};
lsc_web.cross.BarPlot.cljs$lang$type = true;
lsc_web.cross.BarPlot.cljs$lang$ctorPrSeq = function(this__2935__auto__) {
  return cljs.core.list.call(null, "lsc-web.cross/BarPlot")
};
lsc_web.cross.BarPlot.cljs$lang$ctorPrWriter = function(this__2935__auto__, writer__2936__auto__) {
  return cljs.core._write.call(null, writer__2936__auto__, "lsc-web.cross/BarPlot")
};
lsc_web.cross.__GT_BarPlot = function __GT_BarPlot(scales, view, background) {
  return new lsc_web.cross.BarPlot(scales, view, background)
};
lsc_web.cross.map__GT_BarPlot = function map__GT_BarPlot(G__5282) {
  return new lsc_web.cross.BarPlot((new cljs.core.Keyword("\ufdd0:scales")).call(null, G__5282), (new cljs.core.Keyword("\ufdd0:view")).call(null, G__5282), (new cljs.core.Keyword("\ufdd0:background")).call(null, G__5282), null, cljs.core.dissoc.call(null, G__5282, "\ufdd0:scales", "\ufdd0:view", "\ufdd0:background"))
};
lsc_web.cross.make_bar_brush = function make_bar_brush(canvas, scales, props) {
  var expanded = lsc_web.plots.expand_to_canvas_size.call(null, scales, canvas);
  var bar_group = canvas.append("g");
  var brush = lsc_web.plots.d3.svg.brush().x((new cljs.core.Keyword("\ufdd0:x")).call(null, expanded)).clamp(true);
  var redraw_brush_BANG_ = function(expanded, bar_group, brush) {
    return function() {
      brush.call(null, bar_group);
      return lsc_web.plots.describe_BANG_.call(null, bar_group.selectAll("rect"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:height", canvas.attr("height")], true))
    }
  }(expanded, bar_group, brush);
  var clear_link = canvas.append("text").text("clear");
  var disable_clear_BANG_ = function(expanded, bar_group, brush, redraw_brush_BANG_, clear_link) {
    return function() {
      return lsc_web.plots.describe_BANG_.call(null, clear_link, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:fill", "gray", "\ufdd0:cursor", "default"], true))
    }
  }(expanded, bar_group, brush, redraw_brush_BANG_, clear_link);
  var enable_clear_BANG_ = function(expanded, bar_group, brush, redraw_brush_BANG_, clear_link, disable_clear_BANG_) {
    return function() {
      return lsc_web.plots.describe_BANG_.call(null, clear_link, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:fill", "blue", "\ufdd0:cursor", "pointer"], true))
    }
  }(expanded, bar_group, brush, redraw_brush_BANG_, clear_link, disable_clear_BANG_);
  redraw_brush_BANG_.call(null);
  brush.on("brush", function() {
    var vec__5290 = brush.extent();
    var x0 = cljs.core.nth.call(null, vec__5290, 0, null);
    var x1 = cljs.core.nth.call(null, vec__5290, 1, null);
    if(false) {
      brush.extent([Math.round(x0), Math.round(x1)]);
      redraw_brush_BANG_.call(null)
    }else {
    }
    if(cljs.core.truth_(brush.empty())) {
      disable_clear_BANG_.call(null)
    }else {
      enable_clear_BANG_.call(null)
    }
    var vec__5291_5292 = (new cljs.core.Keyword("\ufdd0:x")).call(null, expanded).domain();
    var x_min_5293 = cljs.core.nth.call(null, vec__5291_5292, 0, null);
    var x_max_5294 = cljs.core.nth.call(null, vec__5291_5292, 1, null);
    var x0_5295__$1 = 1E-4 > x0 - x_min_5293 ? -Infinity : x0;
    var x1_5296__$1 = 1E-4 > x_max_5294 - x1 ? Infinity : x1;
    lsc_web.cross.filter_range_BANG_.call(null, (new cljs.core.Keyword("\ufdd0:dimension")).call(null, (new cljs.core.Keyword("\ufdd0:field")).call(null, props)), cljs.core.PersistentVector.fromArray([x0_5295__$1, x1_5296__$1], true));
    return cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword("\ufdd0:update")).call(null, props), true)
  });
  lsc_web.plots.describe_BANG_.call(null, clear_link, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:fill", "gray", "\ufdd0:x", 5, "\ufdd0:y", -3, "\ufdd0:cursor", "default"], true));
  return clear_link.on("click", function() {
    brush.clear();
    disable_clear_BANG_.call(null);
    lsc_web.cross.filter_all_BANG_.call(null, (new cljs.core.Keyword("\ufdd0:dimension")).call(null, (new cljs.core.Keyword("\ufdd0:field")).call(null, props)));
    cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword("\ufdd0:update")).call(null, props), true);
    return redraw_brush_BANG_.call(null)
  })
};
lsc_web.cross.make_bar_view = function make_bar_view(canvas, props) {
  var grab_data = function() {
    var domain = lsc_web.cross.x_scale.call(null, (new cljs.core.Keyword("\ufdd0:view")).call(null, props)).domain();
    var vec__5302 = domain;
    var lower_limit = cljs.core.nth.call(null, vec__5302, 0, null);
    var upper_limit = cljs.core.nth.call(null, vec__5302, 1, null);
    var iter__3042__auto__ = function(domain, vec__5302, lower_limit, upper_limit) {
      return function iter__5303(s__5304) {
        return new cljs.core.LazySeq(null, false, function(domain, vec__5302, lower_limit, upper_limit) {
          return function() {
            var s__5304__$1 = s__5304;
            while(true) {
              var temp__4092__auto__ = cljs.core.seq.call(null, s__5304__$1);
              if(temp__4092__auto__) {
                var s__5304__$2 = temp__4092__auto__;
                if(cljs.core.chunked_seq_QMARK_.call(null, s__5304__$2)) {
                  var c__3040__auto__ = cljs.core.chunk_first.call(null, s__5304__$2);
                  var size__3041__auto__ = cljs.core.count.call(null, c__3040__auto__);
                  var b__5306 = cljs.core.chunk_buffer.call(null, size__3041__auto__);
                  if(function() {
                    var i__5305 = 0;
                    while(true) {
                      if(i__5305 < size__3041__auto__) {
                        var datum = cljs.core._nth.call(null, c__3040__auto__, i__5305);
                        var x = lsc_web.cross.ungroup.call(null, (new cljs.core.Keyword("\ufdd0:view")).call(null, props), datum.key);
                        if(function() {
                          var and__3941__auto__ = lower_limit <= x;
                          if(and__3941__auto__) {
                            return x < upper_limit
                          }else {
                            return and__3941__auto__
                          }
                        }()) {
                          cljs.core.chunk_append.call(null, b__5306, cljs.core.PersistentVector.fromArray([x, datum.value], true));
                          var G__5307 = i__5305 + 1;
                          i__5305 = G__5307;
                          continue
                        }else {
                          var G__5308 = i__5305 + 1;
                          i__5305 = G__5308;
                          continue
                        }
                      }else {
                        return true
                      }
                      break
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5306), iter__5303.call(null, cljs.core.chunk_rest.call(null, s__5304__$2)))
                  }else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5306), null)
                  }
                }else {
                  var datum = cljs.core.first.call(null, s__5304__$2);
                  var x = lsc_web.cross.ungroup.call(null, (new cljs.core.Keyword("\ufdd0:view")).call(null, props), datum.key);
                  if(function() {
                    var and__3941__auto__ = lower_limit <= x;
                    if(and__3941__auto__) {
                      return x < upper_limit
                    }else {
                      return and__3941__auto__
                    }
                  }()) {
                    return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([x, datum.value], true), iter__5303.call(null, cljs.core.rest.call(null, s__5304__$2)))
                  }else {
                    var G__5309 = cljs.core.rest.call(null, s__5304__$2);
                    s__5304__$1 = G__5309;
                    continue
                  }
                }
              }else {
                return null
              }
              break
            }
          }
        }(domain, vec__5302, lower_limit, upper_limit), null)
      }
    }(domain, vec__5302, lower_limit, upper_limit);
    return iter__3042__auto__.call(null, lsc_web.cross.get_all.call(null, (new cljs.core.Keyword("\ufdd0:group")).call(null, props)))
  };
  var data = grab_data.call(null);
  var upper_value = cljs.core.apply.call(null, cljs.core.max, cljs.core.map.call(null, cljs.core.second, data));
  var scales = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:x", lsc_web.cross.x_scale.call(null, (new cljs.core.Keyword("\ufdd0:view")).call(null, props)), "\ufdd0:y", lsc_web.plots.scale.call(null, cljs.core.PersistentVector.fromArray([0, 100 < upper_value ? 100 : upper_value], true), "\ufdd0:clamp", true)], true);
  var labels = new lsc_web.plots.LabeledCanvas(cljs.core.name.call(null, (new cljs.core.Keyword("\ufdd0:name")).call(null, (new cljs.core.Keyword("\ufdd0:field")).call(null, props))), "", "Count");
  var axes = new lsc_web.plots.XYAxes((new cljs.core.Keyword("\ufdd0:x")).call(null, scales), (new cljs.core.Keyword("\ufdd0:y")).call(null, scales), false);
  var canvas__$1 = lsc_web.plots.prepare_all_BANG_.call(null, canvas, cljs.core.PersistentVector.fromArray([labels, axes], true));
  var size = lsc_web.plots.get_size.call(null, canvas__$1);
  var match_size = function(grab_data, data, upper_value, scales, labels, axes, canvas__$1, size) {
    return function(p1__5287_SHARP_) {
      return lsc_web.plots.describe_BANG_.call(null, p1__5287_SHARP_, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:width", (new cljs.core.Keyword("\ufdd0:x")).call(null, size), "\ufdd0:height", (new cljs.core.Keyword("\ufdd0:y")).call(null, size)], true))
    }
  }(grab_data, data, upper_value, scales, labels, axes, canvas__$1, size);
  var background = match_size.call(null, canvas__$1.append("g"));
  var foreground = match_size.call(null, canvas__$1.append("g"));
  var plot = new lsc_web.cross.BarPlot(scales, (new cljs.core.Keyword("\ufdd0:view")).call(null, props), false);
  var update = function(grab_data, data, upper_value, scales, labels, axes, canvas__$1, size, match_size, background, foreground, plot) {
    return function() {
      return lsc_web.plots.draw_BANG_.call(null, plot, foreground, grab_data.call(null))
    }
  }(grab_data, data, upper_value, scales, labels, axes, canvas__$1, size, match_size, background, foreground, plot);
  lsc_web.plots.draw_BANG_.call(null, cljs.core.assoc.call(null, plot, "\ufdd0:background", true), background, grab_data.call(null));
  update.call(null);
  lsc_web.cross.make_bar_brush.call(null, canvas__$1, scales, props);
  return update
};
lsc_web.cross.find_views = function find_views(filter_func, data_set, update, include_group) {
  return cljs.core.apply.call(null, cljs.core.concat, function() {
    var iter__3042__auto__ = function iter__5334(s__5335) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__5335__$1 = s__5335;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__5335__$1);
          if(temp__4092__auto__) {
            var s__5335__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__5335__$2)) {
              var c__3040__auto__ = cljs.core.chunk_first.call(null, s__5335__$2);
              var size__3041__auto__ = cljs.core.count.call(null, c__3040__auto__);
              var b__5337 = cljs.core.chunk_buffer.call(null, size__3041__auto__);
              if(function() {
                var i__5336 = 0;
                while(true) {
                  if(i__5336 < size__3041__auto__) {
                    var field = cljs.core._nth.call(null, c__3040__auto__, i__5336);
                    var views = cljs.core.filter.call(null, filter_func, (new cljs.core.Keyword("\ufdd0:views")).call(null, field));
                    cljs.core.chunk_append.call(null, b__5337, function() {
                      var iter__3042__auto__ = function(i__5336, views, field, c__3040__auto__, size__3041__auto__, b__5337, s__5335__$2, temp__4092__auto__) {
                        return function iter__5346(s__5347) {
                          return new cljs.core.LazySeq(null, false, function(i__5336, views, field, c__3040__auto__, size__3041__auto__, b__5337, s__5335__$2, temp__4092__auto__) {
                            return function() {
                              var s__5347__$1 = s__5347;
                              while(true) {
                                var temp__4092__auto____$1 = cljs.core.seq.call(null, s__5347__$1);
                                if(temp__4092__auto____$1) {
                                  var s__5347__$2 = temp__4092__auto____$1;
                                  if(cljs.core.chunked_seq_QMARK_.call(null, s__5347__$2)) {
                                    var c__3040__auto____$1 = cljs.core.chunk_first.call(null, s__5347__$2);
                                    var size__3041__auto____$1 = cljs.core.count.call(null, c__3040__auto____$1);
                                    var b__5349 = cljs.core.chunk_buffer.call(null, size__3041__auto____$1);
                                    if(function() {
                                      var i__5348 = 0;
                                      while(true) {
                                        if(i__5348 < size__3041__auto____$1) {
                                          var view = cljs.core._nth.call(null, c__3040__auto____$1, i__5348);
                                          cljs.core.chunk_append.call(null, b__5349, cljs.core.merge.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:view", view, "\ufdd0:field", field, "\ufdd0:update", update], true), cljs.core.truth_(include_group) ? cljs.core.PersistentArrayMap.fromArray(["\ufdd0:group", lsc_web.cross.__GT_group.call(null, view, (new cljs.core.Keyword("\ufdd0:dimension")).call(null, field))], true) : null));
                                          var G__5354 = i__5348 + 1;
                                          i__5348 = G__5354;
                                          continue
                                        }else {
                                          return true
                                        }
                                        break
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5349), iter__5346.call(null, cljs.core.chunk_rest.call(null, s__5347__$2)))
                                    }else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5349), null)
                                    }
                                  }else {
                                    var view = cljs.core.first.call(null, s__5347__$2);
                                    return cljs.core.cons.call(null, cljs.core.merge.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:view", view, "\ufdd0:field", field, "\ufdd0:update", update], true), cljs.core.truth_(include_group) ? cljs.core.PersistentArrayMap.fromArray(["\ufdd0:group", lsc_web.cross.__GT_group.call(null, view, (new cljs.core.Keyword("\ufdd0:dimension")).call(null, field))], true) : null), iter__5346.call(null, cljs.core.rest.call(null, s__5347__$2)))
                                  }
                                }else {
                                  return null
                                }
                                break
                              }
                            }
                          }(i__5336, views, field, c__3040__auto__, size__3041__auto__, b__5337, s__5335__$2, temp__4092__auto__), null)
                        }
                      }(i__5336, views, field, c__3040__auto__, size__3041__auto__, b__5337, s__5335__$2, temp__4092__auto__);
                      return iter__3042__auto__.call(null, views)
                    }());
                    var G__5355 = i__5336 + 1;
                    i__5336 = G__5355;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5337), iter__5334.call(null, cljs.core.chunk_rest.call(null, s__5335__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5337), null)
              }
            }else {
              var field = cljs.core.first.call(null, s__5335__$2);
              var views = cljs.core.filter.call(null, filter_func, (new cljs.core.Keyword("\ufdd0:views")).call(null, field));
              return cljs.core.cons.call(null, function() {
                var iter__3042__auto__ = function(views, field, s__5335__$2, temp__4092__auto__) {
                  return function iter__5350(s__5351) {
                    return new cljs.core.LazySeq(null, false, function(views, field, s__5335__$2, temp__4092__auto__) {
                      return function() {
                        var s__5351__$1 = s__5351;
                        while(true) {
                          var temp__4092__auto____$1 = cljs.core.seq.call(null, s__5351__$1);
                          if(temp__4092__auto____$1) {
                            var s__5351__$2 = temp__4092__auto____$1;
                            if(cljs.core.chunked_seq_QMARK_.call(null, s__5351__$2)) {
                              var c__3040__auto__ = cljs.core.chunk_first.call(null, s__5351__$2);
                              var size__3041__auto__ = cljs.core.count.call(null, c__3040__auto__);
                              var b__5353 = cljs.core.chunk_buffer.call(null, size__3041__auto__);
                              if(function() {
                                var i__5352 = 0;
                                while(true) {
                                  if(i__5352 < size__3041__auto__) {
                                    var view = cljs.core._nth.call(null, c__3040__auto__, i__5352);
                                    cljs.core.chunk_append.call(null, b__5353, cljs.core.merge.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:view", view, "\ufdd0:field", field, "\ufdd0:update", update], true), cljs.core.truth_(include_group) ? cljs.core.PersistentArrayMap.fromArray(["\ufdd0:group", lsc_web.cross.__GT_group.call(null, view, (new cljs.core.Keyword("\ufdd0:dimension")).call(null, field))], true) : null));
                                    var G__5356 = i__5352 + 1;
                                    i__5352 = G__5356;
                                    continue
                                  }else {
                                    return true
                                  }
                                  break
                                }
                              }()) {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5353), iter__5350.call(null, cljs.core.chunk_rest.call(null, s__5351__$2)))
                              }else {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5353), null)
                              }
                            }else {
                              var view = cljs.core.first.call(null, s__5351__$2);
                              return cljs.core.cons.call(null, cljs.core.merge.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:view", view, "\ufdd0:field", field, "\ufdd0:update", update], true), cljs.core.truth_(include_group) ? cljs.core.PersistentArrayMap.fromArray(["\ufdd0:group", lsc_web.cross.__GT_group.call(null, view, (new cljs.core.Keyword("\ufdd0:dimension")).call(null, field))], true) : null), iter__5350.call(null, cljs.core.rest.call(null, s__5351__$2)))
                            }
                          }else {
                            return null
                          }
                          break
                        }
                      }
                    }(views, field, s__5335__$2, temp__4092__auto__), null)
                  }
                }(views, field, s__5335__$2, temp__4092__auto__);
                return iter__3042__auto__.call(null, views)
              }(), iter__5334.call(null, cljs.core.rest.call(null, s__5335__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3042__auto__.call(null, (new cljs.core.Keyword("\ufdd0:fields")).call(null, data_set))
  }())
};
lsc_web.cross.make_bar_views = function make_bar_views(data_set, container, update) {
  var update_funcs = [];
  var bar_views = lsc_web.cross.find_views.call(null, function(update_funcs) {
    return function(p1__5310_SHARP_) {
      var G__5362 = p1__5310_SHARP_;
      if(G__5362) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__5362.lsc_web$cross$BarView$
          }
        }())) {
          return true
        }else {
          if(!G__5362.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, lsc_web.cross.BarView, G__5362)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, lsc_web.cross.BarView, G__5362)
      }
    }
  }(update_funcs), data_set, update, true);
  var containers = container.selectAll("svg.bar-view").data(cljs.core.to_array.call(null, bar_views));
  lsc_web.plots.describe_BANG_.call(null, containers.enter().append("svg"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:class", "bar-view"], true));
  lsc_web.plots.describe_BANG_.call(null, containers, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:width", function(p1__5311_SHARP_) {
    return(new cljs.core.Keyword("\ufdd0:x")).call(null, lsc_web.cross.size.call(null, (new cljs.core.Keyword("\ufdd0:view")).call(null, p1__5311_SHARP_)))
  }, "\ufdd0:height", function(p1__5312_SHARP_) {
    return(new cljs.core.Keyword("\ufdd0:y")).call(null, lsc_web.cross.size.call(null, (new cljs.core.Keyword("\ufdd0:view")).call(null, p1__5312_SHARP_)))
  }], true));
  containers.exit().remove();
  containers.each(function(p1__5313_SHARP_) {
    var this$ = this;
    return update_funcs.push(lsc_web.cross.make_bar_view.call(null, lsc_web.plots.d3.select(this$), p1__5313_SHARP_))
  });
  return function() {
    var seq__5363 = cljs.core.seq.call(null, update_funcs);
    var chunk__5364 = null;
    var count__5365 = 0;
    var i__5366 = 0;
    while(true) {
      if(i__5366 < count__5365) {
        var func = cljs.core._nth.call(null, chunk__5364, i__5366);
        func.call(null);
        var G__5367 = seq__5363;
        var G__5368 = chunk__5364;
        var G__5369 = count__5365;
        var G__5370 = i__5366 + 1;
        seq__5363 = G__5367;
        chunk__5364 = G__5368;
        count__5365 = G__5369;
        i__5366 = G__5370;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__5363);
        if(temp__4092__auto__) {
          var seq__5363__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__5363__$1)) {
            var c__3073__auto__ = cljs.core.chunk_first.call(null, seq__5363__$1);
            var G__5371 = cljs.core.chunk_rest.call(null, seq__5363__$1);
            var G__5372 = c__3073__auto__;
            var G__5373 = cljs.core.count.call(null, c__3073__auto__);
            var G__5374 = 0;
            seq__5363 = G__5371;
            chunk__5364 = G__5372;
            count__5365 = G__5373;
            i__5366 = G__5374;
            continue
          }else {
            var func = cljs.core.first.call(null, seq__5363__$1);
            func.call(null);
            var G__5375 = cljs.core.next.call(null, seq__5363__$1);
            var G__5376 = null;
            var G__5377 = 0;
            var G__5378 = 0;
            seq__5363 = G__5375;
            chunk__5364 = G__5376;
            count__5365 = G__5377;
            i__5366 = G__5378;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  }
};
lsc_web.cross.make_counter = function make_counter(data_set, container, num_rows) {
  var text_box = lsc_web.plots.style_BANG_.call(null, container.append("div"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:font-weight", "bold", "\ufdd0:font-size", "14px", "\ufdd0:padding", "20px"], true));
  var update = function(text_box) {
    return function() {
      return text_box.text([cljs.core.str(lsc_web.cross.get_value.call(null, lsc_web.cross.group_all.call(null, (new cljs.core.Keyword("\ufdd0:cross")).call(null, data_set)))), cljs.core.str(" of "), cljs.core.str(cljs.core.count.call(null, (new cljs.core.Keyword("\ufdd0:cross")).call(null, data_set))), cljs.core.str(" selected. Showing "), cljs.core.str(num_rows), cljs.core.str(" rows")].join(""))
    }
  }(text_box);
  update.call(null);
  return update
};
lsc_web.cross.make_column_views = function make_column_views(data_set, container, num_rows, sort_field_name, update) {
  var col_views = lsc_web.cross.find_views.call(null, function(p1__5379_SHARP_) {
    var G__5394 = p1__5379_SHARP_;
    if(G__5394) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__5394.lsc_web$cross$ColumnView$
        }
      }())) {
        return true
      }else {
        if(!G__5394.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, lsc_web.cross.ColumnView, G__5394)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, lsc_web.cross.ColumnView, G__5394)
    }
  }, data_set, update, false);
  var sort_field = cljs.core.first.call(null, cljs.core.filter.call(null, function(col_views) {
    return function(p1__5380_SHARP_) {
      return cljs.core._EQ_.call(null, sort_field_name, (new cljs.core.Keyword("\ufdd0:name")).call(null, p1__5380_SHARP_))
    }
  }(col_views), (new cljs.core.Keyword("\ufdd0:fields")).call(null, data_set)));
  var canvas = container.append("div");
  var headers = lsc_web.plots.style_BANG_.call(null, canvas.append("div").classed("col-header", true).selectAll("div").data(cljs.core.to_array.call(null, col_views)).enter().append("div").text(function(col_views, sort_field, canvas) {
    return function(p1__5381_SHARP_) {
      return(new cljs.core.Keyword("\ufdd0:name")).call(null, (new cljs.core.Keyword("\ufdd0:field")).call(null, p1__5381_SHARP_))
    }
  }(col_views, sort_field, canvas)), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:text-align", "center", "\ufdd0:font-weight", "bold", "\ufdd0:font-size", "10px", "\ufdd0:float", "left", "\ufdd0:width", function(col_views, sort_field, canvas) {
    return function(p1__5382_SHARP_) {
      return[cljs.core.str(lsc_web.cross.size.call(null, (new cljs.core.Keyword("\ufdd0:view")).call(null, p1__5382_SHARP_))), cljs.core.str("px")].join("")
    }
  }(col_views, sort_field, canvas)], true));
  var select_rows = function(col_views, sort_field, canvas, headers) {
    return function() {
      return canvas.selectAll("div.col-row").data(cljs.core.to_array.call(null, lsc_web.utils.pad_with.call(null, num_rows, null, lsc_web.cross.top.call(null, sort_field.call(null, "\ufdd0:dimension"), num_rows))))
    }
  }(col_views, sort_field, canvas, headers);
  var rows = select_rows.call(null);
  var select_entries = function(col_views, sort_field, canvas, headers, select_rows, rows) {
    return function(rows__$1) {
      return rows__$1.selectAll("div.col-entry").data(function(col_views, sort_field, canvas, headers, select_rows, rows) {
        return function(coinc, row_num) {
          return cljs.core.to_array.call(null, function() {
            var iter__3042__auto__ = function(col_views, sort_field, canvas, headers, select_rows, rows) {
              return function iter__5395(s__5396) {
                return new cljs.core.LazySeq(null, false, function(col_views, sort_field, canvas, headers, select_rows, rows) {
                  return function() {
                    var s__5396__$1 = s__5396;
                    while(true) {
                      var temp__4092__auto__ = cljs.core.seq.call(null, s__5396__$1);
                      if(temp__4092__auto__) {
                        var s__5396__$2 = temp__4092__auto__;
                        if(cljs.core.chunked_seq_QMARK_.call(null, s__5396__$2)) {
                          var c__3040__auto__ = cljs.core.chunk_first.call(null, s__5396__$2);
                          var size__3041__auto__ = cljs.core.count.call(null, c__3040__auto__);
                          var b__5398 = cljs.core.chunk_buffer.call(null, size__3041__auto__);
                          if(function() {
                            var i__5397 = 0;
                            while(true) {
                              if(i__5397 < size__3041__auto__) {
                                var view = cljs.core._nth.call(null, c__3040__auto__, i__5397);
                                cljs.core.chunk_append.call(null, b__5398, cljs.core.PersistentVector.fromArray([coinc, view, row_num], true));
                                var G__5403 = i__5397 + 1;
                                i__5397 = G__5403;
                                continue
                              }else {
                                return true
                              }
                              break
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5398), iter__5395.call(null, cljs.core.chunk_rest.call(null, s__5396__$2)))
                          }else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5398), null)
                          }
                        }else {
                          var view = cljs.core.first.call(null, s__5396__$2);
                          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([coinc, view, row_num], true), iter__5395.call(null, cljs.core.rest.call(null, s__5396__$2)))
                        }
                      }else {
                        return null
                      }
                      break
                    }
                  }
                }(col_views, sort_field, canvas, headers, select_rows, rows), null)
              }
            }(col_views, sort_field, canvas, headers, select_rows, rows);
            return iter__3042__auto__.call(null, col_views)
          }())
        }
      }(col_views, sort_field, canvas, headers, select_rows, rows))
    }
  }(col_views, sort_field, canvas, headers, select_rows, rows);
  var update_entries = function(col_views, sort_field, canvas, headers, select_rows, rows, select_entries) {
    return function() {
      return lsc_web.plots.style_BANG_.call(null, select_entries.call(null, select_rows.call(null)), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:background-color", function(col_views, sort_field, canvas, headers, select_rows, rows, select_entries) {
        return function(p__5399) {
          var vec__5400 = p__5399;
          var _ = cljs.core.nth.call(null, vec__5400, 0, null);
          var ___$1 = cljs.core.nth.call(null, vec__5400, 1, null);
          var row = cljs.core.nth.call(null, vec__5400, 2, null);
          if(cljs.core.even_QMARK_.call(null, row)) {
            return"#AAAAFF"
          }else {
            return"#FFFFFF"
          }
        }
      }(col_views, sort_field, canvas, headers, select_rows, rows, select_entries)], true)).text(function(col_views, sort_field, canvas, headers, select_rows, rows, select_entries) {
        return function(p__5401) {
          var vec__5402 = p__5401;
          var coinc = cljs.core.nth.call(null, vec__5402, 0, null);
          var view = cljs.core.nth.call(null, vec__5402, 1, null);
          var _ = cljs.core.nth.call(null, vec__5402, 2, null);
          if(coinc == null) {
            return""
          }else {
            return lsc_web.cross.format_value.call(null, (new cljs.core.Keyword("\ufdd0:view")).call(null, view), lsc_web.cross.get_dim_value.call(null, (new cljs.core.Keyword("\ufdd0:dimension")).call(null, (new cljs.core.Keyword("\ufdd0:field")).call(null, view)), coinc))
          }
        }
      }(col_views, sort_field, canvas, headers, select_rows, rows, select_entries)).each(function(col_views, sort_field, canvas, headers, select_rows, rows, select_entries) {
        return function(p1__5383_SHARP_) {
          var this$ = this;
          return lsc_web.cross.describe_elem.call(null, (new cljs.core.Keyword("\ufdd0:view")).call(null, cljs.core.second.call(null, p1__5383_SHARP_)), lsc_web.plots.d3.select(this$), p1__5383_SHARP_)
        }
      }(col_views, sort_field, canvas, headers, select_rows, rows, select_entries))
    }
  }(col_views, sort_field, canvas, headers, select_rows, rows, select_entries);
  lsc_web.plots.style_BANG_.call(null, rows.enter().append("div").classed("col-row", true), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:text-align", "center", "\ufdd0:clear", "both"], true));
  lsc_web.plots.style_BANG_.call(null, select_entries.call(null, rows).enter().append("div").classed("col-entry", true), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:float", "left", "\ufdd0:font-size", "12px", "\ufdd0:width", function(p1__5384_SHARP_) {
    return[cljs.core.str(lsc_web.cross.size.call(null, (new cljs.core.Keyword("\ufdd0:view")).call(null, cljs.core.second.call(null, p1__5384_SHARP_)))), cljs.core.str("px")].join("")
  }], true));
  update_entries.call(null);
  return update_entries
};
lsc_web.cross.show_views = function show_views(data_set, container, num_rows, sort_field_name) {
  var update = cljs.core.async.chan.call(null, 1);
  var update_bar_views = lsc_web.cross.make_bar_views.call(null, data_set, container, update);
  var update_counter = lsc_web.cross.make_counter.call(null, data_set, container, num_rows);
  var update_column_views = lsc_web.cross.make_column_views.call(null, data_set, container, num_rows, sort_field_name, update);
  var c__4701__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4702__auto__ = function() {
      var switch__4627__auto__ = function(state_5457) {
        var state_val_5458 = state_5457[1];
        if(state_val_5458 === 1) {
          var state_5457__$1 = state_5457;
          var statearr_5459_5474 = state_5457__$1;
          statearr_5459_5474[2] = null;
          statearr_5459_5474[1] = 2;
          return"\ufdd0:recur"
        }else {
          if(state_val_5458 === 2) {
            var state_5457__$1 = state_5457;
            if(true) {
              var statearr_5460_5475 = state_5457__$1;
              statearr_5460_5475[1] = 4
            }else {
              var statearr_5461_5476 = state_5457__$1;
              statearr_5461_5476[1] = 5
            }
            return"\ufdd0:recur"
          }else {
            if(state_val_5458 === 3) {
              var inst_5455 = state_5457[2];
              var state_5457__$1 = state_5457;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5457__$1, inst_5455)
            }else {
              if(state_val_5458 === 4) {
                var state_5457__$1 = state_5457;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5457__$1, 7, update)
              }else {
                if(state_val_5458 === 5) {
                  var state_5457__$1 = state_5457;
                  var statearr_5462_5477 = state_5457__$1;
                  statearr_5462_5477[2] = null;
                  statearr_5462_5477[1] = 6;
                  return"\ufdd0:recur"
                }else {
                  if(state_val_5458 === 6) {
                    var inst_5453 = state_5457[2];
                    var state_5457__$1 = state_5457;
                    var statearr_5463_5478 = state_5457__$1;
                    statearr_5463_5478[2] = inst_5453;
                    statearr_5463_5478[1] = 3;
                    return"\ufdd0:recur"
                  }else {
                    if(state_val_5458 === 7) {
                      var inst_5442 = state_5457[2];
                      var state_5457__$1 = state_5457;
                      if(cljs.core.truth_(inst_5442)) {
                        var statearr_5464_5479 = state_5457__$1;
                        statearr_5464_5479[1] = 8
                      }else {
                        var statearr_5465_5480 = state_5457__$1;
                        statearr_5465_5480[1] = 9
                      }
                      return"\ufdd0:recur"
                    }else {
                      if(state_val_5458 === 8) {
                        var inst_5444 = update_bar_views.call(null);
                        var inst_5445 = update_counter.call(null);
                        var inst_5446 = update_column_views.call(null);
                        var state_5457__$1 = function() {
                          var statearr_5466 = state_5457;
                          statearr_5466[5] = inst_5445;
                          statearr_5466[6] = inst_5444;
                          return statearr_5466
                        }();
                        var statearr_5467_5481 = state_5457__$1;
                        statearr_5467_5481[2] = inst_5446;
                        statearr_5467_5481[1] = 10;
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_5458 === 9) {
                          var state_5457__$1 = state_5457;
                          var statearr_5468_5482 = state_5457__$1;
                          statearr_5468_5482[2] = null;
                          statearr_5468_5482[1] = 10;
                          return"\ufdd0:recur"
                        }else {
                          if(state_val_5458 === 10) {
                            var inst_5449 = state_5457[2];
                            var state_5457__$1 = function() {
                              var statearr_5469 = state_5457;
                              statearr_5469[7] = inst_5449;
                              return statearr_5469
                            }();
                            var statearr_5470_5483 = state_5457__$1;
                            statearr_5470_5483[2] = null;
                            statearr_5470_5483[1] = 2;
                            return"\ufdd0:recur"
                          }else {
                            return null
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__4627__auto__) {
        return function() {
          var state_machine__4628__auto__ = null;
          var state_machine__4628__auto____0 = function() {
            var statearr_5472 = new Array(8);
            statearr_5472[0] = state_machine__4628__auto__;
            statearr_5472[1] = 1;
            return statearr_5472
          };
          var state_machine__4628__auto____1 = function(state_5457) {
            while(true) {
              var result__4629__auto__ = switch__4627__auto__.call(null, state_5457);
              if(result__4629__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4629__auto__
              }
              break
            }
          };
          state_machine__4628__auto__ = function(state_5457) {
            switch(arguments.length) {
              case 0:
                return state_machine__4628__auto____0.call(this);
              case 1:
                return state_machine__4628__auto____1.call(this, state_5457)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4628__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4628__auto____0;
          state_machine__4628__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4628__auto____1;
          return state_machine__4628__auto__
        }()
      }(switch__4627__auto__)
    }();
    var state__4703__auto__ = function() {
      var statearr_5473 = f__4702__auto__.call(null);
      statearr_5473[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4701__auto__;
      return statearr_5473
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state__4703__auto__)
  });
  return c__4701__auto__
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3941__auto__ = reader;
    if(and__3941__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2942__auto__ = reader == null ? null : reader;
    return function() {
      var or__3943__auto__ = cljs.reader.read_char[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.read_char["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3941__auto__ = reader;
    if(and__3941__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2942__auto__ = reader == null ? null : reader;
    return function() {
      var or__3943__auto__ = cljs.reader.unread[goog.typeOf(x__2942__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.unread["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
goog.provide("cljs.reader.StringPushbackReader");
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__2882__auto__, writer__2883__auto__, opt__2884__auto__) {
  return cljs.core._write.call(null, writer__2883__auto__, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, self__.buffer_atom))) {
    var idx = cljs.core.deref.call(null, self__.index_atom);
    cljs.core.swap_BANG_.call(null, self__.index_atom, cljs.core.inc);
    return self__.s[idx]
  }else {
    var buf = cljs.core.deref.call(null, self__.buffer_atom);
    cljs.core.swap_BANG_.call(null, self__.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  return cljs.core.swap_BANG_.call(null, self__.buffer_atom, function(p1__7081_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__7081_SHARP_)
  })
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3943__auto__ = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3943__auto__ = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var and__3941__auto__ = function() {
      var or__3943__auto____$1 = "+" === initch;
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3941__auto__)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch);
        return next_ch
      }())
    }else {
      return and__3941__auto__
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__7082) {
    var rdr = cljs.core.first(arglist__7082);
    var msg = cljs.core.rest(arglist__7082);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3941__auto__ = !(ch === "#");
  if(and__3941__auto__) {
    var and__3941__auto____$1 = !(ch === "'");
    if(and__3941__auto____$1) {
      var and__3941__auto____$2 = !(ch === ":");
      if(and__3941__auto____$2) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3941__auto____$2
      }
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3943__auto__ = ch == null;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString()
    }else {
      var G__7083 = function() {
        sb.append(ch);
        return sb
      }();
      var G__7084 = cljs.reader.read_char.call(null, rdr);
      sb = G__7083;
      ch = G__7084;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3943__auto__ = ch === "n";
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = ch === "r";
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return ch == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(matches.length === 1) {
      return matches[0]
    }else {
      return matches
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if(!function() {
    var or__3943__auto__ = group3 == null;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return group3.length < 1
    }
  }()) {
    return 0
  }else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : "\ufdd0:default" ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if(n == null) {
      return null
    }else {
      return negate * parseInt(n, radix)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator) / parseInt(denominator)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if(function() {
    var and__3941__auto__ = !(matches == null);
    if(and__3941__auto__) {
      return matches[0] === s
    }else {
      return and__3941__auto__
    }
  }()) {
    if(matches.length === 1) {
      return matches[0]
    }else {
      return matches
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\b"
            }else {
              if(c === "f") {
                return"\f"
              }else {
                if("\ufdd0:else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if(cljs.core.truth_(mapresult)) {
    return mapresult
  }else {
    if(ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch)
        }else {
          if("\ufdd0:else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch))) {
      var G__7085 = cljs.reader.read_char.call(null, rdr);
      ch = G__7085;
      continue
    }else {
      return ch
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading")
    }
    if(delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a)
    }else {
      var temp__4090__auto__ = cljs.reader.macros.call(null, ch);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var macrofn = temp__4090__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__7086 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__7086;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__7087 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__7087;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if(cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _)
  }else {
    var temp__4090__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if(cljs.core.truth_(temp__4090__auto__)) {
      var obj = temp__4090__auto__;
      return obj
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3943__auto__ = ch == null;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return cljs.reader.macros.call(null, ch)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3943__auto__ = cljs.reader.match_number.call(null, s);
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]")
      }
    }else {
      var G__7088 = function() {
        buffer.append(ch);
        return buffer
      }();
      var G__7089 = cljs.reader.read_char.call(null, reader);
      buffer = G__7088;
      ch = G__7089;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading")
    }else {
      if("\\" === ch) {
        var G__7090 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer
        }();
        var G__7091 = cljs.reader.read_char.call(null, reader);
        buffer = G__7090;
        ch = G__7091;
        continue
      }else {
        if('"' === ch) {
          return buffer.toString()
        }else {
          if("\ufdd0:default") {
            var G__7092 = function() {
              buffer.append(ch);
              return buffer
            }();
            var G__7093 = cljs.reader.read_char.call(null, reader);
            buffer = G__7092;
            ch = G__7093;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0:else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length))
  }else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if(cljs.core.truth_(function() {
    var or__3943__auto__ = function() {
      var and__3941__auto__ = !(void 0 === ns);
      if(and__3941__auto__) {
        return ns.substring(ns.length - 2, ns.length) === ":/"
      }else {
        return and__3941__auto__
      }
    }();
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      var or__3943__auto____$1 = name[name.length - 1] === ":";
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        return!(token__$1.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1)
  }else {
    if(function() {
      var and__3941__auto__ = !(ns == null);
      if(and__3941__auto__) {
        return ns.length > 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name)
    }else {
      return cljs.core.keyword.call(null, token__$1)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(f instanceof cljs.core.Symbol) {
    return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:tag", f], true)
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:tag", f], true)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArray([f, true], true)
      }else {
        if("\ufdd0:else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__7095 = o;
    if(G__7095) {
      if(function() {
        var or__3943__auto__ = G__7095.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__7095.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__7095.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__7095)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__7095)
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null))
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null))
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0:else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0:else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if(ch == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__7096 = reader;
        var G__7097 = eof_is_error;
        var G__7098 = sentinel;
        var G__7099 = is_recursive;
        reader = G__7096;
        eof_is_error = G__7097;
        sentinel = G__7098;
        is_recursive = G__7099;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__7100 = cljs.reader.read_comment.call(null, reader, ch);
          var G__7101 = eof_is_error;
          var G__7102 = sentinel;
          var G__7103 = is_recursive;
          reader = G__7100;
          eof_is_error = G__7101;
          sentinel = G__7102;
          is_recursive = G__7103;
          continue
        }else {
          if("\ufdd0:else") {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : "\ufdd0:else" ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if(res === reader) {
              var G__7104 = reader;
              var G__7105 = eof_is_error;
              var G__7106 = sentinel;
              var G__7107 = is_recursive;
              reader = G__7104;
              eof_is_error = G__7105;
              sentinel = G__7106;
              is_recursive = G__7107;
              continue
            }else {
              return res
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0:else") {
        var b = new goog.string.StringBuffer(s);
        while(true) {
          if(b.getLength() < width) {
            var G__7108 = b.append("0");
            b = G__7108;
            continue
          }else {
            return b.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3941__auto__ = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3941__auto__)) {
    var or__3943__auto__ = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3941__auto__
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check = function(timestamp) {
    return function(low, n, high, msg) {
      if(function() {
        var and__3941__auto__ = low <= n;
        if(and__3941__auto__) {
          return n <= high
        }else {
          return and__3941__auto__
        }
      }()) {
      }else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list(new cljs.core.Symbol(null, "<=", "<=", -1640529606, null), new cljs.core.Symbol(null, "low", "low", -1640424179, null), new cljs.core.Symbol(null, "n", "n", -1640531417, 
        null), new cljs.core.Symbol(null, "high", "high", -1637329061, null)), cljs.core.hash_map("\ufdd0:line", 474, "\ufdd0:column", 25))))].join(""));
      }
      return n
    }
  }(timestamp);
  return function(ts) {
    var temp__4092__auto__ = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp, ts)));
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__7113 = temp__4092__auto__;
      var vec__7114 = cljs.core.nth.call(null, vec__7113, 0, null);
      var _ = cljs.core.nth.call(null, vec__7114, 0, null);
      var years = cljs.core.nth.call(null, vec__7114, 1, null);
      var months = cljs.core.nth.call(null, vec__7114, 2, null);
      var days = cljs.core.nth.call(null, vec__7114, 3, null);
      var hours = cljs.core.nth.call(null, vec__7114, 4, null);
      var minutes = cljs.core.nth.call(null, vec__7114, 5, null);
      var seconds = cljs.core.nth.call(null, vec__7114, 6, null);
      var milliseconds = cljs.core.nth.call(null, vec__7114, 7, null);
      var vec__7115 = cljs.core.nth.call(null, vec__7113, 1, null);
      var ___$1 = cljs.core.nth.call(null, vec__7115, 0, null);
      var ___$2 = cljs.core.nth.call(null, vec__7115, 1, null);
      var ___$3 = cljs.core.nth.call(null, vec__7115, 2, null);
      var V = vec__7113;
      var vec__7116 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__7112_SHARP_) {
          return parseInt(p1__7112_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__7110_SHARP_, p2__7109_SHARP_) {
        return cljs.core.update_in.call(null, p2__7109_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__7110_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__7111_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__7111_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V));
      var vec__7117 = cljs.core.nth.call(null, vec__7116, 0, null);
      var ___$4 = cljs.core.nth.call(null, vec__7117, 0, null);
      var y = cljs.core.nth.call(null, vec__7117, 1, null);
      var mo = cljs.core.nth.call(null, vec__7117, 2, null);
      var d = cljs.core.nth.call(null, vec__7117, 3, null);
      var h = cljs.core.nth.call(null, vec__7117, 4, null);
      var m = cljs.core.nth.call(null, vec__7117, 5, null);
      var s = cljs.core.nth.call(null, vec__7117, 6, null);
      var ms = cljs.core.nth.call(null, vec__7117, 7, null);
      var vec__7118 = cljs.core.nth.call(null, vec__7116, 1, null);
      var offset_sign = cljs.core.nth.call(null, vec__7118, 0, null);
      var offset_hours = cljs.core.nth.call(null, vec__7118, 1, null);
      var offset_minutes = cljs.core.nth.call(null, vec__7118, 2, null);
      var offset = offset_sign * (offset_hours * 60 + offset_minutes);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years) ? 1970 : y, cljs.core.not.call(null, months) ? 1 : check.call(null, 1, mo, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days) ? 1 : check.call(null, 1, d, cljs.reader.days_in_month.call(null, mo, cljs.reader.leap_year_QMARK_.call(null, y)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, hours) ? 0 : check.call(null, 0, h, 23, "timestamp hour field must be in range 0..23"), 
      cljs.core.not.call(null, minutes) ? 0 : check.call(null, 0, m, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds) ? 0 : check.call(null, 0, s, cljs.core._EQ_.call(null, m, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds) ? 0 : check.call(null, 0, ms, 999, "timestamp millisecond field must be in range 0..999"), offset], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var vec__7120 = temp__4090__auto__;
    var years = cljs.core.nth.call(null, vec__7120, 0, null);
    var months = cljs.core.nth.call(null, vec__7120, 1, null);
    var days = cljs.core.nth.call(null, vec__7120, 2, null);
    var hours = cljs.core.nth.call(null, vec__7120, 3, null);
    var minutes = cljs.core.nth.call(null, vec__7120, 4, null);
    var seconds = cljs.core.nth.call(null, vec__7120, 5, null);
    var ms = cljs.core.nth.call(null, vec__7120, 6, null);
    var offset = cljs.core.nth.call(null, vec__7120, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.fromArray(["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue], true));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if(cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    if(cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false))
    }else {
      if("\ufdd0:else") {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
      }else {
        return null
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return f
  });
  return old_parser
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return null
  });
  return old_parser
};
goog.provide("jayq.core");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("clojure.string");
jayq.core.crate_meta = function crate_meta(func) {
  return func.prototype._crateGroup
};
jayq.core.__GT_selector = function __GT_selector(sel) {
  if(cljs.core.string_QMARK_.call(null, sel)) {
    return sel
  }else {
    if(cljs.core.fn_QMARK_.call(null, sel)) {
      var temp__4090__auto__ = jayq.core.crate_meta.call(null, sel);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var cm = temp__4090__auto__;
        return[cljs.core.str("[crateGroup="), cljs.core.str(cm), cljs.core.str("]")].join("")
      }else {
        return sel
      }
    }else {
      if(cljs.core.keyword_QMARK_.call(null, sel)) {
        return cljs.core.name.call(null, sel)
      }else {
        if("\ufdd0:else") {
          return sel
        }else {
          return null
        }
      }
    }
  }
};
jayq.core.$ = function() {
  var $ = null;
  var $__1 = function(sel) {
    return jQuery(jayq.core.__GT_selector.call(null, sel))
  };
  var $__2 = function(sel, context) {
    return jQuery(jayq.core.__GT_selector.call(null, sel), context)
  };
  $ = function(sel, context) {
    switch(arguments.length) {
      case 1:
        return $__1.call(this, sel);
      case 2:
        return $__2.call(this, sel, context)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  $.cljs$core$IFn$_invoke$arity$1 = $__1;
  $.cljs$core$IFn$_invoke$arity$2 = $__2;
  return $
}();
jQuery.prototype.cljs$core$IFn$ = true;
jQuery.prototype.call = function() {
  var G__7021 = null;
  var G__7021__2 = function(self__, k) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k)
  };
  var G__7021__3 = function(self__, k, not_found) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found)
  };
  G__7021 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7021__2.call(this, self__, k);
      case 3:
        return G__7021__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__7021
}();
jQuery.prototype.apply = function(self__, args7020) {
  return self__.call.apply(self__, [self__].concat(args7020.slice()))
};
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  return cljs.core.ci_reduce.call(null, this$, f)
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  return cljs.core.ci_reduce.call(null, this$, f, start)
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var or__3943__auto__ = this$.slice(k, k + 1);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  return cljs.core._nth.call(null, this$, k, not_found)
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    if(void 0 === not_found) {
      return null
    }else {
      return not_found
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.length
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  return this$.get(0)
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  if(cljs.core.count.call(null, this$) > 1) {
    return this$.slice(1)
  }else {
    return cljs.core.list.call(null)
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  if(cljs.core.truth_(this$.get(0))) {
    return this$
  }else {
    return null
  }
};
jayq.core.anim = function anim($elem, props, dur) {
  return $elem.animate(cljs.core.clj__GT_js.call(null, props), dur)
};
jayq.core.text = function() {
  var text = null;
  var text__1 = function($elem) {
    return $elem.text()
  };
  var text__2 = function($elem, txt) {
    return $elem.text(txt)
  };
  text = function($elem, txt) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, $elem);
      case 2:
        return text__2.call(this, $elem, txt)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text.cljs$core$IFn$_invoke$arity$1 = text__1;
  text.cljs$core$IFn$_invoke$arity$2 = text__2;
  return text
}();
jayq.core.css = function() {
  var css = null;
  var css__2 = function($elem, opts) {
    return $elem.css(cljs.core.clj__GT_js.call(null, opts))
  };
  var css__3 = function($elem, p, v) {
    return $elem.css(cljs.core.name.call(null, p), v)
  };
  css = function($elem, p, v) {
    switch(arguments.length) {
      case 2:
        return css__2.call(this, $elem, p);
      case 3:
        return css__3.call(this, $elem, p, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  css.cljs$core$IFn$_invoke$arity$2 = css__2;
  css.cljs$core$IFn$_invoke$arity$3 = css__3;
  return css
}();
jayq.core.attr = function() {
  var attr = null;
  var attr__2 = function($elem, x) {
    return $elem.attr(cljs.core.clj__GT_js.call(null, x))
  };
  var attr__3 = function($elem, n, v) {
    return $elem.attr(cljs.core.name.call(null, n), v)
  };
  attr = function($elem, n, v) {
    switch(arguments.length) {
      case 2:
        return attr__2.call(this, $elem, n);
      case 3:
        return attr__3.call(this, $elem, n, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  attr.cljs$core$IFn$_invoke$arity$2 = attr__2;
  attr.cljs$core$IFn$_invoke$arity$3 = attr__3;
  return attr
}();
jayq.core.prop = function() {
  var prop = null;
  var prop__2 = function($elem, x) {
    return $elem.prop(cljs.core.clj__GT_js.call(null, x))
  };
  var prop__3 = function($elem, n, v) {
    return $elem.prop(cljs.core.name.call(null, n), v)
  };
  prop = function($elem, n, v) {
    switch(arguments.length) {
      case 2:
        return prop__2.call(this, $elem, n);
      case 3:
        return prop__3.call(this, $elem, n, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prop.cljs$core$IFn$_invoke$arity$2 = prop__2;
  prop.cljs$core$IFn$_invoke$arity$3 = prop__3;
  return prop
}();
jayq.core.remove_attr = function remove_attr($elem, a) {
  return $elem.removeAttr(cljs.core.name.call(null, a))
};
jayq.core.remove_prop = function remove_prop($elem, a) {
  return $elem.removeProp(cljs.core.name.call(null, a))
};
jayq.core.data = function() {
  var data = null;
  var data__2 = function($elem, x) {
    return $elem.data(cljs.core.clj__GT_js.call(null, x))
  };
  var data__3 = function($elem, k, v) {
    return $elem.data(cljs.core.name.call(null, k), v)
  };
  data = function($elem, k, v) {
    switch(arguments.length) {
      case 2:
        return data__2.call(this, $elem, k);
      case 3:
        return data__3.call(this, $elem, k, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  data.cljs$core$IFn$_invoke$arity$2 = data__2;
  data.cljs$core$IFn$_invoke$arity$3 = data__3;
  return data
}();
jayq.core.add_class = function add_class($elem, cl) {
  return $elem.addClass(cljs.core.name.call(null, cl))
};
jayq.core.remove_class = function remove_class($elem, cl) {
  return $elem.removeClass(cljs.core.name.call(null, cl))
};
jayq.core.toggle_class = function toggle_class($elem, cl) {
  return $elem.toggleClass(cljs.core.name.call(null, cl))
};
jayq.core.has_class = function has_class($elem, cl) {
  return $elem.hasClass(cljs.core.name.call(null, cl))
};
jayq.core.is = function is($elem, selector) {
  return $elem.is(jayq.core.__GT_selector.call(null, selector))
};
jayq.core.after = function after($elem, content) {
  return $elem.after(content)
};
jayq.core.before = function before($elem, content) {
  return $elem.before(content)
};
jayq.core.append = function append($elem, content) {
  return $elem.append(content)
};
jayq.core.prepend = function prepend($elem, content) {
  return $elem.prepend(content)
};
jayq.core.append_to = function append_to($elem, target) {
  return $elem.appendTo(jayq.core.__GT_selector.call(null, target))
};
jayq.core.prepend_to = function prepend_to($elem, target) {
  return $elem.prependTo(jayq.core.__GT_selector.call(null, target))
};
jayq.core.insert_before = function insert_before($elem, target) {
  return $elem.insertBefore(jayq.core.__GT_selector.call(null, target))
};
jayq.core.insert_after = function insert_after($elem, target) {
  return $elem.insertAfter(jayq.core.__GT_selector.call(null, target))
};
jayq.core.replace_with = function replace_with($elem, content) {
  return $elem.replaceWith(content)
};
jayq.core.remove = function remove($elem) {
  return $elem.remove()
};
jayq.core.hide = function() {
  var hide__delegate = function($elem, p__7022) {
    var vec__7024 = p__7022;
    var speed = cljs.core.nth.call(null, vec__7024, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__7024, 1, null);
    return $elem.hide(speed, on_finish)
  };
  var hide = function($elem, var_args) {
    var p__7022 = null;
    if(arguments.length > 1) {
      p__7022 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return hide__delegate.call(this, $elem, p__7022)
  };
  hide.cljs$lang$maxFixedArity = 1;
  hide.cljs$lang$applyTo = function(arglist__7025) {
    var $elem = cljs.core.first(arglist__7025);
    var p__7022 = cljs.core.rest(arglist__7025);
    return hide__delegate($elem, p__7022)
  };
  hide.cljs$core$IFn$_invoke$arity$variadic = hide__delegate;
  return hide
}();
jayq.core.show = function() {
  var show__delegate = function($elem, p__7026) {
    var vec__7028 = p__7026;
    var speed = cljs.core.nth.call(null, vec__7028, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__7028, 1, null);
    return $elem.show(speed, on_finish)
  };
  var show = function($elem, var_args) {
    var p__7026 = null;
    if(arguments.length > 1) {
      p__7026 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return show__delegate.call(this, $elem, p__7026)
  };
  show.cljs$lang$maxFixedArity = 1;
  show.cljs$lang$applyTo = function(arglist__7029) {
    var $elem = cljs.core.first(arglist__7029);
    var p__7026 = cljs.core.rest(arglist__7029);
    return show__delegate($elem, p__7026)
  };
  show.cljs$core$IFn$_invoke$arity$variadic = show__delegate;
  return show
}();
jayq.core.toggle = function() {
  var toggle__delegate = function($elem, p__7030) {
    var vec__7032 = p__7030;
    var speed = cljs.core.nth.call(null, vec__7032, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__7032, 1, null);
    return $elem.toggle(speed, on_finish)
  };
  var toggle = function($elem, var_args) {
    var p__7030 = null;
    if(arguments.length > 1) {
      p__7030 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return toggle__delegate.call(this, $elem, p__7030)
  };
  toggle.cljs$lang$maxFixedArity = 1;
  toggle.cljs$lang$applyTo = function(arglist__7033) {
    var $elem = cljs.core.first(arglist__7033);
    var p__7030 = cljs.core.rest(arglist__7033);
    return toggle__delegate($elem, p__7030)
  };
  toggle.cljs$core$IFn$_invoke$arity$variadic = toggle__delegate;
  return toggle
}();
jayq.core.fade_out = function() {
  var fade_out__delegate = function($elem, p__7034) {
    var vec__7036 = p__7034;
    var speed = cljs.core.nth.call(null, vec__7036, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__7036, 1, null);
    return $elem.fadeOut(speed, on_finish)
  };
  var fade_out = function($elem, var_args) {
    var p__7034 = null;
    if(arguments.length > 1) {
      p__7034 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return fade_out__delegate.call(this, $elem, p__7034)
  };
  fade_out.cljs$lang$maxFixedArity = 1;
  fade_out.cljs$lang$applyTo = function(arglist__7037) {
    var $elem = cljs.core.first(arglist__7037);
    var p__7034 = cljs.core.rest(arglist__7037);
    return fade_out__delegate($elem, p__7034)
  };
  fade_out.cljs$core$IFn$_invoke$arity$variadic = fade_out__delegate;
  return fade_out
}();
jayq.core.fade_in = function() {
  var fade_in__delegate = function($elem, p__7038) {
    var vec__7040 = p__7038;
    var speed = cljs.core.nth.call(null, vec__7040, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__7040, 1, null);
    return $elem.fadeIn(speed, on_finish)
  };
  var fade_in = function($elem, var_args) {
    var p__7038 = null;
    if(arguments.length > 1) {
      p__7038 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return fade_in__delegate.call(this, $elem, p__7038)
  };
  fade_in.cljs$lang$maxFixedArity = 1;
  fade_in.cljs$lang$applyTo = function(arglist__7041) {
    var $elem = cljs.core.first(arglist__7041);
    var p__7038 = cljs.core.rest(arglist__7041);
    return fade_in__delegate($elem, p__7038)
  };
  fade_in.cljs$core$IFn$_invoke$arity$variadic = fade_in__delegate;
  return fade_in
}();
jayq.core.slide_up = function() {
  var slide_up__delegate = function($elem, p__7042) {
    var vec__7044 = p__7042;
    var speed = cljs.core.nth.call(null, vec__7044, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__7044, 1, null);
    return $elem.slideUp(speed, on_finish)
  };
  var slide_up = function($elem, var_args) {
    var p__7042 = null;
    if(arguments.length > 1) {
      p__7042 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return slide_up__delegate.call(this, $elem, p__7042)
  };
  slide_up.cljs$lang$maxFixedArity = 1;
  slide_up.cljs$lang$applyTo = function(arglist__7045) {
    var $elem = cljs.core.first(arglist__7045);
    var p__7042 = cljs.core.rest(arglist__7045);
    return slide_up__delegate($elem, p__7042)
  };
  slide_up.cljs$core$IFn$_invoke$arity$variadic = slide_up__delegate;
  return slide_up
}();
jayq.core.slide_down = function() {
  var slide_down__delegate = function($elem, p__7046) {
    var vec__7048 = p__7046;
    var speed = cljs.core.nth.call(null, vec__7048, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__7048, 1, null);
    return $elem.slideDown(speed, on_finish)
  };
  var slide_down = function($elem, var_args) {
    var p__7046 = null;
    if(arguments.length > 1) {
      p__7046 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return slide_down__delegate.call(this, $elem, p__7046)
  };
  slide_down.cljs$lang$maxFixedArity = 1;
  slide_down.cljs$lang$applyTo = function(arglist__7049) {
    var $elem = cljs.core.first(arglist__7049);
    var p__7046 = cljs.core.rest(arglist__7049);
    return slide_down__delegate($elem, p__7046)
  };
  slide_down.cljs$core$IFn$_invoke$arity$variadic = slide_down__delegate;
  return slide_down
}();
jayq.core.siblings = function() {
  var siblings = null;
  var siblings__1 = function($elem) {
    return $elem.siblings()
  };
  var siblings__2 = function($elem, selector) {
    return $elem.siblings(cljs.core.name.call(null, selector))
  };
  siblings = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return siblings__1.call(this, $elem);
      case 2:
        return siblings__2.call(this, $elem, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  siblings.cljs$core$IFn$_invoke$arity$1 = siblings__1;
  siblings.cljs$core$IFn$_invoke$arity$2 = siblings__2;
  return siblings
}();
jayq.core.parent = function parent($elem) {
  return $elem.parent()
};
jayq.core.parents = function() {
  var parents = null;
  var parents__1 = function($elem) {
    return $elem.parents()
  };
  var parents__2 = function($elem, selector) {
    return $elem.parents(cljs.core.name.call(null, selector))
  };
  parents = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, $elem);
      case 2:
        return parents__2.call(this, $elem, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents
}();
jayq.core.parents_until = function() {
  var parents_until = null;
  var parents_until__1 = function($elem) {
    return $elem.parentsUntil()
  };
  var parents_until__2 = function($elem, selector) {
    return $elem.parentsUntil(jayq.core.__GT_selector.call(null, selector))
  };
  var parents_until__3 = function($elem, selector, filtr) {
    return $elem.parentsUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr))
  };
  parents_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return parents_until__1.call(this, $elem);
      case 2:
        return parents_until__2.call(this, $elem, selector);
      case 3:
        return parents_until__3.call(this, $elem, selector, filtr)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents_until.cljs$core$IFn$_invoke$arity$1 = parents_until__1;
  parents_until.cljs$core$IFn$_invoke$arity$2 = parents_until__2;
  parents_until.cljs$core$IFn$_invoke$arity$3 = parents_until__3;
  return parents_until
}();
jayq.core.children = function() {
  var children = null;
  var children__1 = function($elem) {
    return $elem.children()
  };
  var children__2 = function($elem, selector) {
    return $elem.children(cljs.core.name.call(null, selector))
  };
  children = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return children__1.call(this, $elem);
      case 2:
        return children__2.call(this, $elem, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  children.cljs$core$IFn$_invoke$arity$1 = children__1;
  children.cljs$core$IFn$_invoke$arity$2 = children__2;
  return children
}();
jayq.core.next = function() {
  var next = null;
  var next__1 = function($elem) {
    return $elem.next()
  };
  var next__2 = function($elem, selector) {
    return $elem.next(cljs.core.name.call(null, selector))
  };
  next = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return next__1.call(this, $elem);
      case 2:
        return next__2.call(this, $elem, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next.cljs$core$IFn$_invoke$arity$1 = next__1;
  next.cljs$core$IFn$_invoke$arity$2 = next__2;
  return next
}();
jayq.core.prev = function() {
  var prev = null;
  var prev__1 = function($elem) {
    return $elem.prev()
  };
  var prev__2 = function($elem, selector) {
    return $elem.prev(cljs.core.name.call(null, selector))
  };
  prev = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return prev__1.call(this, $elem);
      case 2:
        return prev__2.call(this, $elem, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev.cljs$core$IFn$_invoke$arity$1 = prev__1;
  prev.cljs$core$IFn$_invoke$arity$2 = prev__2;
  return prev
}();
jayq.core.next_all = function() {
  var next_all = null;
  var next_all__1 = function($elem) {
    return $elem.nextAll()
  };
  var next_all__2 = function($elem, selector) {
    return $elem.nextAll(cljs.core.name.call(null, selector))
  };
  next_all = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return next_all__1.call(this, $elem);
      case 2:
        return next_all__2.call(this, $elem, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next_all.cljs$core$IFn$_invoke$arity$1 = next_all__1;
  next_all.cljs$core$IFn$_invoke$arity$2 = next_all__2;
  return next_all
}();
jayq.core.prev_all = function() {
  var prev_all = null;
  var prev_all__1 = function($elem) {
    return $elem.prevAll()
  };
  var prev_all__2 = function($elem, selector) {
    return $elem.prevAll(cljs.core.name.call(null, selector))
  };
  prev_all = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return prev_all__1.call(this, $elem);
      case 2:
        return prev_all__2.call(this, $elem, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev_all.cljs$core$IFn$_invoke$arity$1 = prev_all__1;
  prev_all.cljs$core$IFn$_invoke$arity$2 = prev_all__2;
  return prev_all
}();
jayq.core.next_until = function() {
  var next_until = null;
  var next_until__1 = function($elem) {
    return $elem.nextUntil()
  };
  var next_until__2 = function($elem, selector) {
    return $elem.nextUntil(jayq.core.__GT_selector.call(null, selector))
  };
  var next_until__3 = function($elem, selector, filtr) {
    return $elem.nextUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr))
  };
  next_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return next_until__1.call(this, $elem);
      case 2:
        return next_until__2.call(this, $elem, selector);
      case 3:
        return next_until__3.call(this, $elem, selector, filtr)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next_until.cljs$core$IFn$_invoke$arity$1 = next_until__1;
  next_until.cljs$core$IFn$_invoke$arity$2 = next_until__2;
  next_until.cljs$core$IFn$_invoke$arity$3 = next_until__3;
  return next_until
}();
jayq.core.prev_until = function() {
  var prev_until = null;
  var prev_until__1 = function($elem) {
    return $elem.prevUntil()
  };
  var prev_until__2 = function($elem, selector) {
    return $elem.prevUntil(jayq.core.__GT_selector.call(null, selector))
  };
  var prev_until__3 = function($elem, selector, filtr) {
    return $elem.prevUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr))
  };
  prev_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return prev_until__1.call(this, $elem);
      case 2:
        return prev_until__2.call(this, $elem, selector);
      case 3:
        return prev_until__3.call(this, $elem, selector, filtr)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev_until.cljs$core$IFn$_invoke$arity$1 = prev_until__1;
  prev_until.cljs$core$IFn$_invoke$arity$2 = prev_until__2;
  prev_until.cljs$core$IFn$_invoke$arity$3 = prev_until__3;
  return prev_until
}();
jayq.core.find = function find($elem, selector) {
  return $elem.find(cljs.core.name.call(null, selector))
};
jayq.core.closest = function() {
  var closest__delegate = function($elem, selector, p__7050) {
    var vec__7052 = p__7050;
    var context = cljs.core.nth.call(null, vec__7052, 0, null);
    return $elem.closest(jayq.core.__GT_selector.call(null, selector), context)
  };
  var closest = function($elem, selector, var_args) {
    var p__7050 = null;
    if(arguments.length > 2) {
      p__7050 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return closest__delegate.call(this, $elem, selector, p__7050)
  };
  closest.cljs$lang$maxFixedArity = 2;
  closest.cljs$lang$applyTo = function(arglist__7053) {
    var $elem = cljs.core.first(arglist__7053);
    arglist__7053 = cljs.core.next(arglist__7053);
    var selector = cljs.core.first(arglist__7053);
    var p__7050 = cljs.core.rest(arglist__7053);
    return closest__delegate($elem, selector, p__7050)
  };
  closest.cljs$core$IFn$_invoke$arity$variadic = closest__delegate;
  return closest
}();
jayq.core.clone = function clone($elem) {
  return $elem.clone()
};
jayq.core.html = function() {
  var html = null;
  var html__1 = function($elem) {
    return $elem.html()
  };
  var html__2 = function($elem, v) {
    return $elem.html(v)
  };
  html = function($elem, v) {
    switch(arguments.length) {
      case 1:
        return html__1.call(this, $elem);
      case 2:
        return html__2.call(this, $elem, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  html.cljs$core$IFn$_invoke$arity$1 = html__1;
  html.cljs$core$IFn$_invoke$arity$2 = html__2;
  return html
}();
jayq.core.inner = jayq.core.html;
jayq.core.empty = function empty($elem) {
  return $elem.empty()
};
jayq.core.val = function() {
  var val = null;
  var val__1 = function($elem) {
    return $elem.val()
  };
  var val__2 = function($elem, v) {
    return $elem.val(v)
  };
  val = function($elem, v) {
    switch(arguments.length) {
      case 1:
        return val__1.call(this, $elem);
      case 2:
        return val__2.call(this, $elem, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  val.cljs$core$IFn$_invoke$arity$1 = val__1;
  val.cljs$core$IFn$_invoke$arity$2 = val__2;
  return val
}();
jayq.core.serialize = function serialize($elem) {
  return $elem.serialize()
};
jayq.core.queue = function() {
  var queue = null;
  var queue__1 = function($elem) {
    return $elem.queue()
  };
  var queue__2 = function($elem, x) {
    return $elem.queue(x)
  };
  var queue__3 = function($elem, x, y) {
    return $elem.queue(x, y)
  };
  queue = function($elem, x, y) {
    switch(arguments.length) {
      case 1:
        return queue__1.call(this, $elem);
      case 2:
        return queue__2.call(this, $elem, x);
      case 3:
        return queue__3.call(this, $elem, x, y)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  queue.cljs$core$IFn$_invoke$arity$1 = queue__1;
  queue.cljs$core$IFn$_invoke$arity$2 = queue__2;
  queue.cljs$core$IFn$_invoke$arity$3 = queue__3;
  return queue
}();
jayq.core.dequeue = function() {
  var dequeue = null;
  var dequeue__1 = function($elem) {
    return $elem.dequeue()
  };
  var dequeue__2 = function($elem, queue_name) {
    return $elem.dequeue(queue_name)
  };
  dequeue = function($elem, queue_name) {
    switch(arguments.length) {
      case 1:
        return dequeue__1.call(this, $elem);
      case 2:
        return dequeue__2.call(this, $elem, queue_name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dequeue.cljs$core$IFn$_invoke$arity$1 = dequeue__1;
  dequeue.cljs$core$IFn$_invoke$arity$2 = dequeue__2;
  return dequeue
}();
jayq.core.document_ready = function document_ready(func) {
  return jayq.core.$.call(null, document).ready(func)
};
jayq.core.mimetype_converter = function mimetype_converter(s) {
  return cljs.reader.read_string.call(null, [cljs.core.str(s)].join(""))
};
jQuery.ajaxSetup(cljs.core.clj__GT_js.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:accepts", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:edn", "application/edn, text/edn", "\ufdd0:clojure", "application/clojure, text/clojure"], true), "\ufdd0:contents", cljs.core.PersistentArrayMap.fromArray(["clojure", /edn|clojure/], true), "\ufdd0:converters", cljs.core.PersistentArrayMap.fromArray(["text edn", jayq.core.mimetype_converter, "text clojure", jayq.core.mimetype_converter], true)], 
true)));
jayq.core.clj_content_type_QMARK_ = function clj_content_type_QMARK_(x) {
  return cljs.core.re_find.call(null, /^(text|application)\/(clojure|edn)/, x)
};
jayq.core.__GT_content_type = function __GT_content_type(ct) {
  if(cljs.core.string_QMARK_.call(null, ct)) {
    return ct
  }else {
    if(cljs.core.keyword_QMARK_.call(null, ct)) {
      return cljs.core.subs.call(null, [cljs.core.str(ct)].join(""), 1)
    }else {
      return null
    }
  }
};
jayq.core.preprocess_request = function preprocess_request(p__7056) {
  var map__7058 = p__7056;
  var map__7058__$1 = cljs.core.seq_QMARK_.call(null, map__7058) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7058) : map__7058;
  var request = map__7058__$1;
  var contentType = cljs.core.get.call(null, map__7058__$1, "\ufdd0:contentType");
  var data = cljs.core.get.call(null, map__7058__$1, "\ufdd0:data");
  var ct = jayq.core.__GT_content_type.call(null, contentType);
  return function(p1__7055_SHARP_) {
    if(cljs.core.truth_(jayq.core.clj_content_type_QMARK_.call(null, ct))) {
      return cljs.core.assoc.call(null, p1__7055_SHARP_, "\ufdd0:data", cljs.core.pr_str.call(null, data))
    }else {
      return p1__7055_SHARP_
    }
  }.call(null, function(p1__7054_SHARP_) {
    if(cljs.core.truth_(ct)) {
      return cljs.core.assoc.call(null, p1__7054_SHARP_, "\ufdd0:contentType", ct)
    }else {
      return p1__7054_SHARP_
    }
  }.call(null, request))
};
jayq.core.__GT_ajax_settings = function __GT_ajax_settings(request) {
  return cljs.core.clj__GT_js.call(null, jayq.core.preprocess_request.call(null, request))
};
jayq.core.ajax = function() {
  var ajax = null;
  var ajax__1 = function(settings) {
    return jQuery.ajax(jayq.core.__GT_ajax_settings.call(null, settings))
  };
  var ajax__2 = function(url, settings) {
    return jQuery.ajax(url, jayq.core.__GT_ajax_settings.call(null, settings))
  };
  ajax = function(url, settings) {
    switch(arguments.length) {
      case 1:
        return ajax__1.call(this, url);
      case 2:
        return ajax__2.call(this, url, settings)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax.cljs$core$IFn$_invoke$arity$1 = ajax__1;
  ajax.cljs$core$IFn$_invoke$arity$2 = ajax__2;
  return ajax
}();
jayq.core.xhr = function xhr(p__7059, content, callback) {
  var vec__7061 = p__7059;
  var method = cljs.core.nth.call(null, vec__7061, 0, null);
  var uri = cljs.core.nth.call(null, vec__7061, 1, null);
  var params = cljs.core.clj__GT_js.call(null, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:type", clojure.string.upper_case.call(null, cljs.core.name.call(null, method)), "\ufdd0:data", cljs.core.clj__GT_js.call(null, content), "\ufdd0:success", callback], true));
  return jQuery.ajax(uri, params)
};
jayq.core.read = function read($elem) {
  return cljs.reader.read_string.call(null, jayq.core.html.call(null, $elem))
};
jayq.core.bind = function bind($elem, ev, func) {
  return $elem.bind(cljs.core.name.call(null, ev), func)
};
jayq.core.unbind = function() {
  var unbind__delegate = function($elem, ev, p__7062) {
    var vec__7064 = p__7062;
    var func = cljs.core.nth.call(null, vec__7064, 0, null);
    return $elem.unbind(cljs.core.name.call(null, ev), func)
  };
  var unbind = function($elem, ev, var_args) {
    var p__7062 = null;
    if(arguments.length > 2) {
      p__7062 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unbind__delegate.call(this, $elem, ev, p__7062)
  };
  unbind.cljs$lang$maxFixedArity = 2;
  unbind.cljs$lang$applyTo = function(arglist__7065) {
    var $elem = cljs.core.first(arglist__7065);
    arglist__7065 = cljs.core.next(arglist__7065);
    var ev = cljs.core.first(arglist__7065);
    var p__7062 = cljs.core.rest(arglist__7065);
    return unbind__delegate($elem, ev, p__7062)
  };
  unbind.cljs$core$IFn$_invoke$arity$variadic = unbind__delegate;
  return unbind
}();
jayq.core.trigger = function trigger($elem, ev) {
  return $elem.trigger(cljs.core.name.call(null, ev))
};
jayq.core.delegate = function delegate($elem, sel, ev, func) {
  return $elem.delegate(jayq.core.__GT_selector.call(null, sel), cljs.core.name.call(null, ev), func)
};
jayq.core.__GT_event = function __GT_event(e) {
  if(cljs.core.coll_QMARK_.call(null, e)) {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, cljs.core.name, e))
  }else {
    return cljs.core.clj__GT_js.call(null, e)
  }
};
jayq.core.on = function() {
  var on__delegate = function($elem, events, p__7066) {
    var vec__7068 = p__7066;
    var sel = cljs.core.nth.call(null, vec__7068, 0, null);
    var data = cljs.core.nth.call(null, vec__7068, 1, null);
    var handler = cljs.core.nth.call(null, vec__7068, 2, null);
    return $elem.on(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel), data, handler)
  };
  var on = function($elem, events, var_args) {
    var p__7066 = null;
    if(arguments.length > 2) {
      p__7066 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return on__delegate.call(this, $elem, events, p__7066)
  };
  on.cljs$lang$maxFixedArity = 2;
  on.cljs$lang$applyTo = function(arglist__7069) {
    var $elem = cljs.core.first(arglist__7069);
    arglist__7069 = cljs.core.next(arglist__7069);
    var events = cljs.core.first(arglist__7069);
    var p__7066 = cljs.core.rest(arglist__7069);
    return on__delegate($elem, events, p__7066)
  };
  on.cljs$core$IFn$_invoke$arity$variadic = on__delegate;
  return on
}();
jayq.core.one = function() {
  var one__delegate = function($elem, events, p__7070) {
    var vec__7072 = p__7070;
    var sel = cljs.core.nth.call(null, vec__7072, 0, null);
    var data = cljs.core.nth.call(null, vec__7072, 1, null);
    var handler = cljs.core.nth.call(null, vec__7072, 2, null);
    return $elem.one(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel), data, handler)
  };
  var one = function($elem, events, var_args) {
    var p__7070 = null;
    if(arguments.length > 2) {
      p__7070 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return one__delegate.call(this, $elem, events, p__7070)
  };
  one.cljs$lang$maxFixedArity = 2;
  one.cljs$lang$applyTo = function(arglist__7073) {
    var $elem = cljs.core.first(arglist__7073);
    arglist__7073 = cljs.core.next(arglist__7073);
    var events = cljs.core.first(arglist__7073);
    var p__7070 = cljs.core.rest(arglist__7073);
    return one__delegate($elem, events, p__7070)
  };
  one.cljs$core$IFn$_invoke$arity$variadic = one__delegate;
  return one
}();
jayq.core.off = function() {
  var off__delegate = function($elem, events, p__7074) {
    var vec__7076 = p__7074;
    var sel = cljs.core.nth.call(null, vec__7076, 0, null);
    var handler = cljs.core.nth.call(null, vec__7076, 1, null);
    return $elem.off(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel), handler)
  };
  var off = function($elem, events, var_args) {
    var p__7074 = null;
    if(arguments.length > 2) {
      p__7074 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return off__delegate.call(this, $elem, events, p__7074)
  };
  off.cljs$lang$maxFixedArity = 2;
  off.cljs$lang$applyTo = function(arglist__7077) {
    var $elem = cljs.core.first(arglist__7077);
    arglist__7077 = cljs.core.next(arglist__7077);
    var events = cljs.core.first(arglist__7077);
    var p__7074 = cljs.core.rest(arglist__7077);
    return off__delegate($elem, events, p__7074)
  };
  off.cljs$core$IFn$_invoke$arity$variadic = off__delegate;
  return off
}();
jayq.core.prevent = function prevent(e) {
  return e.preventDefault()
};
jayq.core.height = function() {
  var height = null;
  var height__1 = function($elem) {
    return $elem.height()
  };
  var height__2 = function($elem, x) {
    return $elem.height(x)
  };
  height = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return height__1.call(this, $elem);
      case 2:
        return height__2.call(this, $elem, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  height.cljs$core$IFn$_invoke$arity$1 = height__1;
  height.cljs$core$IFn$_invoke$arity$2 = height__2;
  return height
}();
jayq.core.width = function() {
  var width = null;
  var width__1 = function($elem) {
    return $elem.width()
  };
  var width__2 = function($elem, x) {
    return $elem.width(x)
  };
  width = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return width__1.call(this, $elem);
      case 2:
        return width__2.call(this, $elem, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  width.cljs$core$IFn$_invoke$arity$1 = width__1;
  width.cljs$core$IFn$_invoke$arity$2 = width__2;
  return width
}();
jayq.core.inner_height = function inner_height($elem) {
  return $elem.innerHeight()
};
jayq.core.inner_width = function inner_width($elem) {
  return $elem.innerWidth()
};
jayq.core.outer_height = function outer_height($elem) {
  return $elem.outerHeight()
};
jayq.core.outer_width = function outer_width($elem) {
  return $elem.outerWidth()
};
jayq.core.offset = function() {
  var offset = null;
  var offset__1 = function($elem) {
    return cljs.core.js__GT_clj.call(null, $elem.offset(), "\ufdd0:keywordize-keys", true)
  };
  var offset__2 = function($elem, coords) {
    return cljs.core.clj__GT_js.call(null, coords).offset()
  };
  offset = function($elem, coords) {
    switch(arguments.length) {
      case 1:
        return offset__1.call(this, $elem);
      case 2:
        return offset__2.call(this, $elem, coords)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  offset.cljs$core$IFn$_invoke$arity$1 = offset__1;
  offset.cljs$core$IFn$_invoke$arity$2 = offset__2;
  return offset
}();
jayq.core.offset_parent = function offset_parent($elem) {
  return $elem.offsetParent()
};
jayq.core.position = function position($elem) {
  return cljs.core.js__GT_clj.call(null, $elem.position(), "\ufdd0:keywordize-keys", true)
};
jayq.core.scroll_left = function() {
  var scroll_left = null;
  var scroll_left__1 = function($elem) {
    return $elem.scrollLeft()
  };
  var scroll_left__2 = function($elem, x) {
    return $elem.scrollLeft(x)
  };
  scroll_left = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return scroll_left__1.call(this, $elem);
      case 2:
        return scroll_left__2.call(this, $elem, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scroll_left.cljs$core$IFn$_invoke$arity$1 = scroll_left__1;
  scroll_left.cljs$core$IFn$_invoke$arity$2 = scroll_left__2;
  return scroll_left
}();
jayq.core.scroll_top = function() {
  var scroll_top = null;
  var scroll_top__1 = function($elem) {
    return $elem.scrollTop()
  };
  var scroll_top__2 = function($elem, x) {
    return $elem.scrollTop(x)
  };
  scroll_top = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return scroll_top__1.call(this, $elem);
      case 2:
        return scroll_top__2.call(this, $elem, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scroll_top.cljs$core$IFn$_invoke$arity$1 = scroll_top__1;
  scroll_top.cljs$core$IFn$_invoke$arity$2 = scroll_top__2;
  return scroll_top
}();
jayq.core.$deferred = $.Deferred;
jayq.core.$when = $.when;
jayq.core.then = function() {
  var then = null;
  var then__3 = function(deferred, done_fn, fail_fn) {
    return deferred.then(cljs.core.clj__GT_js.call(null, done_fn), cljs.core.clj__GT_js.call(null, fail_fn))
  };
  var then__4 = function(deferred, done_fn, fail_fn, progress_fn) {
    return deferred.then(cljs.core.clj__GT_js.call(null, done_fn), cljs.core.clj__GT_js.call(null, fail_fn), cljs.core.clj__GT_js.call(null, progress_fn))
  };
  then = function(deferred, done_fn, fail_fn, progress_fn) {
    switch(arguments.length) {
      case 3:
        return then__3.call(this, deferred, done_fn, fail_fn);
      case 4:
        return then__4.call(this, deferred, done_fn, fail_fn, progress_fn)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  then.cljs$core$IFn$_invoke$arity$3 = then__3;
  then.cljs$core$IFn$_invoke$arity$4 = then__4;
  return then
}();
jayq.core.done = function() {
  var done__delegate = function(deferred, fns_args) {
    return deferred.done.apply(deferred, cljs.core.clj__GT_js.call(null, fns_args))
  };
  var done = function(deferred, var_args) {
    var fns_args = null;
    if(arguments.length > 1) {
      fns_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return done__delegate.call(this, deferred, fns_args)
  };
  done.cljs$lang$maxFixedArity = 1;
  done.cljs$lang$applyTo = function(arglist__7078) {
    var deferred = cljs.core.first(arglist__7078);
    var fns_args = cljs.core.rest(arglist__7078);
    return done__delegate(deferred, fns_args)
  };
  done.cljs$core$IFn$_invoke$arity$variadic = done__delegate;
  return done
}();
jayq.core.fail = function() {
  var fail__delegate = function(deferred, fns_args) {
    return deferred.fail.apply(deferred, cljs.core.clj__GT_js.call(null, fns_args))
  };
  var fail = function(deferred, var_args) {
    var fns_args = null;
    if(arguments.length > 1) {
      fns_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return fail__delegate.call(this, deferred, fns_args)
  };
  fail.cljs$lang$maxFixedArity = 1;
  fail.cljs$lang$applyTo = function(arglist__7079) {
    var deferred = cljs.core.first(arglist__7079);
    var fns_args = cljs.core.rest(arglist__7079);
    return fail__delegate(deferred, fns_args)
  };
  fail.cljs$core$IFn$_invoke$arity$variadic = fail__delegate;
  return fail
}();
jayq.core.progress = function progress(deferred, fns_args) {
  return deferred.progress(cljs.core.clj__GT_js.call(null, fns_args))
};
jayq.core.promise = function() {
  var promise = null;
  var promise__1 = function(deferred) {
    return deferred.promise()
  };
  var promise__2 = function(deferred, type) {
    return deferred.promise(type)
  };
  var promise__3 = function(deferred, type, target) {
    return deferred.promise(type, target)
  };
  promise = function(deferred, type, target) {
    switch(arguments.length) {
      case 1:
        return promise__1.call(this, deferred);
      case 2:
        return promise__2.call(this, deferred, type);
      case 3:
        return promise__3.call(this, deferred, type, target)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  promise.cljs$core$IFn$_invoke$arity$1 = promise__1;
  promise.cljs$core$IFn$_invoke$arity$2 = promise__2;
  promise.cljs$core$IFn$_invoke$arity$3 = promise__3;
  return promise
}();
jayq.core.always = function() {
  var always__delegate = function(deferred, fns_args) {
    return deferred.always.apply(deferred, cljs.core.clj__GT_js.call(null, fns_args))
  };
  var always = function(deferred, var_args) {
    var fns_args = null;
    if(arguments.length > 1) {
      fns_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return always__delegate.call(this, deferred, fns_args)
  };
  always.cljs$lang$maxFixedArity = 1;
  always.cljs$lang$applyTo = function(arglist__7080) {
    var deferred = cljs.core.first(arglist__7080);
    var fns_args = cljs.core.rest(arglist__7080);
    return always__delegate(deferred, fns_args)
  };
  always.cljs$core$IFn$_invoke$arity$variadic = always__delegate;
  return always
}();
jayq.core.reject = function reject(deferred, args) {
  return deferred.reject(args)
};
jayq.core.reject_with = function reject_with(deferred, context, args) {
  return deferred.rejectWith(context, args)
};
jayq.core.notify = function notify(deferred, args) {
  return deferred.notify(args)
};
jayq.core.notify_with = function notify_with(deferred, context, args) {
  return deferred.notifyWith(context, args)
};
jayq.core.resolve = function resolve(deferred, args) {
  return deferred.resolve(args)
};
jayq.core.resolve_with = function resolve_with(deferred, context, args) {
  return deferred.resolveWith(context, args)
};
jayq.core.pipe = function() {
  var pipe = null;
  var pipe__2 = function(deferred, done_filter) {
    return deferred.pipe(done_filter)
  };
  var pipe__3 = function(deferred, done_filter, fail_filter) {
    return deferred.pipe(done_filter, fail_filter)
  };
  var pipe__4 = function(deferred, done_filter, fail_filter, progress_filter) {
    return deferred.pipe(done_filter, fail_filter, progress_filter)
  };
  pipe = function(deferred, done_filter, fail_filter, progress_filter) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, deferred, done_filter);
      case 3:
        return pipe__3.call(this, deferred, done_filter, fail_filter);
      case 4:
        return pipe__4.call(this, deferred, done_filter, fail_filter, progress_filter)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  pipe.cljs$core$IFn$_invoke$arity$4 = pipe__4;
  return pipe
}();
jayq.core.state = function state(deferred) {
  return cljs.core.keyword.call(null, deferred.state())
};
jayq.core.deferred_m = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:return", jayq.core.$when, "\ufdd0:bind", function deferred_m(x, f) {
  var dfd = jayq.core.$deferred.call(null);
  jayq.core.done.call(null, x, function(v) {
    return jayq.core.done.call(null, f.call(null, v), cljs.core.partial.call(null, jayq.core.resolve, dfd))
  });
  return jayq.core.promise.call(null, dfd)
}, "\ufdd0:zero", cljs.core.identity], true);
jayq.core.ajax_m = cljs.core.PersistentArrayMap.fromArray(["\ufdd0:return", cljs.core.identity, "\ufdd0:bind", function ajax_m(x, f) {
  return jayq.core.done.call(null, jayq.core.ajax.call(null, x), f)
}, "\ufdd0:zero", cljs.core.identity], true);
goog.provide("lsc_app.coinc_cross");
goog.require("cljs.core");
goog.require("lsc_web.utils");
goog.require("lsc_web.cross");
goog.require("clojure.string");
goog.require("lsc_web.plots");
goog.require("jayq.core");
goog.require("clojure.string");
goog.require("cljs.core.async");
goog.require("lsc_web.cross");
goog.require("lsc_web.utils");
goog.require("lsc_web.plots");
goog.require("lsc_web.data");
lsc_app.coinc_cross.load_coincs = function load_coincs(group) {
  var url = [cljs.core.str(definitions.webRoot), cljs.core.str("/coinc/group/"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, group)), cljs.core.str("/all")].join("");
  var out = cljs.core.async.chan.call(null, 1);
  var data_chan = lsc_web.data.unwrap_result.call(null, lsc_web.data.load_json.call(null, url));
  var c__4701__auto___5954 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4702__auto__ = function() {
      var switch__4627__auto__ = function(state_5948) {
        var state_val_5949 = state_5948[1];
        if(state_val_5949 === 3) {
          var inst_5945 = state_5948[2];
          var inst_5946 = cljs.core.async.close_BANG_.call(null, out);
          var state_5948__$1 = function() {
            var statearr_5950 = state_5948;
            statearr_5950[5] = inst_5945;
            return statearr_5950
          }();
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5948__$1, inst_5946)
        }else {
          if(state_val_5949 === 2) {
            var inst_5942 = state_5948[2];
            var inst_5943 = inst_5942.coincs;
            var state_5948__$1 = state_5948;
            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_5948__$1, 3, out, inst_5943)
          }else {
            if(state_val_5949 === 1) {
              var state_5948__$1 = state_5948;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5948__$1, 2, data_chan)
            }else {
              return null
            }
          }
        }
      };
      return function(switch__4627__auto__) {
        return function() {
          var state_machine__4628__auto__ = null;
          var state_machine__4628__auto____0 = function() {
            var statearr_5952 = new Array(6);
            statearr_5952[0] = state_machine__4628__auto__;
            statearr_5952[1] = 1;
            return statearr_5952
          };
          var state_machine__4628__auto____1 = function(state_5948) {
            while(true) {
              var result__4629__auto__ = switch__4627__auto__.call(null, state_5948);
              if(result__4629__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4629__auto__
              }
              break
            }
          };
          state_machine__4628__auto__ = function(state_5948) {
            switch(arguments.length) {
              case 0:
                return state_machine__4628__auto____0.call(this);
              case 1:
                return state_machine__4628__auto____1.call(this, state_5948)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4628__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4628__auto____0;
          state_machine__4628__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4628__auto____1;
          return state_machine__4628__auto__
        }()
      }(switch__4627__auto__)
    }();
    var state__4703__auto__ = function() {
      var statearr_5953 = f__4702__auto__.call(null);
      statearr_5953[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4701__auto___5954;
      return statearr_5953
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state__4703__auto__)
  });
  return out
};
lsc_app.coinc_cross.get_group = function get_group() {
  return cljs.core.js__GT_clj.call(null, definitions.group, "\ufdd0:keywordize-keys", true)
};
lsc_app.coinc_cross.map_over_values = function map_over_values(f, m) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
    var iter__3042__auto__ = function iter__5963(s__5964) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__5964__$1 = s__5964;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__5964__$1);
          if(temp__4092__auto__) {
            var s__5964__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__5964__$2)) {
              var c__3040__auto__ = cljs.core.chunk_first.call(null, s__5964__$2);
              var size__3041__auto__ = cljs.core.count.call(null, c__3040__auto__);
              var b__5966 = cljs.core.chunk_buffer.call(null, size__3041__auto__);
              if(function() {
                var i__5965 = 0;
                while(true) {
                  if(i__5965 < size__3041__auto__) {
                    var vec__5969 = cljs.core._nth.call(null, c__3040__auto__, i__5965);
                    var key = cljs.core.nth.call(null, vec__5969, 0, null);
                    var value = cljs.core.nth.call(null, vec__5969, 1, null);
                    cljs.core.chunk_append.call(null, b__5966, cljs.core.PersistentVector.fromArray([key, f.call(null, value)], true));
                    var G__5971 = i__5965 + 1;
                    i__5965 = G__5971;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5966), iter__5963.call(null, cljs.core.chunk_rest.call(null, s__5964__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5966), null)
              }
            }else {
              var vec__5970 = cljs.core.first.call(null, s__5964__$2);
              var key = cljs.core.nth.call(null, vec__5970, 0, null);
              var value = cljs.core.nth.call(null, vec__5970, 1, null);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([key, f.call(null, value)], true), iter__5963.call(null, cljs.core.rest.call(null, s__5964__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3042__auto__.call(null, m)
  }())
};
lsc_app.coinc_cross.map_over_key_values = function map_over_key_values(f, m) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
    var iter__3042__auto__ = function iter__5980(s__5981) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__5981__$1 = s__5981;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__5981__$1);
          if(temp__4092__auto__) {
            var s__5981__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__5981__$2)) {
              var c__3040__auto__ = cljs.core.chunk_first.call(null, s__5981__$2);
              var size__3041__auto__ = cljs.core.count.call(null, c__3040__auto__);
              var b__5983 = cljs.core.chunk_buffer.call(null, size__3041__auto__);
              if(function() {
                var i__5982 = 0;
                while(true) {
                  if(i__5982 < size__3041__auto__) {
                    var vec__5986 = cljs.core._nth.call(null, c__3040__auto__, i__5982);
                    var key = cljs.core.nth.call(null, vec__5986, 0, null);
                    var value = cljs.core.nth.call(null, vec__5986, 1, null);
                    cljs.core.chunk_append.call(null, b__5983, cljs.core.PersistentVector.fromArray([key, f.call(null, key, value)], true));
                    var G__5988 = i__5982 + 1;
                    i__5982 = G__5988;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5983), iter__5980.call(null, cljs.core.chunk_rest.call(null, s__5981__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__5983), null)
              }
            }else {
              var vec__5987 = cljs.core.first.call(null, s__5981__$2);
              var key = cljs.core.nth.call(null, vec__5987, 0, null);
              var value = cljs.core.nth.call(null, vec__5987, 1, null);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([key, f.call(null, key, value)], true), iter__5980.call(null, cljs.core.rest.call(null, s__5981__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3042__auto__.call(null, m)
  }())
};
lsc_app.coinc_cross.mean = function mean(xs) {
  return cljs.core.apply.call(null, cljs.core._PLUS_, xs) / cljs.core.count.call(null, xs)
};
lsc_app.coinc_cross.time_series_url = function time_series_url(group, coinc) {
  return[cljs.core.str(definitions.webRoot), cljs.core.str("/coinc/group/"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, group)), cljs.core.str("/time-series/"), cljs.core.str(coinc.id)].join("")
};
lsc_app.coinc_cross.make_data_set = function make_data_set(group, coincs) {
  var cross = lsc_web.cross.cross.call(null, coincs);
  var get_date = function(cross) {
    return function(p1__5989_SHARP_) {
      return new Date(lsc_web.utils.gps__GT_unix.call(null, cljs.core.first.call(null, p1__5989_SHARP_.times)) * 1E3)
    }
  }(cross);
  var channel_ids = cljs.core.to_array.call(null, cljs.core.map.call(null, "\ufdd0:id", (new cljs.core.Keyword("\ufdd0:channels")).call(null, group)));
  var array_dim = function(cross, get_date, channel_ids) {
    return function(name, array_func, format, width) {
      return cljs.core.apply.call(null, cljs.core.vector, function() {
        var iter__3042__auto__ = function(cross, get_date, channel_ids) {
          return function iter__6020(s__6021) {
            return new cljs.core.LazySeq(null, false, function(cross, get_date, channel_ids) {
              return function() {
                var s__6021__$1 = s__6021;
                while(true) {
                  var temp__4092__auto__ = cljs.core.seq.call(null, s__6021__$1);
                  if(temp__4092__auto__) {
                    var s__6021__$2 = temp__4092__auto__;
                    if(cljs.core.chunked_seq_QMARK_.call(null, s__6021__$2)) {
                      var c__3040__auto__ = cljs.core.chunk_first.call(null, s__6021__$2);
                      var size__3041__auto__ = cljs.core.count.call(null, c__3040__auto__);
                      var b__6023 = cljs.core.chunk_buffer.call(null, size__3041__auto__);
                      if(function() {
                        var i__6022 = 0;
                        while(true) {
                          if(i__6022 < size__3041__auto__) {
                            var chan = cljs.core._nth.call(null, c__3040__auto__, i__6022);
                            cljs.core.chunk_append.call(null, b__6023, lsc_web.cross.field.call(null, "\ufdd0:name", [cljs.core.str("#"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, chan)), cljs.core.str(" "), cljs.core.str(name)].join(""), "\ufdd0:dimension", lsc_web.cross.dimension.call(null, cross, function(i__6022, chan, c__3040__auto__, size__3041__auto__, b__6023, s__6021__$2, temp__4092__auto__, cross, get_date, channel_ids) {
                              return function(coinc) {
                                var index = coinc.channel_ids.indexOf((new cljs.core.Keyword("\ufdd0:id")).call(null, chan));
                                if(cljs.core._EQ_.call(null, index, -1)) {
                                  return-1
                                }else {
                                  return array_func.call(null, coinc)[index]
                                }
                              }
                            }(i__6022, chan, c__3040__auto__, size__3041__auto__, b__6023, s__6021__$2, temp__4092__auto__, cross, get_date, channel_ids)), "\ufdd0:views", cljs.core.PersistentVector.fromArray([lsc_web.cross.column_view.call(null, "\ufdd0:format", function(i__6022, chan, c__3040__auto__, size__3041__auto__, b__6023, s__6021__$2, temp__4092__auto__, cross, get_date, channel_ids) {
                              return function(p1__5990_SHARP_) {
                                if(cljs.core._EQ_.call(null, p1__5990_SHARP_, -1)) {
                                  return"---"
                                }else {
                                  return format.call(null, p1__5990_SHARP_)
                                }
                              }
                            }(i__6022, chan, c__3040__auto__, size__3041__auto__, b__6023, s__6021__$2, temp__4092__auto__, cross, get_date, channel_ids), "\ufdd0:width", width)], true)));
                            var G__6038 = i__6022 + 1;
                            i__6022 = G__6038;
                            continue
                          }else {
                            return true
                          }
                          break
                        }
                      }()) {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6023), iter__6020.call(null, cljs.core.chunk_rest.call(null, s__6021__$2)))
                      }else {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6023), null)
                      }
                    }else {
                      var chan = cljs.core.first.call(null, s__6021__$2);
                      return cljs.core.cons.call(null, lsc_web.cross.field.call(null, "\ufdd0:name", [cljs.core.str("#"), cljs.core.str((new cljs.core.Keyword("\ufdd0:id")).call(null, chan)), cljs.core.str(" "), cljs.core.str(name)].join(""), "\ufdd0:dimension", lsc_web.cross.dimension.call(null, cross, function(chan, s__6021__$2, temp__4092__auto__, cross, get_date, channel_ids) {
                        return function(coinc) {
                          var index = coinc.channel_ids.indexOf((new cljs.core.Keyword("\ufdd0:id")).call(null, chan));
                          if(cljs.core._EQ_.call(null, index, -1)) {
                            return-1
                          }else {
                            return array_func.call(null, coinc)[index]
                          }
                        }
                      }(chan, s__6021__$2, temp__4092__auto__, cross, get_date, channel_ids)), "\ufdd0:views", cljs.core.PersistentVector.fromArray([lsc_web.cross.column_view.call(null, "\ufdd0:format", function(chan, s__6021__$2, temp__4092__auto__, cross, get_date, channel_ids) {
                        return function(p1__5990_SHARP_) {
                          if(cljs.core._EQ_.call(null, p1__5990_SHARP_, -1)) {
                            return"---"
                          }else {
                            return format.call(null, p1__5990_SHARP_)
                          }
                        }
                      }(chan, s__6021__$2, temp__4092__auto__, cross, get_date, channel_ids), "\ufdd0:width", width)], true)), iter__6020.call(null, cljs.core.rest.call(null, s__6021__$2)))
                    }
                  }else {
                    return null
                  }
                  break
                }
              }
            }(cross, get_date, channel_ids), null)
          }
        }(cross, get_date, channel_ids);
        return iter__3042__auto__.call(null, (new cljs.core.Keyword("\ufdd0:channels")).call(null, group))
      }())
    }
  }(cross, get_date, channel_ids);
  return lsc_web.cross.data_set.call(null, cross, lsc_web.cross.field.call(null, "\ufdd0:name", "Time [UTC]", "\ufdd0:dimension", lsc_web.cross.dimension.call(null, cross, get_date), "\ufdd0:views", cljs.core.PersistentVector.fromArray([lsc_web.cross.time_bar_view.call(null, "\ufdd0:domain", cljs.core.PersistentVector.fromArray([get_date.call(null, cljs.core.first.call(null, coincs)), get_date.call(null, cljs.core.last.call(null, coincs))], true), "\ufdd0:grouping", "\ufdd0:hour", "\ufdd0:size", 
  "\ufdd0:medium"), lsc_web.cross.column_view.call(null, "\ufdd0:format", lsc_web.plots.d3.time.format.utc("%H:%M:%S.%L"), "\ufdd0:width", 80)], true)), lsc_web.cross.field.call(null, "\ufdd0:name", "Duration [s]", "\ufdd0:dimension", lsc_web.cross.dimension.call(null, cross, function(p1__5991_SHARP_) {
    return p1__5991_SHARP_.time_max - p1__5991_SHARP_.time_min
  }), "\ufdd0:views", cljs.core.PersistentVector.fromArray([lsc_web.cross.bar_view.call(null, "\ufdd0:domain", cljs.core.PersistentVector.fromArray([0, 100], true), "\ufdd0:grouping", lsc_web.utils.floor, "\ufdd0:size", "\ufdd0:medium"), lsc_web.cross.column_view.call(null, "\ufdd0:format", lsc_web.plots.d3.format(".2f"), "\ufdd0:width", 60)], true)), lsc_web.cross.field.call(null, "\ufdd0:name", "Max SNR", "\ufdd0:dimension", lsc_web.cross.dimension.call(null, cross, function(p1__5992_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.max, p1__5992_SHARP_.snrs)
  }), "\ufdd0:views", cljs.core.PersistentVector.fromArray([lsc_web.cross.bar_view.call(null, "\ufdd0:domain", cljs.core.PersistentVector.fromArray([6, 25], true), "\ufdd0:bar-width", 0.25, "\ufdd0:size", "\ufdd0:medium"), lsc_web.cross.column_view.call(null, "\ufdd0:format", lsc_web.plots.d3.format(".1f"), "\ufdd0:width", 50)], true)), lsc_web.cross.field.call(null, "\ufdd0:name", "SNR Ratio", "\ufdd0:dimension", lsc_web.cross.dimension.call(null, cross, function(coinc) {
    var first_snr = cljs.core.first.call(null, coinc.snrs);
    var last_snr = cljs.core.last.call(null, coinc.snrs);
    if(first_snr > 0) {
      return last_snr / first_snr
    }else {
      return 1.2
    }
  }), "\ufdd0:views", cljs.core.PersistentVector.fromArray([lsc_web.cross.bar_view.call(null, "\ufdd0:domain", cljs.core.PersistentVector.fromArray([0.8, 1.2], true), "\ufdd0:bar-width", 0.01, "\ufdd0:size", "\ufdd0:medium"), lsc_web.cross.column_view.call(null, "\ufdd0:format", lsc_web.plots.d3.format(".2f"), "\ufdd0:width", 50)], true)), lsc_web.cross.field.call(null, "\ufdd0:name", "Chain Length", "\ufdd0:dimension", lsc_web.cross.dimension.call(null, cross, function(p1__5993_SHARP_) {
    return p1__5993_SHARP_.length
  }), "\ufdd0:views", cljs.core.PersistentVector.fromArray([lsc_web.cross.bar_view.call(null, "\ufdd0:domain", cljs.core.PersistentVector.fromArray([2, cljs.core.count.call(null, (new cljs.core.Keyword("\ufdd0:channels")).call(null, group))], true), "\ufdd0:size", "\ufdd0:small"), lsc_web.cross.column_view.call(null, "\ufdd0:width", 50)], true)), lsc_web.cross.field.call(null, "\ufdd0:name", "Start Channel", "\ufdd0:dimension", lsc_web.cross.dimension.call(null, cross, function(p1__5994_SHARP_) {
    return channel_ids.indexOf(cljs.core.first.call(null, p1__5994_SHARP_.channel_ids))
  }), "\ufdd0:views", cljs.core.PersistentVector.fromArray([lsc_web.cross.bar_view.call(null, "\ufdd0:domain", cljs.core.PersistentVector.fromArray([0, cljs.core.count.call(null, (new cljs.core.Keyword("\ufdd0:channels")).call(null, group)) - 1], true), "\ufdd0:size", "\ufdd0:small"), lsc_web.cross.column_view.call(null, "\ufdd0:width", 50)], true)), lsc_web.cross.field.call(null, "\ufdd0:name", "Weighted Peak Frequency [Hz]", "\ufdd0:dimension", lsc_web.cross.dimension.call(null, cross, function(p1__5995_SHARP_) {
    return lsc_app.coinc_cross.mean.call(null, p1__5995_SHARP_.weighted_freqs)
  }), "\ufdd0:views", cljs.core.PersistentVector.fromArray([lsc_web.cross.bar_view.call(null, "\ufdd0:domain", cljs.core.PersistentVector.fromArray([0, 16], true), "\ufdd0:bar-width", 0.25, "\ufdd0:size", "\ufdd0:medium"), lsc_web.cross.column_view.call(null, "\ufdd0:format", lsc_web.plots.d3.format(".1f"), "\ufdd0:width", 90)], true)), lsc_web.cross.field.call(null, "\ufdd0:name", "Mean (Peak Time - Start Time)  [s]", "\ufdd0:dimension", lsc_web.cross.dimension.call(null, cross, function(p1__5996_SHARP_) {
    return lsc_app.coinc_cross.mean.call(null, p1__5996_SHARP_.weighted_times) - p1__5996_SHARP_.time_min
  }), "\ufdd0:views", cljs.core.PersistentVector.fromArray([lsc_web.cross.bar_view.call(null, "\ufdd0:domain", cljs.core.PersistentVector.fromArray([0, 60], true), "\ufdd0:grouping", lsc_web.utils.floor, "\ufdd0:size", "\ufdd0:medium")], true)), lsc_web.cross.field.call(null, "\ufdd0:name", "Mean Delay [s]", "\ufdd0:dimension", lsc_web.cross.dimension.call(null, cross, function(coinc) {
    var t0 = cljs.core.first.call(null, coinc.times);
    return lsc_app.coinc_cross.mean.call(null, function() {
      var iter__3042__auto__ = function iter__6024(s__6025) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__6025__$1 = s__6025;
          while(true) {
            var temp__4092__auto__ = cljs.core.seq.call(null, s__6025__$1);
            if(temp__4092__auto__) {
              var s__6025__$2 = temp__4092__auto__;
              if(cljs.core.chunked_seq_QMARK_.call(null, s__6025__$2)) {
                var c__3040__auto__ = cljs.core.chunk_first.call(null, s__6025__$2);
                var size__3041__auto__ = cljs.core.count.call(null, c__3040__auto__);
                var b__6027 = cljs.core.chunk_buffer.call(null, size__3041__auto__);
                if(function() {
                  var i__6026 = 0;
                  while(true) {
                    if(i__6026 < size__3041__auto__) {
                      var t = cljs.core._nth.call(null, c__3040__auto__, i__6026);
                      cljs.core.chunk_append.call(null, b__6027, t - t0);
                      var G__6039 = i__6026 + 1;
                      i__6026 = G__6039;
                      continue
                    }else {
                      return true
                    }
                    break
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6027), iter__6024.call(null, cljs.core.chunk_rest.call(null, s__6025__$2)))
                }else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6027), null)
                }
              }else {
                var t = cljs.core.first.call(null, s__6025__$2);
                return cljs.core.cons.call(null, t - t0, iter__6024.call(null, cljs.core.rest.call(null, s__6025__$2)))
              }
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__3042__auto__.call(null, cljs.core.next.call(null, coinc.times))
    }())
  }), "\ufdd0:views", cljs.core.PersistentVector.fromArray([lsc_web.cross.bar_view.call(null, "\ufdd0:domain", cljs.core.PersistentVector.fromArray([0, 0.5], true), "\ufdd0:bar-width", 0.01, "\ufdd0:size", "\ufdd0:medium"), lsc_web.cross.column_view.call(null, "\ufdd0:format", lsc_web.plots.d3.format(".3f"), "\ufdd0:width", 60)], true)), lsc_web.cross.field.call(null, "\ufdd0:name", "Mean Frequency Bandwidth [Hz]", "\ufdd0:dimension", lsc_web.cross.dimension.call(null, cross, function(coinc) {
    return lsc_app.coinc_cross.mean.call(null, function() {
      var iter__3042__auto__ = function iter__6028(s__6029) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__6029__$1 = s__6029;
          while(true) {
            var temp__4092__auto__ = cljs.core.seq.call(null, s__6029__$1);
            if(temp__4092__auto__) {
              var s__6029__$2 = temp__4092__auto__;
              if(cljs.core.chunked_seq_QMARK_.call(null, s__6029__$2)) {
                var c__3040__auto__ = cljs.core.chunk_first.call(null, s__6029__$2);
                var size__3041__auto__ = cljs.core.count.call(null, c__3040__auto__);
                var b__6031 = cljs.core.chunk_buffer.call(null, size__3041__auto__);
                if(function() {
                  var i__6030 = 0;
                  while(true) {
                    if(i__6030 < size__3041__auto__) {
                      var vec__6034 = cljs.core._nth.call(null, c__3040__auto__, i__6030);
                      var f_low = cljs.core.nth.call(null, vec__6034, 0, null);
                      var f_high = cljs.core.nth.call(null, vec__6034, 1, null);
                      cljs.core.chunk_append.call(null, b__6031, f_high - f_low);
                      var G__6040 = i__6030 + 1;
                      i__6030 = G__6040;
                      continue
                    }else {
                      return true
                    }
                    break
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6031), iter__6028.call(null, cljs.core.chunk_rest.call(null, s__6029__$2)))
                }else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6031), null)
                }
              }else {
                var vec__6035 = cljs.core.first.call(null, s__6029__$2);
                var f_low = cljs.core.nth.call(null, vec__6035, 0, null);
                var f_high = cljs.core.nth.call(null, vec__6035, 1, null);
                return cljs.core.cons.call(null, f_high - f_low, iter__6028.call(null, cljs.core.rest.call(null, s__6029__$2)))
              }
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__3042__auto__.call(null, coinc.freq_bands)
    }())
  }), "\ufdd0:views", cljs.core.PersistentVector.fromArray([lsc_web.cross.bar_view.call(null, "\ufdd0:domain", cljs.core.PersistentVector.fromArray([0, 16], true), "\ufdd0:bar-width", 0.25, "\ufdd0:size", "\ufdd0:medium"), lsc_web.cross.column_view.call(null, "\ufdd0:format", lsc_web.plots.d3.format(".1f"), "\ufdd0:width", 90)], true)), array_dim.call(null, "Frequency [Hz]", function(p1__5997_SHARP_) {
    return p1__5997_SHARP_.weighted_freqs
  }, lsc_web.plots.d3.format(".2f"), 70), array_dim.call(null, "SNR", function(p1__5998_SHARP_) {
    return p1__5998_SHARP_.snrs
  }, lsc_web.plots.d3.format(".2f"), 50), lsc_web.cross.field.call(null, "\ufdd0:name", "Time Series", "\ufdd0:dimension", lsc_web.cross.dimension.call(null, cross, function(p1__5999_SHARP_) {
    return p1__5999_SHARP_.id
  }), "\ufdd0:views", cljs.core.PersistentVector.fromArray([lsc_web.cross.column_view.call(null, "\ufdd0:format", function() {
    return""
  }, "\ufdd0:width", 60, "\ufdd0:describe", function(elem, p__6036) {
    var vec__6037 = p__6036;
    var coinc = cljs.core.nth.call(null, vec__6037, 0, null);
    var _ = cljs.core.nth.call(null, vec__6037, 1, null);
    var ___$1 = cljs.core.nth.call(null, vec__6037, 2, null);
    if(cljs.core.truth_(coinc)) {
      return elem.append("a").attr("href", lsc_app.coinc_cross.time_series_url.call(null, group, coinc)).attr("target", "_blank").text("View")
    }else {
      return null
    }
  })], true)))
};
lsc_app.coinc_cross.add_label = function add_label(group, container) {
  lsc_web.plots.style_BANG_.call(null, container.append("div"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:font-weight", "bold", "\ufdd0:font-size", "18px"], true)).text((new cljs.core.Keyword("\ufdd0:name")).call(null, group));
  return lsc_web.plots.style_BANG_.call(null, lsc_web.plots.style_BANG_.call(null, container.append("div"), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:clear", "both"], true)).selectAll("div.channel-info").data(cljs.core.to_array.call(null, (new cljs.core.Keyword("\ufdd0:channels")).call(null, group))).enter().append("div").classed("channel-info", true).text(function(p1__6001_SHARP_, p2__6000_SHARP_) {
    return[cljs.core.str("#"), cljs.core.str(p2__6000_SHARP_), cljs.core.str(" "), cljs.core.str((new cljs.core.Keyword("\ufdd0:subsystem")).call(null, p1__6001_SHARP_)), cljs.core.str(":"), cljs.core.str((new cljs.core.Keyword("\ufdd0:name")).call(null, p1__6001_SHARP_))].join("")
  }), cljs.core.PersistentArrayMap.fromArray(["\ufdd0:font-size", "10px", "\ufdd0:padding", "8px", "\ufdd0:float", "left"], true))
};
lsc_app.coinc_cross.run = function run() {
  var group = lsc_app.coinc_cross.get_group.call(null);
  var coinc_chan = lsc_app.coinc_cross.load_coincs.call(null, group);
  var container = lsc_web.plots.select.call(null, "body");
  lsc_app.coinc_cross.add_label.call(null, group, container);
  var c__4701__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4702__auto__ = function() {
      var switch__4627__auto__ = function(state_6058) {
        var state_val_6059 = state_6058[1];
        if(state_val_6059 === 2) {
          var inst_6053 = state_6058[2];
          var inst_6054 = lsc_app.coinc_cross.make_data_set.call(null, group, inst_6053);
          var inst_6055 = lsc_web.plots.select.call(null, "body");
          var inst_6056 = lsc_web.cross.show_views.call(null, inst_6054, inst_6055, 30, "Max SNR");
          var state_6058__$1 = state_6058;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_6058__$1, inst_6056)
        }else {
          if(state_val_6059 === 1) {
            var state_6058__$1 = state_6058;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_6058__$1, 2, coinc_chan)
          }else {
            return null
          }
        }
      };
      return function(switch__4627__auto__) {
        return function() {
          var state_machine__4628__auto__ = null;
          var state_machine__4628__auto____0 = function() {
            var statearr_6061 = new Array(5);
            statearr_6061[0] = state_machine__4628__auto__;
            statearr_6061[1] = 1;
            return statearr_6061
          };
          var state_machine__4628__auto____1 = function(state_6058) {
            while(true) {
              var result__4629__auto__ = switch__4627__auto__.call(null, state_6058);
              if(result__4629__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4629__auto__
              }
              break
            }
          };
          state_machine__4628__auto__ = function(state_6058) {
            switch(arguments.length) {
              case 0:
                return state_machine__4628__auto____0.call(this);
              case 1:
                return state_machine__4628__auto____1.call(this, state_6058)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4628__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4628__auto____0;
          state_machine__4628__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4628__auto____1;
          return state_machine__4628__auto__
        }()
      }(switch__4627__auto__)
    }();
    var state__4703__auto__ = function() {
      var statearr_6062 = f__4702__auto__.call(null);
      statearr_6062[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4701__auto__;
      return statearr_6062
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state__4703__auto__)
  });
  return c__4701__auto__
};
jayq.core.document_ready.call(null, lsc_app.coinc_cross.run);
goog.provide("lsc_web.windows");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("lsc_web.plots");
goog.require("lsc_web.data");
goog.provide("lsc_web.windows.Field");
lsc_web.windows.Field = function(name, accessor, __meta, __extmap) {
  this.name = name;
  this.accessor = accessor;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
lsc_web.windows.Field.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2895__auto__) {
  var self__ = this;
  var h__2768__auto__ = self__.__hash;
  if(!(h__2768__auto__ == null)) {
    return h__2768__auto__
  }else {
    var h__2768__auto____$1 = cljs.core.hash_imap.call(null, this__2895__auto__);
    self__.__hash = h__2768__auto____$1;
    return h__2768__auto____$1
  }
};
lsc_web.windows.Field.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2900__auto__, k__2901__auto__) {
  var self__ = this;
  return this__2900__auto__.cljs$core$ILookup$_lookup$arity$3(this__2900__auto__, k__2901__auto__, null)
};
lsc_web.windows.Field.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2902__auto__, k5776, else__2903__auto__) {
  var self__ = this;
  if(k5776 === "\ufdd0:name") {
    return self__.name
  }else {
    if(k5776 === "\ufdd0:accessor") {
      return self__.accessor
    }else {
      if("\ufdd0:else") {
        return cljs.core.get.call(null, self__.__extmap, k5776, else__2903__auto__)
      }else {
        return null
      }
    }
  }
};
lsc_web.windows.Field.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2907__auto__, k__2908__auto__, G__5775) {
  var self__ = this;
  var pred__5778 = cljs.core.identical_QMARK_;
  var expr__5779 = k__2908__auto__;
  if(pred__5778.call(null, "\ufdd0:name", expr__5779)) {
    return new lsc_web.windows.Field(G__5775, self__.accessor, self__.__meta, self__.__extmap, null)
  }else {
    if(pred__5778.call(null, "\ufdd0:accessor", expr__5779)) {
      return new lsc_web.windows.Field(self__.name, G__5775, self__.__meta, self__.__extmap, null)
    }else {
      return new lsc_web.windows.Field(self__.name, self__.accessor, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__2908__auto__, G__5775), null)
    }
  }
};
lsc_web.windows.Field.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__2914__auto__, writer__2915__auto__, opts__2916__auto__) {
  var self__ = this;
  var pr_pair__2917__auto__ = function(keyval__2918__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__2915__auto__, cljs.core.pr_writer, "", " ", "", opts__2916__auto__, keyval__2918__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__2915__auto__, pr_pair__2917__auto__, "#lsc-web.windows.Field{", ", ", "}", opts__2916__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0:name", self__.name), cljs.core.vector.call(null, "\ufdd0:accessor", self__.accessor)], true), self__.__extmap))
};
lsc_web.windows.Field.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2905__auto__, entry__2906__auto__) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2906__auto__)) {
    return this__2905__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2905__auto__, cljs.core._nth.call(null, entry__2906__auto__, 0), cljs.core._nth.call(null, entry__2906__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2905__auto__, entry__2906__auto__)
  }
};
lsc_web.windows.Field.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2912__auto__) {
  var self__ = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0:name", self__.name), cljs.core.vector.call(null, "\ufdd0:accessor", self__.accessor)], true), self__.__extmap))
};
lsc_web.windows.Field.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2904__auto__) {
  var self__ = this;
  return 2 + cljs.core.count.call(null, self__.__extmap)
};
lsc_web.windows.Field.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2896__auto__, other__2897__auto__) {
  var self__ = this;
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = other__2897__auto__;
    if(cljs.core.truth_(and__3941__auto__)) {
      var and__3941__auto____$1 = this__2896__auto__.constructor === other__2897__auto__.constructor;
      if(and__3941__auto____$1) {
        return cljs.core.equiv_map.call(null, this__2896__auto__, other__2897__auto__)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
lsc_web.windows.Field.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2899__auto__, G__5775) {
  var self__ = this;
  return new lsc_web.windows.Field(self__.name, self__.accessor, G__5775, self__.__extmap, self__.__hash)
};
lsc_web.windows.Field.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2898__auto__) {
  var self__ = this;
  return self__.__meta
};
lsc_web.windows.Field.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2909__auto__, k__2910__auto__) {
  var self__ = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0:accessor", null, "\ufdd0:name", null], true), k__2910__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2909__auto__), self__.__meta), k__2910__auto__)
  }else {
    return new lsc_web.windows.Field(self__.name, self__.accessor, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__2910__auto__)), null)
  }
};
lsc_web.windows.Field.cljs$lang$type = true;
lsc_web.windows.Field.cljs$lang$ctorPrSeq = function(this__2935__auto__) {
  return cljs.core.list.call(null, "lsc-web.windows/Field")
};
lsc_web.windows.Field.cljs$lang$ctorPrWriter = function(this__2935__auto__, writer__2936__auto__) {
  return cljs.core._write.call(null, writer__2936__auto__, "lsc-web.windows/Field")
};
lsc_web.windows.__GT_Field = function __GT_Field(name, accessor) {
  return new lsc_web.windows.Field(name, accessor)
};
lsc_web.windows.map__GT_Field = function map__GT_Field(G__5777) {
  return new lsc_web.windows.Field((new cljs.core.Keyword("\ufdd0:name")).call(null, G__5777), (new cljs.core.Keyword("\ufdd0:accessor")).call(null, G__5777), null, cljs.core.dissoc.call(null, G__5777, "\ufdd0:name", "\ufdd0:accessor"))
};
lsc_web.windows.fields = cljs.core.map.call(null, function(p1__5771_SHARP_) {
  return cljs.core.apply.call(null, lsc_web.windows.__GT_Field, p1__5771_SHARP_)
}, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray(["Number of Coincidences", function(p1__5772_SHARP_) {
  return p1__5772_SHARP_.num.overall_coincs
}], true), cljs.core.PersistentVector.fromArray(["Coincidence Rate [1/s]", function(p1__5773_SHARP_) {
  return p1__5773_SHARP_.rates.overall_coincs
}], true), cljs.core.PersistentVector.fromArray(["Mean dt [s]", function(p1__5774_SHARP_) {
  return p1__5774_SHARP_.dts.mean
}], true)], true));
lsc_web.windows.add_selector = function() {
  var add_selector = null;
  var add_selector__0 = function() {
    return add_selector.call(null, "body")
  };
  var add_selector__1 = function(container) {
    var field_selected = cljs.core.async.chan.call(null);
    var selector = d3.select(container).append("select");
    var options = selector.selectAll("option").data(cljs.core.to_array.call(null, lsc_web.windows.fields)).enter().append("option");
    options.text(function(p1__5781_SHARP_) {
      return(new cljs.core.Keyword("\ufdd0:name")).call(null, p1__5781_SHARP_)
    });
    selector.on("change", function() {
      var index = selector.node().selectedIndex;
      return cljs.core.async.put_BANG_.call(null, field_selected, cljs.core.nth.call(null, lsc_web.windows.fields, index))
    });
    cljs.core.async.put_BANG_.call(null, field_selected, cljs.core.first.call(null, lsc_web.windows.fields));
    return field_selected
  };
  add_selector = function(container) {
    switch(arguments.length) {
      case 0:
        return add_selector__0.call(this);
      case 1:
        return add_selector__1.call(this, container)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_selector.cljs$core$IFn$_invoke$arity$0 = add_selector__0;
  add_selector.cljs$core$IFn$_invoke$arity$1 = add_selector__1;
  return add_selector
}();
lsc_web.windows.setup_plot = function setup_plot(group) {
  var labels = new lsc_web.plots.LabeledCanvas((new cljs.core.Keyword("\ufdd0:name")).call(null, group), "Window [s]", "");
  var canvas = lsc_web.plots.prepare_BANG_.call(null, labels, lsc_web.plots.select.call(null, "\ufdd0:#container"));
  var axes = new lsc_web.plots.XYAxes(lsc_web.plots.scale.call(null, cljs.core.PersistentVector.fromArray([0, 1], true)), lsc_web.plots.scale.call(null, cljs.core.PersistentVector.fromArray([0, 1], true)), true);
  var scatter = new lsc_web.plots.ScatterPlot(axes, "\ufdd0:top-right", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:actual", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:label", "Actual", "\ufdd0:marker-size", 4], true), "\ufdd0:time-offset", cljs.core.PersistentArrayMap.fromArray(["\ufdd0:label", "Time-Offset", "\ufdd0:marker-size", 3, "\ufdd0:color", "#777777"], true)], true));
  lsc_web.plots.prepare_BANG_.call(null, axes, canvas);
  lsc_web.plots.update_BANG_.call(null, scatter, canvas);
  return cljs.core.PersistentArrayMap.fromArray(["\ufdd0:labels", labels, "\ufdd0:axes", axes, "\ufdd0:scatter", scatter, "\ufdd0:canvas", canvas], true)
};
lsc_web.windows.plot_field = function plot_field(plot, data, field) {
  var canvas = (new cljs.core.Keyword("\ufdd0:canvas")).call(null, plot);
  var labels = cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0:labels")).call(null, plot), "\ufdd0:y-label", (new cljs.core.Keyword("\ufdd0:name")).call(null, field));
  var accessor = (new cljs.core.Keyword("\ufdd0:accessor")).call(null, field);
  var actual_vals = cljs.core.map.call(null, function(canvas, labels, accessor) {
    return function(datum) {
      return cljs.core.PersistentVector.fromArray([datum.window, accessor.call(null, datum.actual)], true)
    }
  }(canvas, labels, accessor), data);
  var get_offset_vals = function(canvas, labels, accessor, actual_vals) {
    return function(datum) {
      return cljs.core.map.call(null, function(canvas, labels, accessor, actual_vals) {
        return function(offset) {
          return cljs.core.PersistentVector.fromArray([datum.window, accessor.call(null, offset)], true)
        }
      }(canvas, labels, accessor, actual_vals), datum.rand)
    }
  }(canvas, labels, accessor, actual_vals);
  var offset_vals = cljs.core.mapcat.call(null, get_offset_vals, data);
  var y_limits = lsc_web.plots.extent.call(null, cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.second, offset_vals), cljs.core.map.call(null, cljs.core.second, actual_vals)));
  var axes = cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0:axes")).call(null, plot), "\ufdd0:y-scale", lsc_web.plots.scale.call(null, y_limits));
  var scatter = cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0:scatter")).call(null, plot), "\ufdd0:axes", axes);
  lsc_web.plots.update_BANG_.call(null, labels, canvas);
  lsc_web.plots.update_BANG_.call(null, axes, canvas);
  return lsc_web.plots.draw_BANG_.call(null, scatter, canvas, cljs.core.PersistentArrayMap.fromArray(["\ufdd0:actual", actual_vals, "\ufdd0:time-offset", offset_vals], true))
};
lsc_web.windows.run = function run(group) {
  var plot = lsc_web.windows.setup_plot.call(null, group);
  var field_selected = lsc_web.windows.add_selector.call(null);
  console.log(plot);
  var c__4701__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__4702__auto__ = function() {
      var switch__4627__auto__ = function(state_5846) {
        var state_val_5847 = state_5846[1];
        if(state_val_5847 === 2) {
          var inst_5824 = state_5846[2];
          var inst_5825 = console.log(inst_5824);
          var inst_5826 = cljs.core.first.call(null, lsc_web.windows.fields);
          var inst_5827 = lsc_web.windows.plot_field.call(null, plot, inst_5824, inst_5826);
          var inst_5842 = cljs.core.async.chan.call(null, 1);
          var inst_5843 = function() {
            var c__4701__auto____$1 = inst_5842;
            var data = inst_5824;
            return function(c__4701__auto____$1, data, inst_5824, inst_5825, inst_5826, inst_5827, inst_5842, state_val_5847) {
              return function() {
                var f__4702__auto__ = function() {
                  var switch__4627__auto__ = function(c__4701__auto____$1, data, inst_5824, inst_5825, inst_5826, inst_5827, inst_5842, state_val_5847) {
                    return function(state_5840) {
                      var state_val_5841 = state_5840[1];
                      if(state_val_5841 === 7) {
                        var inst_5831 = state_5840[2];
                        var inst_5832 = lsc_web.windows.plot_field.call(null, plot, data, inst_5831);
                        var state_5840__$1 = function() {
                          var statearr_5848 = state_5840;
                          statearr_5848[5] = inst_5832;
                          return statearr_5848
                        }();
                        var statearr_5849_5862 = state_5840__$1;
                        statearr_5849_5862[2] = null;
                        statearr_5849_5862[1] = 2;
                        return"\ufdd0:recur"
                      }else {
                        if(state_val_5841 === 6) {
                          var inst_5836 = state_5840[2];
                          var state_5840__$1 = state_5840;
                          var statearr_5850_5863 = state_5840__$1;
                          statearr_5850_5863[2] = inst_5836;
                          statearr_5850_5863[1] = 3;
                          return"\ufdd0:recur"
                        }else {
                          if(state_val_5841 === 5) {
                            var state_5840__$1 = state_5840;
                            var statearr_5851_5864 = state_5840__$1;
                            statearr_5851_5864[2] = null;
                            statearr_5851_5864[1] = 6;
                            return"\ufdd0:recur"
                          }else {
                            if(state_val_5841 === 4) {
                              var state_5840__$1 = state_5840;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5840__$1, 7, field_selected)
                            }else {
                              if(state_val_5841 === 3) {
                                var inst_5838 = state_5840[2];
                                var state_5840__$1 = state_5840;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5840__$1, inst_5838)
                              }else {
                                if(state_val_5841 === 2) {
                                  var state_5840__$1 = state_5840;
                                  if(true) {
                                    var statearr_5852_5865 = state_5840__$1;
                                    statearr_5852_5865[1] = 4
                                  }else {
                                    var statearr_5853_5866 = state_5840__$1;
                                    statearr_5853_5866[1] = 5
                                  }
                                  return"\ufdd0:recur"
                                }else {
                                  if(state_val_5841 === 1) {
                                    var state_5840__$1 = state_5840;
                                    var statearr_5854_5867 = state_5840__$1;
                                    statearr_5854_5867[2] = null;
                                    statearr_5854_5867[1] = 2;
                                    return"\ufdd0:recur"
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }(c__4701__auto____$1, data, inst_5824, inst_5825, inst_5826, inst_5827, inst_5842, state_val_5847);
                  return function(switch__4627__auto__, c__4701__auto____$1, data, inst_5824, inst_5825, inst_5826, inst_5827, inst_5842, state_val_5847) {
                    return function() {
                      var state_machine__4628__auto__ = null;
                      var state_machine__4628__auto____0 = function() {
                        var statearr_5856 = new Array(6);
                        statearr_5856[0] = state_machine__4628__auto__;
                        statearr_5856[1] = 1;
                        return statearr_5856
                      };
                      var state_machine__4628__auto____1 = function(state_5840) {
                        while(true) {
                          var result__4629__auto__ = switch__4627__auto__.call(null, state_5840);
                          if(result__4629__auto__ === "\ufdd0:recur") {
                            continue
                          }else {
                            return result__4629__auto__
                          }
                          break
                        }
                      };
                      state_machine__4628__auto__ = function(state_5840) {
                        switch(arguments.length) {
                          case 0:
                            return state_machine__4628__auto____0.call(this);
                          case 1:
                            return state_machine__4628__auto____1.call(this, state_5840)
                        }
                        throw new Error("Invalid arity: " + arguments.length);
                      };
                      state_machine__4628__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4628__auto____0;
                      state_machine__4628__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4628__auto____1;
                      return state_machine__4628__auto__
                    }()
                  }(switch__4627__auto__, c__4701__auto____$1, data, inst_5824, inst_5825, inst_5826, inst_5827, inst_5842, state_val_5847)
                }();
                var state__4703__auto__ = function() {
                  var statearr_5857 = f__4702__auto__.call(null);
                  statearr_5857[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4701__auto____$1;
                  return statearr_5857
                }();
                return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state__4703__auto__)
              }
            }(c__4701__auto____$1, data, inst_5824, inst_5825, inst_5826, inst_5827, inst_5842, state_val_5847)
          }();
          var inst_5844 = cljs.core.async.impl.dispatch.run.call(null, inst_5843);
          var state_5846__$1 = function() {
            var statearr_5858 = state_5846;
            statearr_5858[5] = inst_5825;
            statearr_5858[6] = inst_5844;
            statearr_5858[7] = inst_5827;
            return statearr_5858
          }();
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_5846__$1, inst_5842)
        }else {
          if(state_val_5847 === 1) {
            var inst_5822 = lsc_web.data.load_json.call(null, "windows-0.json");
            var state_5846__$1 = state_5846;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_5846__$1, 2, inst_5822)
          }else {
            return null
          }
        }
      };
      return function(switch__4627__auto__) {
        return function() {
          var state_machine__4628__auto__ = null;
          var state_machine__4628__auto____0 = function() {
            var statearr_5860 = new Array(8);
            statearr_5860[0] = state_machine__4628__auto__;
            statearr_5860[1] = 1;
            return statearr_5860
          };
          var state_machine__4628__auto____1 = function(state_5846) {
            while(true) {
              var result__4629__auto__ = switch__4627__auto__.call(null, state_5846);
              if(result__4629__auto__ === "\ufdd0:recur") {
                continue
              }else {
                return result__4629__auto__
              }
              break
            }
          };
          state_machine__4628__auto__ = function(state_5846) {
            switch(arguments.length) {
              case 0:
                return state_machine__4628__auto____0.call(this);
              case 1:
                return state_machine__4628__auto____1.call(this, state_5846)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__4628__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__4628__auto____0;
          state_machine__4628__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__4628__auto____1;
          return state_machine__4628__auto__
        }()
      }(switch__4627__auto__)
    }();
    var state__4703__auto__ = function() {
      var statearr_5861 = f__4702__auto__.call(null);
      statearr_5861[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__4701__auto__;
      return statearr_5861
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state__4703__auto__)
  });
  return c__4701__auto__
};
